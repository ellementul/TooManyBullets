/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunktmb_host"] = self["webpackChunktmb_host"] || []).push([["vendors-node_modules_ellementul_uee-ws-browser-transport_index_js-node_modules_ellementul_uni-9ff3ba"],{

/***/ "./node_modules/@ellementul/message-types/core.js":
/*!********************************************************!*\
  !*** ./node_modules/@ellementul/message-types/core.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar typeID = \"UIDOFTYPEOFTYPESJS\";\nvar crTypeID = \"UIDOFCONSTRUCTOROFTYPEOFTYPESJS\";\n\nvar isTest = true;\n\nvar Types = {\n\tnewType: function (name, CrType, outJSON){\n\t\tif(typeof name != \"string\")\n\t\t\tthrow new Error(\"name isn't String!\")\n\n\t\tif(typeof CrType != \"function\")\n\t\t\tthrow new Error(\"CrType isn't Function!\")\n\n\t\tif(typeof outJSON != \"function\")\n\t\t\tthrow new Error(\"outJSON isn't Function!\")\n\n\t\tif(this[name]){\n\t\t\tconsole.warn(\"Type \" + name + \"already created!\");\n\t\t\treturn;\n\t\t}\n\n\t\tvar newType = {\n\t\t\tname: name,\n\t\t\tDef: newCreator(CrType),\n\t\t\toutJSON: crOutJSON(outJSON),\n\t\t};\n\n\t\tnewType[crTypeID] = crTypeID;\n\n\t\tthis[name] = newType;\n\n\t\treturn this[name];\n\n\t},\n\toutJSON: function (json) {\n\t\tif(typeof json == \"string\")\n\t\t\tjson = JSON.parse(json)\n\n\t\tif(this.isCrType(Types[json.name]))\n\t\t\treturn Types[json.name].outJSON(json)\n\t\telse\n\t\t\tthrow \"The got object isn't json type!\"\n\t},\n\tisType: isType,\n\tisCrType: isCrType,\n\tget isTest(){return isTest},\n\tset isTest(val){isTest = !!val},\n\targError: function argError(wrong_arg, mess){\n\t\tif(mess === undefined) mess = '';\n\t\tvar ER = new TypeError('Argument type is wrong! Arguments(' + forArg(wrong_arg) + ');' + mess);\n\t\tER.wrong_arg = wrong_arg;\n\n\t\tif (Error.captureStackTrace) {\n\t\t\tError.captureStackTrace(ER, argError);\n\t\t}\n\n\t\treturn ER;\n\n\t\tfunction forArg(args){\n\t\t\tvar str_args = '';\n\t\t\tfor(var i = 0; i < args.length; i++){\n\t\t\t\tstr_args += typeof(args[i]) + ': ' + args[i] + '; ';\n\t\t\t}\n\t\t\treturn str_args;\n\t\t}\n\t}\n};\n\nfunction newCreator(CrType){\t\n\treturn function(){\n\n\t\tvar type = CrType.apply(CrType, arguments);\n\t\tmixType(type);\n\t\t\n\t\treturn type;\n\t};\n}\n\n\n\nfunction crOutJSON(outJSON){\n\treturn function(json){\n\n\t\tif(typeof json == \"string\")\n\t\t\tjson = JSON.parse(json)\n\t\t\n\t\tvar type = outJSON(json);\n\t\tmixType(type);\n\n\t\treturn type\n\t}\n}\n\nfunction mixType(type){\n\ttype[typeID] = typeID;\n\ttype.toJSON = crToJSON(type.preJSON);\n\ttype.test = wrapTest(type.test);\n}\n\nfunction wrapTest(test){\n\treturn function(val){\n\t\tif(isTest)\n\t\t\treturn test(val);\n\t\treturn false;\n\t}\n}\n\nfunction crToJSON(preJSON){\n\treturn function(tabs){\n\t\tvar preJson = Object.assign({}, preJSON());\n\t\tdelete preJson.toJSON;\n\t\treturn JSON.stringify(preJson, \"\", tabs);\n\t}\n}\n\nfunction isType(type) {\n\treturn typeof type == \"object\" && type[typeID] == typeID \n\t\t\t&& typeof type.rand == \"function\" \n\t\t\t&& typeof type.test == \"function\"\n\t\t\t&& typeof type.preJSON == \"function\"\n\t\t\t&& typeof type.toJSON == \"function\";\n}\n\nfunction isCrType(crType){\n\treturn typeof crType == \"object\" && crType[crTypeID] == crTypeID\n\t\t\t&& typeof crType.Def == \"function\" \n\t\t\t&& typeof crType.outJSON == \"function\";\n}\n\nmodule.exports = Types;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/core.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@ellementul/message-types/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Types = __webpack_require__(/*! ./core.js */ \"./node_modules/@ellementul/message-types/core.js\");\n\n__webpack_require__(/*! ./types/template/type.js */ \"./node_modules/@ellementul/message-types/types/template/type.js\")(Types);\n__webpack_require__(/*! ./types/const/type.js */ \"./node_modules/@ellementul/message-types/types/const/type.js\")(Types);\n__webpack_require__(/*! ./types/bool/type.js */ \"./node_modules/@ellementul/message-types/types/bool/type.js\")(Types);\n__webpack_require__(/*! ./types/number/type.js */ \"./node_modules/@ellementul/message-types/types/number/type.js\")(Types);\n__webpack_require__(/*! ./types/index/type.js */ \"./node_modules/@ellementul/message-types/types/index/type.js\")(Types);\n__webpack_require__(/*! ./types/key/type.js */ \"./node_modules/@ellementul/message-types/types/key/type.js\")(Types);\n__webpack_require__(/*! ./types/object/type.js */ \"./node_modules/@ellementul/message-types/types/object/type.js\")(Types);\n__webpack_require__(/*! ./types/array/type.js */ \"./node_modules/@ellementul/message-types/types/array/type.js\")(Types);\n__webpack_require__(/*! ./types/any/type.js */ \"./node_modules/@ellementul/message-types/types/any/type.js\")(Types);\n__webpack_require__(/*! ./types/string/type.js */ \"./node_modules/@ellementul/message-types/types/string/type.js\")(Types);\n__webpack_require__(/*! ./types/switch/type.js */ \"./node_modules/@ellementul/message-types/types/switch/type.js\")(Types);\n__webpack_require__(/*! ./types/uuid/type.js */ \"./node_modules/@ellementul/message-types/types/uuid/type.js\")(Types);\n\nmodule.exports = Types;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nObject.defineProperty(exports, \"NIL\", ({\n  enumerable: true,\n  get: function get() {\n    return _nil.default;\n  }\n}));\nObject.defineProperty(exports, \"parse\", ({\n  enumerable: true,\n  get: function get() {\n    return _parse.default;\n  }\n}));\nObject.defineProperty(exports, \"stringify\", ({\n  enumerable: true,\n  get: function get() {\n    return _stringify.default;\n  }\n}));\nObject.defineProperty(exports, \"v1\", ({\n  enumerable: true,\n  get: function get() {\n    return _v.default;\n  }\n}));\nObject.defineProperty(exports, \"v3\", ({\n  enumerable: true,\n  get: function get() {\n    return _v2.default;\n  }\n}));\nObject.defineProperty(exports, \"v4\", ({\n  enumerable: true,\n  get: function get() {\n    return _v3.default;\n  }\n}));\nObject.defineProperty(exports, \"v5\", ({\n  enumerable: true,\n  get: function get() {\n    return _v4.default;\n  }\n}));\nObject.defineProperty(exports, \"validate\", ({\n  enumerable: true,\n  get: function get() {\n    return _validate.default;\n  }\n}));\nObject.defineProperty(exports, \"version\", ({\n  enumerable: true,\n  get: function get() {\n    return _version.default;\n  }\n}));\n\nvar _v = _interopRequireDefault(__webpack_require__(/*! ./v1.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v1.js\"));\n\nvar _v2 = _interopRequireDefault(__webpack_require__(/*! ./v3.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v3.js\"));\n\nvar _v3 = _interopRequireDefault(__webpack_require__(/*! ./v4.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v4.js\"));\n\nvar _v4 = _interopRequireDefault(__webpack_require__(/*! ./v5.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v5.js\"));\n\nvar _nil = _interopRequireDefault(__webpack_require__(/*! ./nil.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/nil.js\"));\n\nvar _version = _interopRequireDefault(__webpack_require__(/*! ./version.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/version.js\"));\n\nvar _validate = _interopRequireDefault(__webpack_require__(/*! ./validate.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/validate.js\"));\n\nvar _stringify = _interopRequireDefault(__webpack_require__(/*! ./stringify.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/stringify.js\"));\n\nvar _parse = _interopRequireDefault(__webpack_require__(/*! ./parse.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/md5.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/md5.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nvar _default = md5;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/md5.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/native.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/native.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar _default = {\n  randomUUID\n};\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/native.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/nil.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/nil.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/nil.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/parse.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/parse.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _validate = _interopRequireDefault(__webpack_require__(/*! ./validate.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/parse.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/regex.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/regex.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/regex.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/rng.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/rng.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = rng;\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\n\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/rng.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/sha1.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/sha1.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nvar _default = sha1;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/sha1.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/stringify.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/stringify.js ***!
  \*****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\nexports.unsafeStringify = unsafeStringify;\n\nvar _validate = _interopRequireDefault(__webpack_require__(/*! ./validate.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/stringify.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v1.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v1.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _rng = _interopRequireDefault(__webpack_require__(/*! ./rng.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/rng.js\"));\n\nvar _stringify = __webpack_require__(/*! ./stringify.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.unsafeStringify)(b);\n}\n\nvar _default = v1;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v1.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v3.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v3.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _v = _interopRequireDefault(__webpack_require__(/*! ./v35.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v35.js\"));\n\nvar _md = _interopRequireDefault(__webpack_require__(/*! ./md5.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v3.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v35.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v35.js ***!
  \***********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports.URL = exports.DNS = void 0;\nexports[\"default\"] = v35;\n\nvar _stringify = __webpack_require__(/*! ./stringify.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/stringify.js\");\n\nvar _parse = _interopRequireDefault(__webpack_require__(/*! ./parse.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.unsafeStringify)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v35.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v4.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v4.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _native = _interopRequireDefault(__webpack_require__(/*! ./native.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/native.js\"));\n\nvar _rng = _interopRequireDefault(__webpack_require__(/*! ./rng.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/rng.js\"));\n\nvar _stringify = __webpack_require__(/*! ./stringify.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/stringify.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  if (_native.default.randomUUID && !buf && !options) {\n    return _native.default.randomUUID();\n  }\n\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.unsafeStringify)(rnds);\n}\n\nvar _default = v4;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v4.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v5.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v5.js ***!
  \**********************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _v = _interopRequireDefault(__webpack_require__(/*! ./v35.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v35.js\"));\n\nvar _sha = _interopRequireDefault(__webpack_require__(/*! ./sha1.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/v5.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/validate.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/validate.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _regex = _interopRequireDefault(__webpack_require__(/*! ./regex.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/validate.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/version.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/version.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", ({\n  value: true\n}));\nexports[\"default\"] = void 0;\n\nvar _validate = _interopRequireDefault(__webpack_require__(/*! ./validate.js */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.slice(14, 15), 16);\n}\n\nvar _default = version;\nexports[\"default\"] = _default;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/version.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/types/any/type.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/types/any/type.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst CrIndexType  =  __webpack_require__(/*! ../index/type.js */ \"./node_modules/@ellementul/message-types/types/index/type.js\");\nconst CrConstType  =  __webpack_require__(/*! ../index/type.js */ \"./node_modules/@ellementul/message-types/types/index/type.js\");\n\nconst typeName = \"Any\";\n\nvar argError = null;\n\nvar Types = null;\n\nfunction ExtendTypes(Core){\n\tTypes = Core;\n\targError = Core.argError;\n\n\tif(!Core.Index)\n\t\tCrIndexType(Core);\n\n\tif(!Core.Const)\n\t\tCrConstType(Core);\n\n\tCore.newType(typeName, ConstructorType, outJSON);\n}\n\nExtendTypes.typeName = typeName;\n\nfunction ConstructorType(types){\n\n\tif(!Array.isArray(types))\n\t\ttypes = Array.from(arguments);\n\n\tif(!Types.isType(types[0]))\n\t\tthrow argError(arguments, 'Wait args Array[Type(surelly), Type||null||undefined, ... Type||null||undefined]');\n\n\tif(types.length > 1)\n\t\tvar typeIndex = Types.Index.Def(types.length)\n\telse{\n\t\tvar typeIndex = Types.Index.Def(2)\n\t\ttypes[1] = Types.Const.Def();\n\t}\n\n\tvar type = {\n\t\trand: rand,\n\t\ttest: test,\n\t\tpreJSON: preJSON\n\t}\n\n\tfunction rand(){\n\t\treturn types[typeIndex.rand()].rand();\n\t}\n\n\tfunction test(value){\n\t\tvar result = types.every(typeItem => typeItem.test(value));\n\t\tif(result)\n\t\t\treturn { value: value, type: preJSON()};\n\t}\n\n\tfunction preJSON(){\n\t\tvar type = {};\n\t\ttype.name = typeName;\n\t\ttype.struct = types.map(typeItem => typeItem.preJSON());\n\t\treturn type;\n\t}\n\n\treturn type;\n\n}\n\nfunction outJSON(preType){\n\tif(typeof preType == \"object\" && preType.name == typeName)\n\t\treturn ConstructorType(preType.struct.map(itemOutJSON))\n\telse\n\t\tthrow new Error(\"This isn't type \" + typeName + \"!\");\n}\n\nmodule.exports = ExtendTypes;\n\nfunction itemOutJSON(preType){\n\tif(!Types.isCrType(Types[preType.name]))\n\t\tthrow new Error(\"Parsing Error! Type with name\" + nameType + \"is unknowed!\");\n\treturn Types[preType.name].outJSON(preType);\n}\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/types/any/type.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/types/array/type.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/types/array/type.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst typeName = \"Array\";\n\nconst CrIndexType  =  __webpack_require__(/*! ../index/type.js */ \"./node_modules/@ellementul/message-types/types/index/type.js\");\n\nvar argError = null;\n\nvar Types = null;\n\nfunction ExtendTypes(Core){\n\tTypes = Core;\n\targError = Core.argError;\n\tif(!Core.Index)\n\t\tCrIndexType(Core);\n\n\tCore.newType(typeName, ConstructorType, outJSON);\n}\n\nExtendTypes.typeName = typeName;\n\nfunction ConstructorType(itemType, maxLength, is_empty){\n\n\tvar maxLengthType = Types.Index.Def(1024*1024);\t\n\n\tif(!Types.isType(itemType)\n\t\t|| maxLengthType.test(maxLength))\n\t\tthrow argError(arguments, 'Wait args (Type, maxLength<1024*1024 [, isEmptyArray])');\n\n\tvar lengthType = Types.Index.Def(maxLength + 1);\n\n\tvar type = {\n\t\trand: rand,\n\t\ttest: test,\n\t\tpreJSON: preJSON\n\t}\n\n\tfunction rand(){\n\t\tvar length = lengthType.rand();\n\t\tvar arr = [];\n\n\t\tif(!is_empty)\n\t\t\tarr.push(itemType.rand());\n\n\t\twhile(arr.length < length)\n\t\t\tarr.push(itemType.rand());\n\n\t\treturn arr;\n\t}\n\n\tfunction test(arr){\n\t\tif(!Array.isArray(arr))\n\t\t\treturn { value: arr, type: preJSON()};\n\n\t\tif((arr.length > maxLength) || (!is_empty && arr.length == 0))\n\t\t\treturn { length: arr.length, type: preJSON()};\n\n\t\tvar err_arr = arr.map(itemType.test).filter(item => item);\n\n\t\tif(err_arr.length)\n\t\t\treturn { wrong_values: err_arr, type: preJSON()};\n\t}\n\n\tfunction preJSON(){\n\t\tvar type = {};\n\t\ttype.name = typeName;\n\t\ttype.struct = {type: itemType.preJSON(), maxLength: maxLength, is_empty: is_empty};\n\t\treturn type;\n\t}\n\n\treturn type;\n\n}\n\nfunction outJSON(preType){\n\tvar struct = preType.struct;\n\tvar nameType = struct.type.name;\n\n\tif(!Types.isCrType(Types[nameType]))\n\t\tthrow new Error(\"Parsing Error! Type with name\" + nameType + \"is unknowed!\");\n\n\tvar type = Types[nameType].outJSON(struct.type);\n\n\tif(typeof preType == \"object\" && preType.name == typeName)\n\t\treturn ConstructorType(type, struct.maxLength, struct.is_empty);\n\telse\n\t\tthrow new Error(\"This isn't type \" + typeName + \"!\");\n}\n\nmodule.exports = ExtendTypes;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/types/array/type.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/types/bool/type.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/types/bool/type.js ***!
  \*******************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nconst typeName = \"Bool\";\n\nfunction ExtendTypes(Core){\n\tCore.newType(typeName, ConstructorType, outJSON);\n}\n\nExtendTypes.typeName = typeName;\n\nfunction ConstructorType(){\n\n\tvar type = {\n\t\trand: rand,\n\t\ttest: test,\n\t\tpreJSON: preJSON\n\t}\n\n\tfunction rand(){\n\t\treturn Math.random() > 0.5;\n\t}\n\n\tfunction test(value){\n\t\tif(value !== false && value !== true)\n\t\t\treturn { value: value, type: preJSON()};\n\t}\n\n\tfunction preJSON(){\n\t\tvar type = {};\n\t\ttype.name = typeName;\n\t\treturn type;\n\t}\n\n\treturn type;\n\n}\n\nfunction outJSON(preType){\n\tif(typeof preType == \"object\" && preType.name == typeName)\n\t\treturn ConstructorType()\n\telse\n\t\tthrow new Error(\"This isn't boolean type!\");\n}\n\nmodule.exports = ExtendTypes;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/types/bool/type.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/types/const/type.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/types/const/type.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nconst typeName = \"Const\";\n\nvar argError = null;\n\nfunction ExtendTypes(Core){\n\targError = Core.argError;\n\tCore.newType(typeName, ConstructorType, outJSON);\n}\n\nExtendTypes.typeName = typeName;\n\nfunction ConstructorType(constVal){\n\n\tif(typeof constVal !== \"string\"\n\t\t&& typeof constVal !== \"number\"\n\t\t&& typeof constVal !== \"boolean\"\n\t\t&& typeof constVal !== \"function\"\n\t\t&& constVal)\n\t\tthrow argError(arguments, 'Wait argument is string || number || boolean || null || undefined || function');\n\n\tvar type = {\n\t\trand: rand,\n\t\ttest: test,\n\t\tpreJSON: preJSON\n\t}\n\n\tfunction rand(){\n\t\treturn constVal;\n\t}\n\n\tfunction test(value){\n\t\tif(value !== constVal)\n\t\t\treturn { value: value, type: preJSON()};\n\t}\n\n\tfunction preJSON(){\n\t\tvar type = {};\n\t\ttype.name = typeName;\n\t\ttype.struct = constVal;\n\t\treturn type;\n\t}\n\n\treturn type;\n\n}\n\nfunction outJSON(preType){\n\tif(typeof preType == \"object\" && preType.name == typeName)\n\t\treturn ConstructorType(preType.struct)\n\telse\n\t\tthrow new Error(\"This isn't type \" + typeName + \"!\");\n}\n\nmodule.exports = ExtendTypes;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/types/const/type.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/types/index/type.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/types/index/type.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nconst typeName = \"Index\";\nvar argError\n\nfunction ExtendTypes(Core){\n\targError = Core.argError;\n\tCore.newType(typeName, ConstructorType, outJSON);\n}\n\nExtendTypes.typeName = typeName;\n\nfunction ConstructorType(max){\n\n\tif(typeof max !== 'number' || !isFinite(max)\n\t\t||(max <= 0)\n\t\t||(max % 1 !== 0))\n\t\tthrow argError(arguments, 'Wait arguments: max(int>0)');\n\t\n\n\tvar type = {\n\t\trand: rand,\n\t\ttest: test,\n\t\tpreJSON: preJSON\n\t}\n\n\tfunction rand(){\n\t\treturn Math.floor(max * Math.abs(Math.random() - 0.01));\n\t}\n\n\tfunction test(n){\n\t\tif(typeof n !== 'number' || !isFinite(n))\n\t\t\treturn { value: n, type: preJSON()};\n\t\t\n\n\t\tif(n >= max || n < 0 || n % 1 !== 0)\n\t\t\treturn { value: n, type: preJSON()};\n\n\t\treturn false;\n\t}\n\n\tfunction preJSON(){\n\t\tvar type = {};\n\t\ttype.name = typeName;\n\t\ttype.struct = {\n\t\t\tmax: max\n\t\t};\n\t\treturn type;\n\t}\n\n\treturn type;\n\n}\n\nfunction outJSON(preType){\n\tvar arg = preType.struct;\n\n\tif(typeof preType == \"object\" && preType.name == typeName)\n\t\treturn ConstructorType(arg.max);\n\telse\n\t\tthrow new Error(\"This isn't type \" + typeName + \"!\");\n}\n\nmodule.exports = ExtendTypes;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/types/index/type.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/types/key/type.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/types/key/type.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst typeName = \"Key\";\n\nvar argError = null;\n\nconst CrIndexType  =  __webpack_require__(/*! ../index/type.js */ \"./node_modules/@ellementul/message-types/types/index/type.js\");\n\nvar Types = null;\n\nfunction ExtendTypes(Core){\n\tTypes = Core;\n\targError = Core.argError;\n\tif(!Core.Index)\n\t\tCrIndexType(Core);\n\n\tCore.newType(typeName, ConstructorType, outJSON);\n}\n\nExtendTypes.typeName = typeName;\n\nfunction ConstructorType(){\n\n\tvar chars = crChars();\n\tvar sizeType = Types.Index.Def(256);\n\tvar indexType = Types.Index.Def(chars.length);\n\tvar regEx =  /^[a-zA-Z0-9_]*$/;\n\n\tvar type = {\n\t\trand: rand,\n\t\ttest: test,\n\t\tpreJSON: preJSON\n\t}\n\n\tfunction rand(){\n\t\tvar size = sizeType.rand();\n\n\t\tvar str = '';\n\t\twhile(size){\n\t\t\tvar randIndex = indexType.rand()\n\t\t\tvar charNum = chars[randIndex];\n\t\t\tstr += String.fromCharCode(charNum);\n\t\t\tsize--;\n\t\t}\n\n\t\treturn str;\n\t}\n\n\tfunction test(str){\n\t\tif(typeof(str) !== 'string'\n\t\t||str.length > 256\n\t\t||!regEx.test(str)){\n\t\t\treturn { value: str, type: preJSON()};\n\t\t}\n\t}\n\n\tfunction preJSON(){\n\t\tvar type = {};\n\t\ttype.name = typeName;\n\t\treturn type;\n\t}\n\n\treturn type;\n\n}\n\nfunction outJSON(preType){\n\tif(typeof preType == \"object\" && preType.name == typeName)\n\t\treturn ConstructorType(preType.struct)\n\telse\n\t\tthrow new Error(\"This isn't type \" + typeName + \"!\");\n}\n\n\nfunction crChars(){\n\tvar arr_chars = rangeInArr((\"a\").charCodeAt(0), (\"z\").charCodeAt(0));\n\n\tarr_chars = arr_chars.concat(rangeInArr((\"A\").charCodeAt(0), (\"Z\").charCodeAt(0)));\n\n\tarr_chars = arr_chars.concat(rangeInArr((\"0\").charCodeAt(0), (\"9\").charCodeAt(0)));\n\n\tarr_chars.push((\"_\").charCodeAt(0));\n\n\treturn arr_chars;\n}\n\n\nfunction rangeInArr(beg, end){\n\tif(beg > end){\n\t\tvar tmp = beg;\n\t\tbeg = end;\n\t\tend = tmp;\n\t}\n\n\tvar arr = [];\n\tfor(var i = beg; i <= end; i++){\n\t\tarr.push(i);\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = ExtendTypes;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/types/key/type.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/types/number/type.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/types/number/type.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nconst typeName = \"Number\";\nvar argError\n\nfunction ExtendTypes(Core){\n\targError = Core.argError;\n\tCore.newType(typeName, ConstructorType, outJSON);\n}\n\nExtendTypes.typeName = typeName;\n\nfunction ConstructorType(max, min, precis){\n\n\tif(typeof min !== 'number' || !isFinite(min)\n\t\t||typeof max !== 'number' || !isFinite(max)\n\t\t||typeof precis !== 'number' || !isFinite(precis)\n\t\t||(max <= min)\n\t\t||(precis < 0)\n\t\t||(precis > 9)\n\t\t||(precis % 1 !== 0))\n\t\tthrow argError(arguments, 'Wait arguments: max(number), > min(number), precis(0<=number<9)');\n\t\n\n\tvar type = {\n\t\trand: rand,\n\t\ttest: test,\n\t\tpreJSON: preJSON\n\t}\n\n\tfunction rand(){\n\t\treturn +(((max - min)*Math.random() +  min).toFixed(precis));\n\t}\n\n\tfunction test(n){\n\t\tif(typeof n !== 'number' || !isFinite(n))\n\t\t\treturn new Error(JSON.stringify({ value: n, type: preJSON()}, \"\", 2));\n\t\t\n\n\t\tif((n > max)\n\t\t||(n < min)\n\t\t|| (n.toFixed(precis) != n && n !== 0) )\n\t\t\treturn new Error(JSON.stringify({ value: n, type: preJSON()}, \"\", 2));\n\n\t\treturn false;\n\t}\n\n\tfunction preJSON(){\n\t\tvar type = {};\n\t\ttype.name = typeName;\n\t\ttype.struct = {\n\t\t\tmin: min,\n\t\t\tmax: max,\n\t\t\tprecis: precis\n\t\t};\n\t\treturn type;\n\t}\n\n\treturn type;\n\n}\n\nfunction outJSON(preType){\n\tvar arg = preType.struct;\n\n\tif(typeof preType == \"object\" && preType.name == typeName)\n\t\treturn ConstructorType(arg.max, arg.min, arg.precis);\n\telse\n\t\tthrow new Error(\"This isn't type \" + typeName + \"!\");\n}\n\nmodule.exports = ExtendTypes;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/types/number/type.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/types/object/type.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/types/object/type.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("  \n\nconst typeName = \"Object\";\n\nvar argError = null;\n\nvar Types = null;\n\nfunction ExtendTypes(Core){\n\tTypes = Core;\n\targError = Core.argError;\n\tif(!Core.Const)\n\t\tCrIndexType(Const);\n\n\tCore.newType(typeName, ConstructorType, outJSON);\n}\n\nExtendTypes.typeName = typeName;\n\nfunction ConstructorType(sourceObj, non_strict_key){\n\tconst non_strict_keys = non_strict_key //|| true\n\n\tif(!sourceObj || typeof sourceObj !== \"object\")\n\t\tthrow argError(arguments, \"Argument isn't Object!\" );\n\t\n\n\tvar typeObj = reCostructObj(sourceObj);\n\n\tvar type = {\n\t\tname: typeName,\n\t\trand: rand,\n\t\ttest: test,\n\t\tpreJSON: preJSON\n\t}\n\n\tfunction rand(){\n\t\treturn genObj(typeObj);\n\t}\n\n\tfunction test(testingObj, objsStack){\n\t\treturn testObj(typeObj, testingObj, objsStack, non_strict_keys);\n\t}\n\n\tfunction preJSON(){\n\t\tvar type = {name: typeName};\n\t\ttype.struct = objPreJson(typeObj);\n\t\treturn type;\n\t}\n\n\treturn type;\n\n}\n\nfunction outJSON(preType){\n\n\tif(typeof preType == \"object\" && preType.name == typeName)\n\t\treturn ConstructorType(objOutJson(preType.struct));\n\telse\n\t\tthrow new Error(\"This isn't type \" + typeName + \"!\");\n}\n\nmodule.exports = ExtendTypes;\n\nfunction reCostructObj(sourceObj, objsStack){\n\n\tif(!objsStack)\n\t\tobjsStack = [];\n\t\n\tvar funcObj = {};\n\tobjsStack.push(sourceObj);\n\n\tfor(var key in sourceObj){\n\n\t\tif(Types.isType(sourceObj[key])){\n\t\t\tfuncObj[key] = sourceObj[key];\n\t\t\tcontinue;\n\t\t}\n\n\t\tif(!sourceObj || (typeof sourceObj[key] !== \"object\" && !Array.isArray(sourceObj[key]))){\n\t\t\tfuncObj[key] = Types.Const.Def(sourceObj[key]);\n\t\t}\n\t\telse if(objsStack.indexOf(sourceObj[key]) !== -1)\n\t\t\tdelete funcObj[key];\n\t\telse\n\t\t\tfuncObj[key] = reCostructObj(sourceObj[key], objsStack);\n\t}\n\n\tobjsStack.pop();\n\n\treturn funcObj;\n}\n\nfunction testObj(typeObj, testingObj, objsStack, non_strict_keys){\n\tif(!objsStack)\n\t\tobjsStack = [];\n\n\tobjsStack.push(testingObj);\n\n\tvar result = false;\n\n\tfor(let key in typeObj){\n\n\t\tif(Types.isType(typeObj[key]))\n\t\t\tresult = typeObj[key].test(testingObj[key]);\n\t\telse\n\t\t\tresult = testObj(typeObj[key], testingObj[key], objsStack, non_strict_keys)\n\n\t\tif(result)\n\t\t\treturn result;\n\t\t\n\t}\n\n\tfor(let key in testingObj){\n\t\tif(objsStack.indexOf(testingObj[key]) !== -1)\n\t\t\tcontinue;\n\n\t\tif(!Types.isType(typeObj[key]) && !non_strict_keys)\n\t\t\treturn { messege: \"Here cannot value!\", key: key, value: testingObj[key], type: {name: typeName, struct: objPreJson(typeObj[key])}};\n\t}\n\n\treturn result;\n\n}\n\nfunction genObj(typeObj){\n\tvar resultObj = {};\n\n\tfor(var key in typeObj){\n\t\tif(Types.isType(typeObj[key]))\n\t\t\tresultObj[key] = typeObj[key].rand();\n\t\telse \n\t\t\tresultObj[key] = genObj(typeObj[key]);\n\t}\n\n\treturn resultObj;\n}\n\nfunction objPreJson(typeObj){\n\tvar struct = {};\n\n\tfor(var key in typeObj){\n\t\tif(Types.isType(typeObj[key]))\n\t\t\tstruct[key] = typeObj[key].preJSON();\n\t\telse{\n\t\t\tstruct[key] = objPreJson(typeObj[key]);\n\t\t}\n\t}\n\n\treturn struct;\n}\n\nfunction objOutJson(jsonObj){\n\tvar obj = {};\n\n\tfor(var key in jsonObj){\n\t\tvar propJsonObj = jsonObj[key];\n\n\t\tif(typeof propJsonObj != \"object\")\n\t\t\t\tthrow new Error(\"Invalid scheme JSON, wrong value: \" + propJsonObj + \" with key: \" + key);\n\n\t\tif(propJsonObj.name && Types[propJsonObj.name] && Types.isCrType(Types[propJsonObj.name])){\n\t\t\tobj[key] = Types[propJsonObj.name].outJSON(propJsonObj);\n\t\t}\n\t\telse{\n\t\t\tobj[key] = objOutJson(propJsonObj);\n\t\t}\n\t}\n\n\treturn obj;\n}\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/types/object/type.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/types/string/type.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/types/string/type.js ***!
  \*********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nconst typeName = \"String\";\n\nlet argError = null;\n\nlet Types = null;\n\nfunction ExtendTypes(Core){\n\tTypes = Core;\n\targError = Core.argError;\n\tif(!Core.Index)\n\t\tCrIndexType(Core);\n\n\tCore.newType(typeName, ConstructorType, outJSON);\n}\n\nExtendTypes.typeName = typeName;\n\nfunction ConstructorType(symbolClass, maxLength){\n\n\tlet maxLengthType = Types.Index.Def(1024 * 1024);\n\n\tif(typeof symbolClass !== \"string\" || maxLengthType.test(maxLength - 1))\n\t\tthrow argError(arguments, 'Wait args ( SymbolClass(String), maxLength(1024*1024>=Index>0) )');\n\t\n\tif(symbolClass[0] == \"^\")\n\t\tsymbolClass = \"\\\\\" + symbolClass;\n\n\tlet rangeSimbol = parseRange(symbolClass);\n\tlet indexRangeType = Types.Index.Def(rangeSimbol.length);\n\n\tlet checkedRegExp = new RegExp('^[' + symbolClass + ']+$');\n\tlet lengthType = Types.Index.Def(maxLength);\n\n\n\tlet type = {\n\t\trand: rand,\n\t\ttest: test,\n\t\tpreJSON: preJSON\n\t}\n\n\tfunction rand(){\n\t\tlet length = lengthType.rand();\n\n\t\tif(length < 1)\n\t\t\tlength++;\n\n\t\tvar str = '';\n\n\t\twhile(length--){\n\t\t\tvar der = rangeSimbol[indexRangeType.rand()];\n\t\t\tstr +=String.fromCharCode(der);\n\t\t}\n\n\t\treturn str;\n\t}\n\n\tfunction test(str){\n\t\tif((typeof(str) !== 'string')\n\t\t\t|| lengthType.test(str.length - 1)\n\t\t\t|| !checkedRegExp.test(str)\n\t\t)\n\t\t\treturn { value: str, type: preJSON()};\n\t\t\n\n\t\treturn  false;\n\t}\n\n\tfunction preJSON(){\n\t\tvar type = {};\n\t\ttype.name = typeName;\n\t\ttype.struct = {\n\t\t\tsymbolClass, \n\t\t\tmaxLength,\n\t\t};\n\t\treturn type;\n\t}\n\n\treturn type;\n\n}\n\nfunction outJSON(preType){\n\tif(typeof preType == \"object\" && preType.name == typeName)\n\t\treturn ConstructorType(preType.struct.symbolClass, preType.struct.maxLength);\n\telse\n\t\tthrow new Error(\"This isn't type \" + typeName + \"!\");\n}\n\nfunction replaceSpecChar(c){\n\tswitch(c){\n\t\tcase 'w': return 'a-zA-Z0-9_';\n\t\tcase 'd': return '0-9';\n\t\tcase 's': return '\\\\t\\\\n\\\\v\\\\f\\\\r ';\n\n\t\tdefault: return c;\n\t}\n}\n\nfunction rangeInArr(beg, end){\n\tif(beg > end){\n\t\tvar tmp = beg;\n\t\tbeg = end;\n\t\tend = tmp;\n\t}\n\n\tvar arr = [];\n\tfor(var i = beg; i <= end; i++){\n\t\tarr.push(i);\n\t}\n\n\treturn arr;\n}\n\nfunction parseRange(parse_str){\n\tif(/\\\\./.test(parse_str)){\n\t\t\tparse_str = parse_str.replace(/\\\\(.)/g, function(str, char){ return replaceSpecChar(char);});\n\t}\n\n\tlet result = [];\n\n\tlet beg_char = parse_str[0];\n\tfor(let i = 1; i <= parse_str.length; i++){\n\n\t\tif(parse_str[i-1] !== '\\\\'\n\t\t\t&&parse_str[i] === '-'\n\t\t\t&&parse_str[i+1]){\n\t\t\ti++;\n\t\t\tlet end_char = parse_str[i];\n\n\t\t\tlet arr_chars = rangeInArr(beg_char.charCodeAt(0), end_char.charCodeAt(0));\n\t\t\tresult = result.concat(arr_chars);\n\n\t\t\ti++;\n\t\t}else{\n\t\t\tresult.push(beg_char.charCodeAt(0));\n\t\t}\n\n\t\tbeg_char = parse_str[i];\n\t}\n\treturn result;\n}\n\nmodule.exports = ExtendTypes;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/types/string/type.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/types/switch/type.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/types/switch/type.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nconst typeName = \"Switch\";\n\nlet argError = null;\n\nlet Types = null;\n\nconst CrIndexType  =  __webpack_require__(/*! ../index/type.js */ \"./node_modules/@ellementul/message-types/types/index/type.js\");\nconst CrKeyType  =  __webpack_require__(/*! ../key/type.js */ \"./node_modules/@ellementul/message-types/types/key/type.js\");\n\nfunction ExtendTypes(Core){\n\tTypes = Core;\n\targError = Core.argError;\n\tif(!Core.Index)\n\t\tCrIndexType(Core);\n\tif(!Core.Key)\n\t\tCrKeyType(Core);\n\tCore.newType(typeName, ConstructorType, outJSON);\n}\n\nExtendTypes.typeName = typeName;\n\nfunction ConstructorType(keyProps, typeObjs){\n\n\tlet keyType = Types.Key.Def();\n\n\tif(!Array.isArray(keyProps))\n\t\tkeyProps = [keyProps];\n\n\tif(keyProps.some(keyType.test))\n\t\tthrow argError(arguments, 'Wait the first argument Key || Array(Key)');\n\n\tif(!Array.isArray(typeObjs))\n\t\tthrow argError(arguments, 'Wait second argument Array!');\n\n\tlet keyArr = [];\n\n\tlet err = msg => argError(arguments, 'Wait second argument Array( Object{ [Key]: Key, prop: Type, ... }), ...); ' + msg);\n\n\tlet typeObjArr = typeObjs.map((sructObj, objIndex) => {\n\t\tif(typeof sructObj != \"object\")\n\t\t\tthrow err(\"Item \" + objIndex + \" in Array isn't Object\");\n\n\t\tlet obj = {};\n\n\t\tkeyArr[objIndex] = {};\n\t\tkeyProps.forEach(keyProp =>{\n\t\t\tif(keyType.test(sructObj[keyProp]))\n\t\t\t\tthrow err(\"Item \" + objIndex + \".\" + keyProp + \" isn't Key\");\n\t\t\telse\n\t\t\t\tkeyArr[objIndex][keyProp] = sructObj[keyProp];\n\t\t});\n\t\t\n\t\tfor (let key in sructObj){\n\t\t\tif(keyProps.indexOf(key) == -1){\n\n\t\t\t\tif(Types.isType(sructObj[key]))\n\t\t\t\t\tobj[key] = sructObj[key];\n\t\t\t\telse\n\t\t\t\t\tthrow err(\"Item \" + objIndex + \".\" + key + \" isn't Type\");\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t});\n\n\tlet indexType = Types.Index.Def(keyArr.length);\n\t\t\n\n\tlet type = {\n\t\trand: rand,\n\t\ttest: test,\n\t\tpreJSON: preJSON\n\t}\n\n\tfunction rand(){\n\t\tlet index = indexType.rand();\n\n\t\tlet obj = {};\n\n\t\tlet keyObj = keyArr[index];\n\t\tfor(let keyProp in keyObj)\n\t\t\t\tobj[keyProp] = keyObj[keyProp];\n\t\t\n\t\tlet sructObj = typeObjArr[index];\n\t\tfor (let key in sructObj){\n\t\t\tobj[key] = sructObj[key].rand();\n\t\t}\n\n\t\treturn obj;\n\t}\n\n\tfunction test(obj){\n\t\t\n\t\tif(typeof obj != \"object\" || obj === null)\n\t\t\treturn { value: obj, type: preJSON()};\n\n\t\tif(keyProps.some(keyProp => keyType.test(obj[keyProp])))\n\t\t\treturn { value: obj, type: preJSON()};\n\n\t\tlet err = { value: obj, type: preJSON()};\n\t\tlet is_right = false;\n\n\t\tkeyArr.forEach((keyObj, index) =>{\n\t\t\tif(is_right)\n\t\t\t\treturn;\n\t\t\t\n\t\t\tlet is_right_keys = true;\n\t\t\tfor(let keyProp in keyObj)\n\t\t\t\tis_right_keys = is_right_keys && (keyObj[keyProp] == obj[keyProp]);\n\n\t\t\tif(is_right_keys){\n\n\t\t\t\tlet is_right_values = true;\n\t\t\t\tfor(let key in typeObjArr[index]){\n\t\t\t\t\tif(typeObjArr[index][key].test(obj[key])){\n\t\t\t\t\t\terr = { errKey: key, value: obj[key], type: typeObjArr[index][key].preJSON(), switchKeys: keyObj};\n\t\t\t\t\t\tis_right_values = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif(is_right_values)\n\t\t\t\t\tis_right = true;\n\t\t\t} \n\n\t\t});\n\n\t\tif(!is_right)\n\t\t\treturn err;\n\n\t\treturn;\n\t}\n\n\tfunction preJSON(){\n\t\tvar type = {};\n\t\ttype.name = typeName;\n\n\t\tlet tempObjArr = typeObjs.map(sructObj => {\n\t\t\tlet obj = {};\n\t\t\tfor (let key in sructObj){\n\t\t\t\tif(Types.isType(sructObj[key]))\n\t\t\t\t\tobj[key] = sructObj[key].preJSON();\n\t\t\t\telse\n\t\t\t\t\tobj[key] = sructObj[key];\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t});\n\n\t\ttype.struct = { keyProps, tempObjArr };\n\t\treturn type;\n\t}\n\n\treturn type;\n\n}\n\nfunction outJSON(preType){\n\tif(typeof preType == \"object\" && preType.name == typeName){\n\n\t\tlet ObjsArr = preType.struct.tempObjArr.map(jsonObj => {\n\t\t\tlet obj = {};\n\n\t\t\tfor(var key in jsonObj){\n\t\t\t\tvar propJsonObj = jsonObj[key];\n\n\t\t\t\tif(propJsonObj.name && Types[propJsonObj.name] && Types.isCrType(Types[propJsonObj.name])){\n\t\t\t\t\tobj[key] = Types[propJsonObj.name].outJSON(propJsonObj);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tobj[key] = propJsonObj;\n\t\t\t}\n\n\t\t\treturn obj;\n\t\t});\n\t\t\n\t\treturn ConstructorType(preType.struct.keyProps, ObjsArr);\n\t}\n\telse\n\t\tthrow new Error(\"This isn't type \" + typeName + \"!\");\n}\n\nmodule.exports = ExtendTypes;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/types/switch/type.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/types/template/type.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/types/template/type.js ***!
  \***********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nconst typeName = \"Core\";\n\nlet argError = null;\n\nlet Types = null;\n\nfunction ExtendTypes(Core){\n\tTypes = Core;\n\targError = Core.argError;\n\tCore.newType(typeName, ConstructorType, outJSON);\n}\n\nExtendTypes.typeName = typeName;\n\nfunction ConstructorType(hello){\n\n\tif(typeof hello !== \"string\")\n\t\tthrow argError(arguments, 'Wait args (String)');\n\n\tlet type = {\n\t\trand: rand,\n\t\ttest: test,\n\t\tpreJSON: preJSON\n\t}\n\n\tfunction rand(){\n\t\treturn hello;\n\t}\n\n\tfunction test(value){\n\t\tif(value !== hello)\n\t\t\treturn { value: value, type: preJSON()};\n\t}\n\n\tfunction preJSON(){\n\t\tvar type = {};\n\t\ttype.name = typeName;\n\t\ttype.struct = hello;\n\t\treturn type;\n\t}\n\n\treturn type;\n\n}\n\nfunction outJSON(preType){\n\tif(typeof preType == \"object\" && preType.name == typeName)\n\t\treturn ConstructorType(preType.struct)\n\telse\n\t\tthrow new Error(\"This isn't type \" + typeName + \"!\");\n}\n\nmodule.exports = ExtendTypes;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/types/template/type.js?");

/***/ }),

/***/ "./node_modules/@ellementul/message-types/types/uuid/type.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@ellementul/message-types/types/uuid/type.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\nconst uuid = __webpack_require__(/*! uuid */ \"./node_modules/@ellementul/message-types/node_modules/uuid/dist/commonjs-browser/index.js\")\n\nconst typeName = \"UUID\";\n\nvar argError = null;\n\nconst CrIndexType  =  __webpack_require__(/*! ../index/type.js */ \"./node_modules/@ellementul/message-types/types/index/type.js\");\n\nvar Types = null;\n\nfunction ExtendTypes(Core){\n\tTypes = Core;\n\targError = Core.argError;\n\tif(!Core.Index)\n\t\tCrIndexType(Core);\n\n\tCore.newType(typeName, ConstructorType, outJSON);\n}\n\nExtendTypes.typeName = typeName;\n\nfunction ConstructorType(){\n\n\tvar type = {\n\t\trand: rand,\n\t\ttest: test,\n\t\tpreJSON: preJSON\n\t}\n\n\tfunction rand(){\n\t\treturn uuid.v4()\n\t}\n\n\tfunction test(str){\n\t\tif(!uuid.validate(str)){\n\t\t\treturn { value: str, type: preJSON()};\n\t\t}\n\t}\n\n\tfunction preJSON(){\n\t\tvar type = {};\n\t\ttype.name = typeName;\n\t\treturn type;\n\t}\n\n\treturn type;\n\n}\n\nfunction outJSON(preType){\n\tif(typeof preType == \"object\" && preType.name == typeName)\n\t\treturn ConstructorType(preType.struct)\n\telse\n\t\tthrow new Error(\"This isn't type \" + typeName + \"!\");\n}\n\nmodule.exports = ExtendTypes;\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/message-types/types/uuid/type.js?");

/***/ }),

/***/ "./node_modules/@ellementul/simple-uee-manager/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ellementul/simple-uee-manager/index.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = {\r\n  ...__webpack_require__(/*! ./src/Manager */ \"./node_modules/@ellementul/simple-uee-manager/src/Manager/index.js\"),\r\n  events: {\r\n    addTask: __webpack_require__(/*! ./src/events/add_task_event */ \"./node_modules/@ellementul/simple-uee-manager/src/events/add_task_event.js\"),\r\n    updateList: __webpack_require__(/*! ./src/events/update_list_event */ \"./node_modules/@ellementul/simple-uee-manager/src/events/update_list_event.js\"),\r\n    readyMembers: __webpack_require__(/*! ./src/events/all_members_ready_event */ \"./node_modules/@ellementul/simple-uee-manager/src/events/all_members_ready_event.js\")\r\n  }\r\n}\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/simple-uee-manager/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/simple-uee-manager/src/Manager/index.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ellementul/simple-uee-manager/src/Manager/index.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { Member } = __webpack_require__(/*! @ellementul/uee-core */ \"./node_modules/@ellementul/uee-core/index.js\")\r\n\r\n\r\nconst readyEvent = __webpack_require__(/*! ../events/all_members_ready_event */ \"./node_modules/@ellementul/simple-uee-manager/src/events/all_members_ready_event.js\")\r\n\r\nclass Manager extends Member {\r\n  constructor({ roles }) {\r\n    super()\r\n\r\n    this.role = \"Manager\"\r\n\r\n    if (!Array.isArray(roles) || roles.length < 1)\r\n      throw new TypeError(\"The roles canot be empty!\")\r\n\r\n    if (\r\n      roles.some(\r\n        (memberConstructor) => {\r\n          if(typeof memberConstructor === \"object\")\r\n            memberConstructor = memberConstructor.memberConstructor\r\n          \r\n          return typeof memberConstructor !==  \"function\"\r\n        }\r\n      )\r\n    ) throw TypeError(\"A member constructor isn't function!\")\r\n\r\n    this._roles = roles\r\n    this._members = {\r\n      [this.getRole()]: {\r\n        memberConstructor: Manager,\r\n        managers: new Map,\r\n        statuses: new Map,\r\n        instances: new Map([[this.uuid, this]])\r\n      }\r\n    }\r\n    \r\n    this._state = \"Initialized\"\r\n  }\r\n\r\n  start() {\r\n    if(!this._provider)\r\n      throw new TypeError(\"The manger doesn't have provider!\")\r\n\r\n    this._roles.forEach((memberConstructor) => {\r\n      let role = null\r\n      if(typeof memberConstructor === \"object\") {\r\n        role = memberConstructor.role\r\n        memberConstructor = memberConstructor.memberConstructor\r\n      }\r\n      else {\r\n        role = memberConstructor.name\r\n      }\r\n      \r\n      memberConstructor.role = role\r\n      this._members[role] = { memberConstructor }\r\n      this.createMember({ manager: this.uuid, role })\r\n    })\r\n    this.send(readyEvent)\r\n  }\r\n\r\n  createMember({ manager, role }) {\r\n    if(manager != this.uuid) return\r\n\r\n    const memberConstructor = this._members[role].memberConstructor\r\n    const member = new memberConstructor\r\n    member.role |= memberConstructor.role\r\n    member.setProvider(this._provider)\r\n    this._members[role].uuid = member.uuid\r\n    this._members[role].instance = member\r\n    this._members[role].manager = this.uuid\r\n    this._members[role].status = \"READY\"\r\n  }\r\n\r\n  reset() {\r\n    for (let role in this._members) {\r\n      if (role !== this.getRole()) {\r\n        const instance = this._members[role].instance\r\n        if(typeof instance.reset == \"function\")\r\n            instance.reset()\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = { Manager }\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/simple-uee-manager/src/Manager/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/simple-uee-manager/src/events/add_task_event.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@ellementul/simple-uee-manager/src/events/add_task_event.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { EventFactory, Types } = __webpack_require__(/*! @ellementul/uee-core */ \"./node_modules/@ellementul/uee-core/index.js\")\r\nconst type = Types.Object.Def({\r\n  system: \"Management\",\r\n  entity: \"Task\",\r\n  state: \"Added\",\r\n  action: Types.Key.Def()\r\n}, true)\r\nmodule.exports = EventFactory(type)\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/simple-uee-manager/src/events/add_task_event.js?");

/***/ }),

/***/ "./node_modules/@ellementul/simple-uee-manager/src/events/all_members_ready_event.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@ellementul/simple-uee-manager/src/events/all_members_ready_event.js ***!
  \*******************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { EventFactory, Types } = __webpack_require__(/*! @ellementul/uee-core */ \"./node_modules/@ellementul/uee-core/index.js\")\r\nconst type = Types.Object.Def({\r\n  system: \"Cooperation\",\r\n  entity: \"AllMembers\",\r\n  state: \"Ready\"\r\n}, true)\r\nmodule.exports = EventFactory(type)\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/simple-uee-manager/src/events/all_members_ready_event.js?");

/***/ }),

/***/ "./node_modules/@ellementul/simple-uee-manager/src/events/update_list_event.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@ellementul/simple-uee-manager/src/events/update_list_event.js ***!
  \*************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { EventFactory, Types } = __webpack_require__(/*! @ellementul/uee-core */ \"./node_modules/@ellementul/uee-core/index.js\")\r\nconst type = Types.Object.Def({\r\n  system: \"Cooperation\",\r\n  entity: \"MembersList\",\r\n  state: \"Updated\",\r\n  roles: {},\r\n  time: {}\r\n}, true)\r\nmodule.exports = EventFactory(type)\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/simple-uee-manager/src/events/update_list_event.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-core/index.js":
/*!****************************************************!*\
  !*** ./node_modules/@ellementul/uee-core/index.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = {\n  ...__webpack_require__(/*! ./src/Event */ \"./node_modules/@ellementul/uee-core/src/Event/index.js\"),\n  ...__webpack_require__(/*! ./src/Provider */ \"./node_modules/@ellementul/uee-core/src/Provider/index.js\"),\n  ...__webpack_require__(/*! ./src/Member */ \"./node_modules/@ellementul/uee-core/src/Member/index.js\"),\n  ...__webpack_require__(/*! ./src/Transport */ \"./node_modules/@ellementul/uee-core/src/Transport/index.js\"),\n  events: {\n    change: __webpack_require__(/*! ./src/Member/events/change_state_event */ \"./node_modules/@ellementul/uee-core/src/Member/events/change_state_event.js\"),\n    connect: __webpack_require__(/*! ./src/Member/events/connected_event */ \"./node_modules/@ellementul/uee-core/src/Member/events/connected_event.js\"),\n    log: __webpack_require__(/*! ./src/Member/events/log_event */ \"./node_modules/@ellementul/uee-core/src/Member/events/log_event.js\"),\n    error: __webpack_require__(/*! ./src/Member/events/error_event */ \"./node_modules/@ellementul/uee-core/src/Member/events/error_event.js\")\n  }\n}\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-core/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-core/src/Event/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@ellementul/uee-core/src/Event/index.js ***!
  \**************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const Types = __webpack_require__(/*! @ellementul/message-types */ \"./node_modules/@ellementul/message-types/index.js\")\nconst getUuid = __webpack_require__(/*! uuid-by-string */ \"./node_modules/uuid-by-string/src/index.js\");\n\nfunction EventFactory(type) {\n  if(!Types.isType(type))\n    throw new TypeError(\"The type isn't type!\")\n\n  const callbacks = new Set\n\n  return {\n    get type() {\n      return type\n    },\n    create: () => {\n      return type.rand()\n    },\n    toJSON: () => {\n      return { type: type.toJSON() }\n    },\n    sign: () => {\n      return getUuid(type.toJSON(), 5)\n    },\n    isValid: (payload) => {\n      return !type.test(payload)\n    },\n    on: callback => {\n      if(typeof callback === \"function\")\n        callbacks.add(callback)\n      else\n        throw new TypeError(\"The recieve callback isn't function!\")\n    },\n    call: payload => {\n      for (let callback of callbacks) {\n        callback(payload)\n      }\n    },\n    clone: function() {\n      return EventFactory(this.type)\n    }\n  }\n}\n\nEventFactory.fromJSON = function (json) {\n  if(typeof json == \"string\")\n\t\t\tjson = JSON.parse(json)\n  \n  const type = Types.outJSON(json.type)\n  return EventFactory(type)\n}\n\nmodule.exports = { EventFactory, Types }\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-core/src/Event/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-core/src/Member/events/change_state_event.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@ellementul/uee-core/src/Member/events/change_state_event.js ***!
  \***********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { EventFactory, Types } = __webpack_require__(/*! ../../Event */ \"./node_modules/@ellementul/uee-core/src/Event/index.js\")\n\nconst type = Types.Object.Def({\n  system: \"Cooperation\",\n  entity: \"Member\",\n  state: Types.Key.Def(),\n  role: Types.Key.Def(),\n  uuid: Types.UUID.Def()\n}, true)\n\nmodule.exports = EventFactory(type)\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-core/src/Member/events/change_state_event.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-core/src/Member/events/connected_event.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ellementul/uee-core/src/Member/events/connected_event.js ***!
  \********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { EventFactory, Types } = __webpack_require__(/*! ../../Event */ \"./node_modules/@ellementul/uee-core/src/Event/index.js\")\n\nconst type = Types.Object.Def({\n  system: \"Cooperation\",\n  entity: \"Member\",\n  state: \"Connected\",\n  role: Types.Key.Def(),\n  uuid: Types.UUID.Def()\n})\n\nmodule.exports = EventFactory(type)\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-core/src/Member/events/connected_event.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-core/src/Member/events/error_event.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@ellementul/uee-core/src/Member/events/error_event.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { EventFactory, Types } = __webpack_require__(/*! ../../Event */ \"./node_modules/@ellementul/uee-core/src/Event/index.js\")\n\nconst type = Types.Object.Def({\n  system: \"Logging\",\n  entity: \"Error\",\n  state: \n  {\n    name: Types.Key.Def(),\n  }\n}, true)\n\nmodule.exports = EventFactory(type)\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-core/src/Member/events/error_event.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-core/src/Member/events/log_event.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@ellementul/uee-core/src/Member/events/log_event.js ***!
  \**************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { EventFactory, Types } = __webpack_require__(/*! ../../Event */ \"./node_modules/@ellementul/uee-core/src/Event/index.js\")\n\nconst type = Types.Object.Def({\n  system: \"Logging\",\n  entity: Types.Key.Def()\n}, true)\n\nmodule.exports = EventFactory(type)\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-core/src/Member/events/log_event.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-core/src/Member/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@ellementul/uee-core/src/Member/index.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { Types } = __webpack_require__(/*! ../Event */ \"./node_modules/@ellementul/uee-core/src/Event/index.js\")\nconst connectedEvent = __webpack_require__(/*! ./events/connected_event */ \"./node_modules/@ellementul/uee-core/src/Member/events/connected_event.js\")\nconst errorEvent = __webpack_require__(/*! ./events/error_event */ \"./node_modules/@ellementul/uee-core/src/Member/events/error_event.js\")\n\nclass Member {\n  constructor() {\n    this._provider = null\n    this._pre_init_events = []\n    this._pre_init_messages = []\n    this._uuid = Types.UUID.Def().rand()\n  }\n\n  get uuid() {\n    return this._uuid\n  }\n\n  wrapCallback(callback) {\n    return payload => {\n      try {\n        callback(payload)\n      } catch (error) {\n        if(error instanceof Error)\n          this.send(errorEvent, {\n            state: {\n              name: error.name,\n              message: error.message,\n              stack: error.stack\n            }\n          })\n        else\n          throw error\n      }\n    }\n  }\n\n  onEvent(event, callback) {\n    if(event.sign() !== errorEvent.sign())\n      callback = this.wrapCallback(callback)\n\n    if(this._provider)\n      this._provider.onEvent(event, callback)\n    else\n      this._pre_init_events.push([event, callback])\n  }\n\n  sendEvent(payload) {\n    if(this._provider)\n      this._provider.sendEvent(payload)\n    else\n      this._pre_init_messages.push(payload)\n  }\n\n  send(event, payload) {\n    const message = event.create()\n    let full_message\n\n    if(payload instanceof Object || Array.isArray(payload))\n      full_message = {\n        ...message,\n        ...payload\n      }\n    else\n      full_message = payload || message\n\n    if(!event.isValid(full_message))\n      throw `Invalid payload! Full message: ${JSON.stringify(full_message)}`\n\n    this.sendEvent(full_message)\n  }\n\n  setProvider(provider) {\n    this._provider = provider\n\n    this._pre_init_events.forEach(params => {\n      this._provider.onEvent(...params)\n    })\n    this._pre_init_events = []\n\n    this._pre_init_messages.forEach(payload => {\n      this._provider.sendEvent(payload)\n    })\n    this._pre_init_messages = []\n\n    this.send(connectedEvent, {\n      role: this.getRole(),\n      uuid: this._uuid\n    })\n  }\n\n  getRole() {\n    return this.role || \"MemberWithoutRole\"\n  }\n}\n\nmodule.exports = { Member } \n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-core/src/Member/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-core/src/Provider/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@ellementul/uee-core/src/Provider/index.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { v4: uuidv4 } = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\")\n\nclass Provider {\n  constructor () {\n    this.uuid = uuidv4()\n\n    this._listenerEvents = new Map\n    this._logging = null\n  }\n\n  setTransport (transport) {\n    transport.onRecieve( event => {\n      if(event.from === this.uuid)\n        return\n        \n      this.recieveEvent(event.data) \n    })\n\n    this.sendTransport = event => {\n      transport.send({\n        data: event,\n        from: this.uuid\n      })\n    }\n  }\n\n  onEvent(event, callback) {\n    const signature = event.sign()\n    \n    if(!this._listenerEvents.has(signature))\n      this._listenerEvents.set(signature, event.clone())\n\n    this._listenerEvents.get(signature).on(callback)\n  }\n\n  sendEvent(payload) {\n    if(this.sendTransport)\n      this.sendTransport(payload)\n\n    this.recieveEvent(payload)\n  }\n\n  recieveEvent (payload) {\n    this.log(payload)\n\n    this._listenerEvents.forEach((event, sign) => {\n      if(event.isValid(payload))\n        event.call(payload)\n    })\n  }\n\n  setLogging(logging) {\n    if(typeof logging === \"function\")\n      this._logging = logging\n    else\n      throw new TypeError(\"The recieve logging callback isn't function!\")\n  }\n\n  log (payload) {\n    if(this._logging) {\n      let events = new Map\n\n      this._listenerEvents.forEach((event, sign) => {\n        if(event.isValid(payload))\n          events.set(sign, event.toJSON())\n      })\n\n      this._logging({ message: payload, triggeredEvents: events })\n    }\n  }\n}\n\nmodule.exports = { Provider }\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-core/src/Provider/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-core/src/Transport/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@ellementul/uee-core/src/Transport/index.js ***!
  \******************************************************************/
/***/ ((module) => {

eval("class AbstractTransport {\n  send () { throw new Error('This abstract method should be overwrite!')  } \n  onRecieve  () { throw new Error('This abstract method should be overwrite!')  } \n}\n\nmodule.exports = { AbstractTransport }\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-core/src/Transport/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-timeticker/events/start_event.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@ellementul/uee-timeticker/events/start_event.js ***!
  \***********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { EventFactory, Types } = __webpack_require__(/*! @ellementul/uee-core */ \"./node_modules/@ellementul/uee-core/index.js\")\r\nconst type = Types.Object.Def({\r\n  system: \"Timing\",\r\n  entity: \"Ticker\",\r\n  action: \"Start\",\r\n  delta: Types.Index.Def(1000)\r\n})\r\nmodule.exports = EventFactory(type)\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-timeticker/events/start_event.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-timeticker/events/time_event.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@ellementul/uee-timeticker/events/time_event.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { EventFactory, Types } = __webpack_require__(/*! @ellementul/uee-core */ \"./node_modules/@ellementul/uee-core/index.js\")\r\nconst type = Types.Object.Def({\r\n  system: \"Timing\",\r\n  entity: \"Time\",\r\n  state: {\r\n    mstime: Types.Index.Def(100*365*24*60*60*1000) //Limit about 100 years from Unix start\r\n  }\r\n}, true)\r\nmodule.exports = EventFactory(type)\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-timeticker/events/time_event.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-timeticker/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@ellementul/uee-timeticker/index.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { Member } = __webpack_require__(/*! @ellementul/uee-core */ \"./node_modules/@ellementul/uee-core/index.js\")\r\n\r\nconst startEvent = __webpack_require__(/*! ./events/start_event */ \"./node_modules/@ellementul/uee-timeticker/events/start_event.js\")\r\nconst timeEvent = __webpack_require__(/*! ./events/time_event */ \"./node_modules/@ellementul/uee-timeticker/events/time_event.js\")\r\nclass Ticker extends Member {\r\n  constructor() {\r\n    super()\r\n\r\n    this.onEvent(startEvent, payload => this.start(payload))\r\n    this._timeout = 200\r\n    \r\n    this.role = \"Ticker\"\r\n  }\r\n  start ({ delta }) {\r\n    this._timer = setInterval(() => this.send(timeEvent, {\r\n      state: {\r\n        mstime: Date.now()\r\n      }\r\n    }), delta || this._timeout)\r\n  }\r\n  reset () {\r\n    clearInterval(this._timer)\r\n  }\r\n}\r\n\r\nmodule.exports = { \r\n  Ticker,\r\n  events: {\r\n    start: __webpack_require__(/*! ./events/start_event */ \"./node_modules/@ellementul/uee-timeticker/events/start_event.js\"),\r\n    time: __webpack_require__(/*! ./events/time_event */ \"./node_modules/@ellementul/uee-timeticker/events/time_event.js\")\r\n  }\r\n}\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-timeticker/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-ws-browser-transport/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/@ellementul/uee-ws-browser-transport/index.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { AbstractTransport } = __webpack_require__(/*! @ellementul/uee-core */ \"./node_modules/@ellementul/uee-core/index.js\")\n\nclass WsTransport extends AbstractTransport {\n  constructor (url) {\n    super()\n\n    this._url = url\n    this._messages_queue = []\n  }\n  onRecieve (recieveCallback) {\n    this._callback = recieveCallback\n    this.start()\n  }\n  start() {\n    const socket = new WebSocket(this._url)\n    socket.onopen = () => this.open(socket)\n    socket.onmessage = event => this.message(event.data)\n  }\n  open(socket) {\n    this._socket = socket\n    this.clearQueue()\n  }\n  clearQueue() {\n    const queue = this._messages_queue\n    this._messages_queue = []\n\n    if(queue.length > 0)\n      queue.forEach(message => this.send(message))\n  }\n  send (message) {\n    if(this._socket) {\n      this.clearQueue()\n      this._send(message)\n    }\n    else {\n      this._messages_queue.push(message)\n    }\n  }\n  _send (message) {\n    this._socket.send(JSON.stringify(message))\n  }\n  message (data) {\n    this._callback(JSON.parse(data))\n  }\n  close () {\n    this._socket.close()\n  }\n}\n\nmodule.exports = { WsTransport }\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-ws-browser-transport/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/uee-ws-transport/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@ellementul/uee-ws-transport/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { AbstractTransport } = __webpack_require__(/*! @ellementul/uee-core */ \"./node_modules/@ellementul/uee-core/index.js\")\nconst WebSocket = __webpack_require__(/*! ws */ \"./node_modules/ws/browser.js\")\n\nclass WsTransport extends AbstractTransport {\n  constructor (url) {\n    super()\n\n    this._url = url\n    this._messages_queue = []\n  }\n  onRecieve (recieveCallback) {\n    this._callback = recieveCallback\n    this.start()\n  }\n  start() {\n    const socket = new WebSocket(this._url)\n    socket.on('open', () => this.open(socket))\n    socket.on('message', data => this.message(data))\n    socket.on('close', () => this.close())\n  }\n  open(socket) {\n    this._socket = socket\n    this.clearQueue()\n  }\n  clearQueue() {\n    const queue = this._messages_queue\n    this._messages_queue = []\n\n    if(queue.length > 0)\n      queue.forEach(message => this.send(message))\n  }\n  send (message) {\n    if(this._socket) {\n      this.clearQueue()\n      this._send(message)\n    }\n    else {\n      this._messages_queue.push(message)\n    }\n  }\n  _send (message) {\n    this._socket.send(JSON.stringify(message))\n  }\n  message (data) {\n    this._callback(JSON.parse(data))\n  }\n  close () {\n    this._socket = null\n  }\n}\n\nmodule.exports = { WsTransport }\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/uee-ws-transport/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/united-events-environment/Environment/index.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@ellementul/united-events-environment/Environment/index.js ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { Provider: DefaultProvider, events: { error: errorLogEvent } } = __webpack_require__(/*! @ellementul/uee-core */ \"./node_modules/@ellementul/uee-core/index.js\")\r\nconst { Manager: DefaultManager } = __webpack_require__(/*! @ellementul/simple-uee-manager */ \"./node_modules/@ellementul/simple-uee-manager/index.js\")\r\nconst { Ticker } = __webpack_require__(/*! @ellementul/uee-timeticker */ \"./node_modules/@ellementul/uee-timeticker/index.js\")\r\n\r\nclass UnitedEventsEnvironment {\r\n  constructor({\r\n    Transport,\r\n    Provider=DefaultProvider,\r\n    Manager=DefaultManager,\r\n    membersList,\r\n    logging,\r\n    isShowErrors\r\n  }) {\r\n    this._Transport = Transport\r\n    this._provider = new Provider\r\n    this._manager = new Manager(membersList)\r\n\r\n    if(logging || isShowErrors)\r\n      this.setupLogging(logging, isShowErrors)\r\n  }\r\n\r\n  setupTransport(signalServerAddress) {\r\n    this._transport = new this._Transport(signalServerAddress)\r\n    this._provider.setTransport(this._transport)\r\n  }\r\n\r\n  run({ isHost = false, signalServerAddress = null} = {}) {\r\n\r\n    if(signalServerAddress)\r\n      this.setupTransport(signalServerAddress)\r\n\r\n    if(!signalServerAddress || isHost) {\r\n      this._tiсker = new Ticker\r\n      this._tiсker.setProvider(this._provider)\r\n      this._tiсker.start({ delta: 24 })\r\n    }\r\n\r\n    this._manager.setProvider(this._provider)\r\n    this._manager.start()\r\n  }\r\n\r\n  reset() {\r\n    if(this._tiсker)\r\n      this._tiсker.reset()\r\n\r\n    this._manager.reset()\r\n  }\r\n\r\n  setupLogging(logging, isShowErrors) {\r\n    if(logging && isShowErrors) {\r\n      this._provider.setLogging(payload => {\r\n        this.showErrors(payload)\r\n        logging(payload)\r\n      })\r\n    }\r\n    else if(logging) {\r\n      this._provider.setLogging(logging)\r\n    }\r\n    else if(isShowErrors) {\r\n      this._provider.setLogging(payload => this.showErrors(payload))\r\n    }\r\n  }\r\n  showErrors(payload) {\r\n    if(errorLogEvent.isValid(payload.message))\r\n      console.error(payload)\r\n  }\r\n}\r\n\r\nmodule.exports = { UnitedEventsEnvironment }\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/united-events-environment/Environment/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/united-events-environment/FakeMember/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@ellementul/united-events-environment/FakeMember/index.js ***!
  \********************************************************************************/
/***/ ((module) => {

eval("function MockMember(Member, spyingEvents) {\r\n  return class FakeMember extends Member {\r\n    constructor() {\r\n      super(...arguments)\r\n\r\n      spyingEvents.forEach(event => {\r\n        this.onEvent(event[0], event[1])\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = { MockMember }\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/united-events-environment/FakeMember/index.js?");

/***/ }),

/***/ "./node_modules/@ellementul/united-events-environment/index.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@ellementul/united-events-environment/index.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = {\r\n  ...__webpack_require__(/*! ./Environment */ \"./node_modules/@ellementul/united-events-environment/Environment/index.js\"),\r\n  ...__webpack_require__(/*! ./FakeMember */ \"./node_modules/@ellementul/united-events-environment/FakeMember/index.js\"),\r\n  ...__webpack_require__(/*! @ellementul/uee-core */ \"./node_modules/@ellementul/uee-core/index.js\"),\r\n  ...__webpack_require__(/*! @ellementul/uee-ws-transport */ \"./node_modules/@ellementul/uee-ws-transport/index.js\"),\r\n  events: {\r\n    ...(__webpack_require__(/*! @ellementul/uee-core */ \"./node_modules/@ellementul/uee-core/index.js\").events),\r\n    ...(__webpack_require__(/*! @ellementul/uee-timeticker */ \"./node_modules/@ellementul/uee-timeticker/index.js\").events),\r\n    ...(__webpack_require__(/*! @ellementul/simple-uee-manager */ \"./node_modules/@ellementul/simple-uee-manager/index.js\").events)\r\n  }\r\n}\n\n//# sourceURL=webpack://tmb-host/./node_modules/@ellementul/united-events-environment/index.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/base-system.js":
/*!************************************************************!*\
  !*** ./node_modules/detect-collisions/dist/base-system.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BaseSystem = void 0;\nconst box_1 = __webpack_require__(/*! ./bodies/box */ \"./node_modules/detect-collisions/dist/bodies/box.js\");\nconst circle_1 = __webpack_require__(/*! ./bodies/circle */ \"./node_modules/detect-collisions/dist/bodies/circle.js\");\nconst ellipse_1 = __webpack_require__(/*! ./bodies/ellipse */ \"./node_modules/detect-collisions/dist/bodies/ellipse.js\");\nconst line_1 = __webpack_require__(/*! ./bodies/line */ \"./node_modules/detect-collisions/dist/bodies/line.js\");\nconst point_1 = __webpack_require__(/*! ./bodies/point */ \"./node_modules/detect-collisions/dist/bodies/point.js\");\nconst polygon_1 = __webpack_require__(/*! ./bodies/polygon */ \"./node_modules/detect-collisions/dist/bodies/polygon.js\");\nconst model_1 = __webpack_require__(/*! ./model */ \"./node_modules/detect-collisions/dist/model.js\");\nconst optimized_1 = __webpack_require__(/*! ./optimized */ \"./node_modules/detect-collisions/dist/optimized.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/detect-collisions/dist/utils.js\");\n/**\n * very base collision system\n */\nclass BaseSystem extends model_1.RBush {\n    /**\n     * draw exact bodies colliders outline\n     */\n    draw(context) {\n        (0, optimized_1.forEach)(this.all(), (body) => {\n            body.draw(context);\n        });\n    }\n    /**\n     * draw bounding boxes hierarchy outline\n     */\n    drawBVH(context) {\n        const drawChildren = (body) => {\n            (0, utils_1.drawBVH)(context, body);\n            if (body.children) {\n                (0, optimized_1.forEach)(body.children, drawChildren);\n            }\n        };\n        (0, optimized_1.forEach)(this.data.children, drawChildren);\n    }\n    /**\n     * create point at position with options and add to system\n     */\n    createPoint(position, options) {\n        const point = new point_1.Point(position, options);\n        this.insert(point);\n        return point;\n    }\n    /**\n     * create line at position with options and add to system\n     */\n    createLine(start, end, options) {\n        const line = new line_1.Line(start, end, options);\n        this.insert(line);\n        return line;\n    }\n    /**\n     * create circle at position with options and add to system\n     */\n    createCircle(position, radius, options) {\n        const circle = new circle_1.Circle(position, radius, options);\n        this.insert(circle);\n        return circle;\n    }\n    /**\n     * create box at position with options and add to system\n     */\n    createBox(position, width, height, options) {\n        const box = new box_1.Box(position, width, height, options);\n        this.insert(box);\n        return box;\n    }\n    /**\n     * create ellipse at position with options and add to system\n     */\n    createEllipse(position, radiusX, radiusY = radiusX, step, options) {\n        const ellipse = new ellipse_1.Ellipse(position, radiusX, radiusY, step, options);\n        this.insert(ellipse);\n        return ellipse;\n    }\n    /**\n     * create polygon at position with options and add to system\n     */\n    createPolygon(position, points, options) {\n        const polygon = new polygon_1.Polygon(position, points, options);\n        this.insert(polygon);\n        return polygon;\n    }\n}\nexports.BaseSystem = BaseSystem;\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/base-system.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/bodies/box.js":
/*!***********************************************************!*\
  !*** ./node_modules/detect-collisions/dist/bodies/box.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Box = void 0;\nconst model_1 = __webpack_require__(/*! ../model */ \"./node_modules/detect-collisions/dist/model.js\");\nconst utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/detect-collisions/dist/utils.js\");\nconst polygon_1 = __webpack_require__(/*! ./polygon */ \"./node_modules/detect-collisions/dist/bodies/polygon.js\");\n/**\n * collider - box\n */\nclass Box extends polygon_1.Polygon {\n    /**\n     * collider - box\n     */\n    constructor(position, width, height, options) {\n        super(position, (0, utils_1.createBox)(width, height), options);\n        /**\n         * type of body\n         */\n        this.type = model_1.BodyType.Box;\n        /**\n         * boxes are convex\n         */\n        this.isConvex = true;\n        this._width = width;\n        this._height = height;\n    }\n    /**\n     * get box width\n     */\n    get width() {\n        return this._width;\n    }\n    /**\n     * set box width, update points\n     */\n    set width(width) {\n        this._width = width;\n        this.setPoints((0, utils_1.createBox)(this._width, this._height));\n    }\n    /**\n     * get box height\n     */\n    get height() {\n        return this._height;\n    }\n    /**\n     * set box height, update points\n     */\n    set height(height) {\n        this._height = height;\n        this.setPoints((0, utils_1.createBox)(this._width, this._height));\n    }\n    /**\n     * do not attempt to use Polygon.updateIsConvex()\n     */\n    updateIsConvex() {\n        return;\n    }\n}\nexports.Box = Box;\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/bodies/box.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/bodies/circle.js":
/*!**************************************************************!*\
  !*** ./node_modules/detect-collisions/dist/bodies/circle.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Circle = void 0;\nconst sat_1 = __webpack_require__(/*! sat */ \"./node_modules/sat/SAT.js\");\nconst model_1 = __webpack_require__(/*! ../model */ \"./node_modules/detect-collisions/dist/model.js\");\nconst utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/detect-collisions/dist/utils.js\");\n/**\n * collider - circle\n */\nclass Circle extends sat_1.Circle {\n    /**\n     * collider - circle\n     */\n    constructor(position, radius, options) {\n        super((0, utils_1.ensureVectorPoint)(position), radius);\n        /**\n         * offset copy without angle applied\n         */\n        this.offsetCopy = { x: 0, y: 0 };\n        /**\n         * was the polygon modified and needs update in the next checkCollision\n         */\n        this.dirty = false;\n        /*\n         * circles are convex\n         */\n        this.isConvex = true;\n        /**\n         * circle type\n         */\n        this.type = model_1.BodyType.Circle;\n        /**\n         * always centered\n         */\n        this.isCentered = true;\n        (0, utils_1.extendBody)(this, options);\n        this.unscaledRadius = radius;\n    }\n    /**\n     * get this.pos.x\n     */\n    get x() {\n        return this.pos.x;\n    }\n    /**\n     * updating this.pos.x by this.x = x updates AABB\n     */\n    set x(x) {\n        this.pos.x = x;\n        this.dirty = true;\n    }\n    /**\n     * get this.pos.y\n     */\n    get y() {\n        return this.pos.y;\n    }\n    /**\n     * updating this.pos.y by this.y = y updates AABB\n     */\n    set y(y) {\n        this.pos.y = y;\n        this.dirty = true;\n    }\n    /**\n     * allow get scale\n     */\n    get scale() {\n        return this.r / this.unscaledRadius;\n    }\n    /**\n     * shorthand for setScale()\n     */\n    set scale(scale) {\n        this.setScale(scale);\n    }\n    /**\n     * scaleX = scale in case of Circles\n     */\n    get scaleX() {\n        return this.scale;\n    }\n    /**\n     * scaleY = scale in case of Circles\n     */\n    get scaleY() {\n        return this.scale;\n    }\n    /**\n     * update position\n     */\n    setPosition(x, y, update = true) {\n        this.pos.x = x;\n        this.pos.y = y;\n        this.dirty = true;\n        if (update) {\n            this.updateBody();\n        }\n        return this;\n    }\n    /**\n     * update scale\n     */\n    setScale(scaleX, _scaleY = scaleX, update = true) {\n        this.r = this.unscaledRadius * Math.abs(scaleX);\n        this.dirty = true;\n        if (update) {\n            this.updateBody();\n        }\n        return this;\n    }\n    /**\n     * set rotation\n     */\n    setAngle(angle, update = true) {\n        this.angle = angle;\n        const { x, y } = this.getOffsetWithAngle();\n        this.offset.x = x;\n        this.offset.y = y;\n        this.dirty = true;\n        if (update) {\n            this.updateBody();\n        }\n        return this;\n    }\n    /**\n     * set offset from center\n     */\n    setOffset(offset, update = true) {\n        this.offsetCopy.x = offset.x;\n        this.offsetCopy.y = offset.y;\n        const { x, y } = this.getOffsetWithAngle();\n        this.offset.x = x;\n        this.offset.y = y;\n        this.dirty = true;\n        if (update) {\n            this.updateBody();\n        }\n        return this;\n    }\n    /**\n     * get body bounding box, without padding\n     */\n    getAABBAsBBox() {\n        const x = this.pos.x + this.offset.x;\n        const y = this.pos.y + this.offset.y;\n        return {\n            minX: x - this.r,\n            maxX: x + this.r,\n            minY: y - this.r,\n            maxY: y + this.r,\n        };\n    }\n    /**\n     * Draws collider on a CanvasRenderingContext2D's current path\n     */\n    draw(context) {\n        const x = this.pos.x + this.offset.x;\n        const y = this.pos.y + this.offset.y;\n        const r = Math.abs(this.r);\n        if (this.isTrigger) {\n            const max = Math.max(8, this.r);\n            for (let i = 0; i < max; i++) {\n                const arc = (i / max) * 2 * Math.PI;\n                const arcPrev = ((i - 1) / max) * 2 * Math.PI;\n                const fromX = x + Math.cos(arcPrev) * this.r;\n                const fromY = y + Math.sin(arcPrev) * this.r;\n                const toX = x + Math.cos(arc) * this.r;\n                const toY = y + Math.sin(arc) * this.r;\n                (0, utils_1.dashLineTo)(context, fromX, fromY, toX, toY);\n            }\n        }\n        else {\n            context.moveTo(x + r, y);\n            context.arc(x, y, r, 0, Math.PI * 2);\n        }\n    }\n    /**\n     * Draws Bounding Box on canvas context\n     */\n    drawBVH(context) {\n        (0, utils_1.drawBVH)(context, this);\n    }\n    /**\n     * inner function for after position change update aabb in system\n     */\n    updateBody(update = this.dirty) {\n        var _a;\n        if (update) {\n            (_a = this.system) === null || _a === void 0 ? void 0 : _a.insert(this);\n            this.dirty = false;\n        }\n    }\n    /**\n     * update instantly or mark as dirty\n     */\n    markAsDirty(update) {\n        if (update) {\n            this.updateBody(true);\n        }\n        else {\n            this.dirty = true;\n        }\n    }\n    /**\n     * internal for getting offset with applied angle\n     */\n    getOffsetWithAngle() {\n        if ((!this.offsetCopy.x && !this.offsetCopy.y) || !this.angle) {\n            return this.offsetCopy;\n        }\n        const sin = Math.sin(this.angle);\n        const cos = Math.cos(this.angle);\n        const x = this.offsetCopy.x * cos - this.offsetCopy.y * sin;\n        const y = this.offsetCopy.x * sin + this.offsetCopy.y * cos;\n        return { x, y };\n    }\n}\nexports.Circle = Circle;\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/bodies/circle.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/bodies/ellipse.js":
/*!***************************************************************!*\
  !*** ./node_modules/detect-collisions/dist/bodies/ellipse.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Ellipse = void 0;\nconst model_1 = __webpack_require__(/*! ../model */ \"./node_modules/detect-collisions/dist/model.js\");\nconst utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/detect-collisions/dist/utils.js\");\nconst polygon_1 = __webpack_require__(/*! ./polygon */ \"./node_modules/detect-collisions/dist/bodies/polygon.js\");\n/**\n * collider - ellipse\n */\nclass Ellipse extends polygon_1.Polygon {\n    /**\n     * collider - ellipse\n     */\n    constructor(position, radiusX, radiusY = radiusX, step = (radiusX + radiusY) / Math.PI, options) {\n        super(position, (0, utils_1.createEllipse)(radiusX, radiusY, step), options);\n        /**\n         * ellipse type\n         */\n        this.type = model_1.BodyType.Ellipse;\n        /**\n         * ellipses are convex\n         */\n        this.isConvex = true;\n        this._radiusX = radiusX;\n        this._radiusY = radiusY;\n        this._step = step;\n    }\n    /**\n     * flag to set is body centered\n     */\n    set isCentered(_isCentered) { }\n    /**\n     * is body centered?\n     */\n    get isCentered() {\n        return true;\n    }\n    /**\n     * get ellipse step number\n     */\n    get step() {\n        return this._step;\n    }\n    /**\n     * set ellipse step number\n     */\n    set step(step) {\n        this._step = step;\n        this.setPoints((0, utils_1.createEllipse)(this._radiusX, this._radiusY, this._step));\n    }\n    /**\n     * get ellipse radiusX\n     */\n    get radiusX() {\n        return this._radiusX;\n    }\n    /**\n     * set ellipse radiusX, update points\n     */\n    set radiusX(radiusX) {\n        this._radiusX = radiusX;\n        this.setPoints((0, utils_1.createEllipse)(this._radiusX, this._radiusY, this._step));\n    }\n    /**\n     * get ellipse radiusY\n     */\n    get radiusY() {\n        return this._radiusY;\n    }\n    /**\n     * set ellipse radiusY, update points\n     */\n    set radiusY(radiusY) {\n        this._radiusY = radiusY;\n        this.setPoints((0, utils_1.createEllipse)(this._radiusX, this._radiusY, this._step));\n    }\n    /**\n     * do not attempt to use Polygon.center()\n     */\n    center() {\n        return;\n    }\n    /**\n     * do not attempt to use Polygon.updateIsConvex()\n     */\n    updateIsConvex() {\n        return;\n    }\n}\nexports.Ellipse = Ellipse;\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/bodies/ellipse.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/bodies/line.js":
/*!************************************************************!*\
  !*** ./node_modules/detect-collisions/dist/bodies/line.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Line = void 0;\nconst sat_1 = __webpack_require__(/*! sat */ \"./node_modules/sat/SAT.js\");\nconst model_1 = __webpack_require__(/*! ../model */ \"./node_modules/detect-collisions/dist/model.js\");\nconst polygon_1 = __webpack_require__(/*! ./polygon */ \"./node_modules/detect-collisions/dist/bodies/polygon.js\");\n/**\n * collider - line\n */\nclass Line extends polygon_1.Polygon {\n    /**\n     * collider - line from start to end\n     */\n    constructor(start, end, options) {\n        super(start, [\n            { x: 0, y: 0 },\n            { x: end.x - start.x, y: end.y - start.y },\n        ], options);\n        /**\n         * line type\n         */\n        this.type = model_1.BodyType.Line;\n        /**\n         * line is convex\n         */\n        this.isConvex = true;\n        if (this.calcPoints.length === 1 || !end) {\n            console.error({ start, end });\n            throw new Error(\"No end point for line provided\");\n        }\n    }\n    get start() {\n        return {\n            x: this.x + this.calcPoints[0].x,\n            y: this.y + this.calcPoints[0].y,\n        };\n    }\n    set start({ x, y }) {\n        this.x = x;\n        this.y = y;\n    }\n    get end() {\n        return {\n            x: this.x + this.calcPoints[1].x,\n            y: this.y + this.calcPoints[1].y,\n        };\n    }\n    set end({ x, y }) {\n        this.points[1].x = x - this.start.x;\n        this.points[1].y = y - this.start.y;\n        this.setPoints(this.points);\n    }\n    getCentroid() {\n        return new sat_1.Vector((this.end.x - this.start.x) / 2, (this.end.y - this.start.y) / 2);\n    }\n    /**\n     * do not attempt to use Polygon.updateIsConvex()\n     */\n    updateIsConvex() {\n        return;\n    }\n}\nexports.Line = Line;\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/bodies/line.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/bodies/point.js":
/*!*************************************************************!*\
  !*** ./node_modules/detect-collisions/dist/bodies/point.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Point = void 0;\nconst model_1 = __webpack_require__(/*! ../model */ \"./node_modules/detect-collisions/dist/model.js\");\nconst utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/detect-collisions/dist/utils.js\");\nconst box_1 = __webpack_require__(/*! ./box */ \"./node_modules/detect-collisions/dist/bodies/box.js\");\n/**\n * collider - point (very tiny box)\n */\nclass Point extends box_1.Box {\n    /**\n     * collider - point (very tiny box)\n     */\n    constructor(position, options) {\n        super((0, utils_1.ensureVectorPoint)(position), 0.001, 0.001, options);\n        /**\n         * point type\n         */\n        this.type = model_1.BodyType.Point;\n    }\n}\nexports.Point = Point;\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/bodies/point.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/bodies/polygon.js":
/*!***************************************************************!*\
  !*** ./node_modules/detect-collisions/dist/bodies/polygon.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Polygon = exports.isSimple = void 0;\nconst poly_decomp_1 = __webpack_require__(/*! poly-decomp */ \"./node_modules/poly-decomp/src/index.js\");\nObject.defineProperty(exports, \"isSimple\", ({ enumerable: true, get: function () { return poly_decomp_1.isSimple; } }));\nconst sat_1 = __webpack_require__(/*! sat */ \"./node_modules/sat/SAT.js\");\nconst model_1 = __webpack_require__(/*! ../model */ \"./node_modules/detect-collisions/dist/model.js\");\nconst optimized_1 = __webpack_require__(/*! ../optimized */ \"./node_modules/detect-collisions/dist/optimized.js\");\nconst utils_1 = __webpack_require__(/*! ../utils */ \"./node_modules/detect-collisions/dist/utils.js\");\n/**\n * collider - polygon\n */\nclass Polygon extends sat_1.Polygon {\n    /**\n     * collider - polygon\n     */\n    constructor(position, points, options) {\n        super((0, utils_1.ensureVectorPoint)(position), (0, utils_1.ensurePolygonPoints)(points));\n        /**\n         * was the polygon modified and needs update in the next checkCollision\n         */\n        this.dirty = false;\n        /**\n         * type of body\n         */\n        this.type = model_1.BodyType.Polygon;\n        /**\n         * is body centered\n         */\n        this.centered = false;\n        /**\n         * scale Vector of body\n         */\n        this.scaleVector = { x: 1, y: 1 };\n        if (!(points === null || points === void 0 ? void 0 : points.length)) {\n            throw new Error(\"No points in polygon\");\n        }\n        (0, utils_1.extendBody)(this, options);\n    }\n    /**\n     * flag to set is polygon centered\n     */\n    set isCentered(isCentered) {\n        if (this.centered === isCentered) {\n            return;\n        }\n        const centroid = this.getCentroidWithoutRotation();\n        const x = centroid.x * (isCentered ? 1 : -1);\n        const y = centroid.y * (isCentered ? 1 : -1);\n        this.translate(-x, -y);\n        this.centered = isCentered;\n    }\n    /**\n     * is polygon centered?\n     */\n    get isCentered() {\n        return this.centered;\n    }\n    get x() {\n        return this.pos.x;\n    }\n    /**\n     * updating this.pos.x by this.x = x updates AABB\n     */\n    set x(x) {\n        this.pos.x = x;\n        this.dirty = true;\n    }\n    get y() {\n        return this.pos.y;\n    }\n    /**\n     * updating this.pos.y by this.y = y updates AABB\n     */\n    set y(y) {\n        this.pos.y = y;\n        this.dirty = true;\n    }\n    /**\n     * allow exact getting of scale x - use setScale(x, y) to set\n     */\n    get scaleX() {\n        return this.scaleVector.x;\n    }\n    /**\n     * allow exact getting of scale y - use setScale(x, y) to set\n     */\n    get scaleY() {\n        return this.scaleVector.y;\n    }\n    /**\n     * allow approx getting of scale\n     */\n    get scale() {\n        return this.scaleVector.x;\n    }\n    /**\n     * allow easier setting of scale\n     */\n    set scale(scale) {\n        this.setScale(scale);\n    }\n    /**\n     * update position\n     */\n    setPosition(x, y, update = true) {\n        this.pos.x = x;\n        this.pos.y = y;\n        this.markAsDirty(update);\n        return this;\n    }\n    /**\n     * update scale\n     */\n    setScale(x, y = x, update = true) {\n        this.scaleVector.x = Math.abs(x);\n        this.scaleVector.y = Math.abs(y);\n        super.setPoints((0, optimized_1.map)(this.points, (point, index) => {\n            point.x = this.pointsBackup[index].x * this.scaleVector.x;\n            point.y = this.pointsBackup[index].y * this.scaleVector.y;\n            return point;\n        }));\n        this.markAsDirty(update);\n        return this;\n    }\n    setAngle(angle, update = true) {\n        super.setAngle(angle);\n        this.markAsDirty(update);\n        return this;\n    }\n    setOffset(offset, update = true) {\n        super.setOffset(offset);\n        this.markAsDirty(update);\n        return this;\n    }\n    /**\n     * get body bounding box, without padding\n     */\n    getAABBAsBBox() {\n        const { pos, w, h } = this.getAABBAsBox();\n        return {\n            minX: pos.x,\n            minY: pos.y,\n            maxX: pos.x + w,\n            maxY: pos.y + h,\n        };\n    }\n    /**\n     * Draws exact collider on canvas context\n     */\n    draw(context) {\n        (0, utils_1.drawPolygon)(context, this, this.isTrigger);\n    }\n    /**\n     * Draws Bounding Box on canvas context\n     */\n    drawBVH(context) {\n        (0, utils_1.drawBVH)(context, this);\n    }\n    /**\n     * get body centroid without applied angle\n     */\n    getCentroidWithoutRotation() {\n        // keep angle copy\n        const angle = this.angle;\n        // reset angle for get centroid\n        this.setAngle(0);\n        // get centroid\n        const centroid = this.getCentroid();\n        // revert angle change\n        this.setAngle(angle);\n        return centroid;\n    }\n    /**\n     * sets polygon points to new array of vectors\n     */\n    setPoints(points) {\n        super.setPoints(points);\n        this.updateIsConvex();\n        this.pointsBackup = (0, utils_1.clonePointsArray)(points);\n        return this;\n    }\n    /**\n     * translates polygon points in x, y direction\n     */\n    translate(x, y) {\n        super.translate(x, y);\n        this.pointsBackup = (0, utils_1.clonePointsArray)(this.points);\n        return this;\n    }\n    /**\n     * rotates polygon points by angle, in radians\n     */\n    rotate(angle) {\n        super.rotate(angle);\n        this.pointsBackup = (0, utils_1.clonePointsArray)(this.points);\n        return this;\n    }\n    /**\n     * if true, polygon is not an invalid, self-crossing polygon\n     */\n    isSimple() {\n        return (0, poly_decomp_1.isSimple)(this.calcPoints.map(utils_1.mapVectorToArray));\n    }\n    /**\n     * inner function for after position change update aabb in system and convex inner polygons\n     */\n    updateBody(update = this.dirty) {\n        var _a;\n        if (update) {\n            this.updateConvexPolygonPositions();\n            (_a = this.system) === null || _a === void 0 ? void 0 : _a.insert(this);\n            this.dirty = false;\n        }\n    }\n    /**\n     * update instantly or mark as dirty\n     */\n    markAsDirty(update) {\n        if (update) {\n            this.updateBody(true);\n        }\n        else {\n            this.dirty = true;\n        }\n    }\n    /**\n     * update the position of the decomposed convex polygons (if any), called\n     * after the position of the body has changed\n     */\n    updateConvexPolygonPositions() {\n        if (this.isConvex || !this.convexPolygons) {\n            return;\n        }\n        (0, optimized_1.forEach)(this.convexPolygons, (polygon) => {\n            polygon.pos.x = this.pos.x;\n            polygon.pos.y = this.pos.y;\n        });\n    }\n    /**\n     * returns body split into convex polygons, or empty array for convex bodies\n     */\n    getConvex() {\n        if ((this.type && this.type !== model_1.BodyType.Polygon) ||\n            this.points.length < 4) {\n            return [];\n        }\n        const points = (0, optimized_1.map)(this.calcPoints, utils_1.mapVectorToArray);\n        return (0, poly_decomp_1.quickDecomp)(points);\n    }\n    /**\n     * updates convex polygons cache in body\n     */\n    updateConvexPolygons(convex = this.getConvex()) {\n        if (this.isConvex) {\n            return;\n        }\n        if (!this.convexPolygons) {\n            this.convexPolygons = [];\n        }\n        (0, optimized_1.forEach)(convex, (points, index) => {\n            // lazy create\n            if (!this.convexPolygons[index]) {\n                this.convexPolygons[index] = new sat_1.Polygon();\n            }\n            this.convexPolygons[index].pos.x = this.pos.x;\n            this.convexPolygons[index].pos.y = this.pos.y;\n            this.convexPolygons[index].setPoints((0, utils_1.ensurePolygonPoints)((0, optimized_1.map)(points, utils_1.mapArrayToVector)));\n        });\n        // trim array length\n        this.convexPolygons.length = convex.length;\n    }\n    /**\n     * after points update set is convex\n     */\n    updateIsConvex() {\n        // all other types other than polygon are always convex\n        const convex = this.getConvex();\n        // everything with empty array or one element array\n        this.isConvex = convex.length <= 1;\n        this.updateConvexPolygons(convex);\n    }\n}\nexports.Polygon = Polygon;\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/bodies/polygon.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/detect-collisions/dist/index.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./model */ \"./node_modules/detect-collisions/dist/model.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bodies/circle */ \"./node_modules/detect-collisions/dist/bodies/circle.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bodies/ellipse */ \"./node_modules/detect-collisions/dist/bodies/ellipse.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bodies/polygon */ \"./node_modules/detect-collisions/dist/bodies/polygon.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bodies/box */ \"./node_modules/detect-collisions/dist/bodies/box.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bodies/point */ \"./node_modules/detect-collisions/dist/bodies/point.js\"), exports);\n__exportStar(__webpack_require__(/*! ./bodies/line */ \"./node_modules/detect-collisions/dist/bodies/line.js\"), exports);\n__exportStar(__webpack_require__(/*! ./system */ \"./node_modules/detect-collisions/dist/system.js\"), exports);\n__exportStar(__webpack_require__(/*! ./utils */ \"./node_modules/detect-collisions/dist/utils.js\"), exports);\n__exportStar(__webpack_require__(/*! ./intersect */ \"./node_modules/detect-collisions/dist/intersect.js\"), exports);\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/index.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/intersect.js":
/*!**********************************************************!*\
  !*** ./node_modules/detect-collisions/dist/intersect.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.intersectLinePolygon = exports.intersectLineLine = exports.intersectLineLineFast = exports.intersectLineCircle = exports.circleOutsidePolygon = exports.circleInPolygon = exports.circleInCircle = exports.pointOnCircle = exports.polygonInPolygon = exports.pointInPolygon = exports.polygonInCircle = exports.ensureConvex = void 0;\nconst sat_1 = __webpack_require__(/*! sat */ \"./node_modules/sat/SAT.js\");\nconst model_1 = __webpack_require__(/*! ./model */ \"./node_modules/detect-collisions/dist/model.js\");\nconst optimized_1 = __webpack_require__(/*! ./optimized */ \"./node_modules/detect-collisions/dist/optimized.js\");\n/**\n * replace body with array of related convex polygons\n */\nfunction ensureConvex(body) {\n    if (body.isConvex || body.type !== model_1.BodyType.Polygon) {\n        return [body];\n    }\n    return body.convexPolygons;\n}\nexports.ensureConvex = ensureConvex;\nfunction polygonInCircle(polygon, circle) {\n    return (0, optimized_1.every)(polygon.calcPoints, (p) => (0, sat_1.pointInCircle)({ x: p.x + polygon.pos.x, y: p.y + polygon.pos.y }, circle));\n}\nexports.polygonInCircle = polygonInCircle;\nfunction pointInPolygon(point, polygon) {\n    return (0, optimized_1.some)(ensureConvex(polygon), (convex) => (0, sat_1.pointInPolygon)(point, convex));\n}\nexports.pointInPolygon = pointInPolygon;\nfunction polygonInPolygon(polygonA, polygonB) {\n    return (0, optimized_1.every)(polygonA.calcPoints, (point) => pointInPolygon({ x: point.x + polygonA.pos.x, y: point.y + polygonA.pos.y }, polygonB));\n}\nexports.polygonInPolygon = polygonInPolygon;\n/**\n * https://stackoverflow.com/a/68197894/1749528\n */\nfunction pointOnCircle(point, circle) {\n    return ((point.x - circle.pos.x) * (point.x - circle.pos.x) +\n        (point.y - circle.pos.y) * (point.y - circle.pos.y) ===\n        circle.r * circle.r);\n}\nexports.pointOnCircle = pointOnCircle;\n/**\n * https://stackoverflow.com/a/68197894/1749528\n */\nfunction circleInCircle(a, b) {\n    const x1 = a.pos.x;\n    const y1 = a.pos.y;\n    const x2 = b.pos.x;\n    const y2 = b.pos.y;\n    const r1 = a.r;\n    const r2 = b.r;\n    const distSq = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n    return distSq + r2 === r1 || distSq + r2 < r1;\n}\nexports.circleInCircle = circleInCircle;\n/**\n * https://stackoverflow.com/a/68197894/1749528\n */\nfunction circleInPolygon(circle, polygon) {\n    // Circle with radius 0 isn't a circle\n    if (circle.r === 0) {\n        return false;\n    }\n    // If the center of the circle is not within the polygon,\n    // then the circle may overlap, but it'll never be \"contained\"\n    // so return false\n    if (!pointInPolygon(circle.pos, polygon)) {\n        return false;\n    }\n    // Necessary add polygon pos to points\n    const points = (0, optimized_1.map)(polygon.calcPoints, ({ x, y }) => ({\n        x: x + polygon.pos.x,\n        y: y + polygon.pos.y,\n    }));\n    // If the center of the circle is within the polygon,\n    // the circle is not outside of the polygon completely.\n    // so return false.\n    if ((0, optimized_1.some)(points, (point) => (0, sat_1.pointInCircle)(point, circle))) {\n        return false;\n    }\n    // If any line-segment of the polygon intersects the circle,\n    // the circle is not \"contained\"\n    // so return false\n    if ((0, optimized_1.some)(points, (end, index) => {\n        const start = index\n            ? points[index - 1]\n            : points[points.length - 1];\n        return intersectLineCircle({ start, end }, circle).length > 0;\n    })) {\n        return false;\n    }\n    return true;\n}\nexports.circleInPolygon = circleInPolygon;\n/**\n * https://stackoverflow.com/a/68197894/1749528\n */\nfunction circleOutsidePolygon(circle, polygon) {\n    // Circle with radius 0 isn't a circle\n    if (circle.r === 0) {\n        return false;\n    }\n    // If the center of the circle is within the polygon,\n    // the circle is not outside of the polygon completely.\n    // so return false.\n    if (pointInPolygon(circle.pos, polygon)) {\n        return false;\n    }\n    // Necessary add polygon pos to points\n    const points = (0, optimized_1.map)(polygon.calcPoints, ({ x, y }) => ({\n        x: x + polygon.pos.x,\n        y: y + polygon.pos.y,\n    }));\n    // If the center of the circle is within the polygon,\n    // the circle is not outside of the polygon completely.\n    // so return false.\n    if ((0, optimized_1.some)(points, (point) => (0, sat_1.pointInCircle)(point, circle) || pointOnCircle(point, circle))) {\n        return false;\n    }\n    // If any line-segment of the polygon intersects the circle,\n    // the circle is not \"contained\"\n    // so return false\n    if ((0, optimized_1.some)(points, (end, index) => {\n        const start = index\n            ? points[index - 1]\n            : points[points.length - 1];\n        return intersectLineCircle({ start, end }, circle).length > 0;\n    })) {\n        return false;\n    }\n    return true;\n}\nexports.circleOutsidePolygon = circleOutsidePolygon;\n/**\n * https://stackoverflow.com/a/37225895/1749528\n */\nfunction intersectLineCircle(line, { pos, r }) {\n    const v1 = { x: line.end.x - line.start.x, y: line.end.y - line.start.y };\n    const v2 = { x: line.start.x - pos.x, y: line.start.y - pos.y };\n    const b = (v1.x * v2.x + v1.y * v2.y) * -2;\n    const c = (v1.x * v1.x + v1.y * v1.y) * 2;\n    const d = Math.sqrt(b * b - (v2.x * v2.x + v2.y * v2.y - r * r) * c * 2);\n    if (isNaN(d)) {\n        // no intercept\n        return [];\n    }\n    const u1 = (b - d) / c; // these represent the unit distance of point one and two on the line\n    const u2 = (b + d) / c;\n    const results = []; // return array\n    if (u1 <= 1 && u1 >= 0) {\n        // add point if on the line segment\n        results.push({ x: line.start.x + v1.x * u1, y: line.start.y + v1.y * u1 });\n    }\n    if (u2 <= 1 && u2 >= 0) {\n        // second add point if on the line segment\n        results.push({ x: line.start.x + v1.x * u2, y: line.start.y + v1.y * u2 });\n    }\n    return results;\n}\nexports.intersectLineCircle = intersectLineCircle;\n/**\n * helper for intersectLineLineFast\n */\nfunction isTurn(point1, point2, point3) {\n    const A = (point3.x - point1.x) * (point2.y - point1.y);\n    const B = (point2.x - point1.x) * (point3.y - point1.y);\n    return A > B + Number.EPSILON ? 1 : A + Number.EPSILON < B ? -1 : 0;\n}\n/**\n * faster implementation of intersectLineLine\n * https://stackoverflow.com/a/16725715/1749528\n */\nfunction intersectLineLineFast(line1, line2) {\n    return (isTurn(line1.start, line2.start, line2.end) !==\n        isTurn(line1.end, line2.start, line2.end) &&\n        isTurn(line1.start, line1.end, line2.start) !==\n            isTurn(line1.start, line1.end, line2.end));\n}\nexports.intersectLineLineFast = intersectLineLineFast;\n/**\n * returns the point of intersection\n * https://stackoverflow.com/a/24392281/1749528\n */\nfunction intersectLineLine(line1, line2) {\n    const dX = line1.end.x - line1.start.x;\n    const dY = line1.end.y - line1.start.y;\n    const determinant = dX * (line2.end.y - line2.start.y) - (line2.end.x - line2.start.x) * dY;\n    if (determinant === 0) {\n        return null;\n    }\n    const lambda = ((line2.end.y - line2.start.y) * (line2.end.x - line1.start.x) +\n        (line2.start.x - line2.end.x) * (line2.end.y - line1.start.y)) /\n        determinant;\n    const gamma = ((line1.start.y - line1.end.y) * (line2.end.x - line1.start.x) +\n        dX * (line2.end.y - line1.start.y)) /\n        determinant;\n    // check if there is an intersection\n    if (!(lambda >= 0 && lambda <= 1) || !(gamma >= 0 && gamma <= 1)) {\n        return null;\n    }\n    return { x: line1.start.x + lambda * dX, y: line1.start.y + lambda * dY };\n}\nexports.intersectLineLine = intersectLineLine;\nfunction intersectLinePolygon(line, polygon) {\n    const results = [];\n    (0, optimized_1.forEach)(polygon.calcPoints, (to, index) => {\n        const from = index\n            ? polygon.calcPoints[index - 1]\n            : polygon.calcPoints[polygon.calcPoints.length - 1];\n        const side = {\n            start: { x: from.x + polygon.pos.x, y: from.y + polygon.pos.y },\n            end: { x: to.x + polygon.pos.x, y: to.y + polygon.pos.y },\n        };\n        const hit = intersectLineLine(line, side);\n        if (hit) {\n            results.push(hit);\n        }\n    });\n    return results;\n}\nexports.intersectLinePolygon = intersectLinePolygon;\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/intersect.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/model.js":
/*!******************************************************!*\
  !*** ./node_modules/detect-collisions/dist/model.js ***!
  \******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.BodyType = exports.SATCircle = exports.SATPolygon = exports.SATVector = exports.Response = exports.RBush = void 0;\nconst rbush_1 = __importDefault(__webpack_require__(/*! rbush */ \"./node_modules/rbush/rbush.min.js\"));\nObject.defineProperty(exports, \"RBush\", ({ enumerable: true, get: function () { return rbush_1.default; } }));\nconst sat_1 = __webpack_require__(/*! sat */ \"./node_modules/sat/SAT.js\");\nObject.defineProperty(exports, \"Response\", ({ enumerable: true, get: function () { return sat_1.Response; } }));\nObject.defineProperty(exports, \"SATVector\", ({ enumerable: true, get: function () { return sat_1.Vector; } }));\nObject.defineProperty(exports, \"SATPolygon\", ({ enumerable: true, get: function () { return sat_1.Polygon; } }));\nObject.defineProperty(exports, \"SATCircle\", ({ enumerable: true, get: function () { return sat_1.Circle; } }));\n/**\n * types\n */\nvar BodyType;\n(function (BodyType) {\n    BodyType[\"Ellipse\"] = \"Ellipse\";\n    BodyType[\"Line\"] = \"Line\";\n    BodyType[\"Circle\"] = \"Circle\";\n    BodyType[\"Box\"] = \"Box\";\n    BodyType[\"Point\"] = \"Point\";\n    BodyType[\"Polygon\"] = \"Polygon\";\n})(BodyType || (exports.BodyType = BodyType = {}));\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/model.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/optimized.js":
/*!**********************************************************!*\
  !*** ./node_modules/detect-collisions/dist/optimized.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.map = exports.filter = exports.every = exports.some = exports.forEach = void 0;\n/**\n * 40-90% faster than built-in Array.forEach function.\n *\n * basic benchmark: https://jsbench.me/urle772xdn\n */\nconst forEach = (array, callback) => {\n    for (let i = 0, l = array.length; i < l; i++) {\n        callback(array[i], i);\n    }\n};\nexports.forEach = forEach;\n/**\n * 20-90% faster than built-in Array.some function.\n *\n * basic benchmark: https://jsbench.me/l0le7bnnsq\n */\nconst some = (array, callback) => {\n    for (let i = 0, l = array.length; i < l; i++) {\n        if (callback(array[i], i)) {\n            return true;\n        }\n    }\n    return false;\n};\nexports.some = some;\n/**\n * 20-40% faster than built-in Array.every function.\n *\n * basic benchmark: https://jsbench.me/unle7da29v\n */\nconst every = (array, callback) => {\n    for (let i = 0, l = array.length; i < l; i++) {\n        if (!callback(array[i], i)) {\n            return false;\n        }\n    }\n    return true;\n};\nexports.every = every;\n/**\n * 20-60% faster than built-in Array.filter function.\n *\n * basic benchmark: https://jsbench.me/o1le77ev4l\n */\nconst filter = (array, callback) => {\n    const output = [];\n    for (let i = 0, l = array.length; i < l; i++) {\n        const item = array[i];\n        if (callback(item, i)) {\n            output.push(item);\n        }\n    }\n    return output;\n};\nexports.filter = filter;\n/**\n * 20-70% faster than built-in Array.map\n *\n * basic benchmark: https://jsbench.me/oyle77vbpc\n */\nconst map = (array, callback) => {\n    const output = new Array(array.length);\n    for (let i = 0, l = array.length; i < l; i++) {\n        output[i] = callback(array[i], i);\n    }\n    return output;\n};\nexports.map = map;\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/optimized.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/system.js":
/*!*******************************************************!*\
  !*** ./node_modules/detect-collisions/dist/system.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.System = void 0;\nconst base_system_1 = __webpack_require__(/*! ./base-system */ \"./node_modules/detect-collisions/dist/base-system.js\");\nconst line_1 = __webpack_require__(/*! ./bodies/line */ \"./node_modules/detect-collisions/dist/bodies/line.js\");\nconst model_1 = __webpack_require__(/*! ./model */ \"./node_modules/detect-collisions/dist/model.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"./node_modules/detect-collisions/dist/utils.js\");\nconst intersect_1 = __webpack_require__(/*! ./intersect */ \"./node_modules/detect-collisions/dist/intersect.js\");\nconst optimized_1 = __webpack_require__(/*! ./optimized */ \"./node_modules/detect-collisions/dist/optimized.js\");\n/**\n * collision system\n */\nclass System extends base_system_1.BaseSystem {\n    constructor() {\n        super(...arguments);\n        /**\n         * the last collision result\n         */\n        this.response = new model_1.Response();\n    }\n    /**\n     * remove body aabb from collision tree\n     */\n    remove(body, equals) {\n        body.system = undefined;\n        return super.remove(body, equals);\n    }\n    /**\n     * re-insert body into collision tree and update its aabb\n     * every body can be part of only one system\n     */\n    insert(body) {\n        body.bbox = body.getAABBAsBBox();\n        if (body.system) {\n            // allow end if body inserted and not moved\n            if (!(0, utils_1.bodyMoved)(body)) {\n                return this;\n            }\n            // old bounding box *needs* to be removed\n            body.system.remove(body);\n        }\n        // only then we update min, max\n        body.minX = body.bbox.minX - body.padding;\n        body.minY = body.bbox.minY - body.padding;\n        body.maxX = body.bbox.maxX + body.padding;\n        body.maxY = body.bbox.maxY + body.padding;\n        // set system for later body.system.updateBody(body)\n        body.system = this;\n        // reinsert bounding box to collision tree\n        return super.insert(body);\n    }\n    /**\n     * updates body in collision tree\n     */\n    updateBody(body) {\n        body.updateBody();\n    }\n    /**\n     * update all bodies aabb\n     */\n    update() {\n        (0, optimized_1.forEach)(this.all(), (body) => {\n            this.updateBody(body);\n        });\n    }\n    /**\n     * separate (move away) colliders\n     */\n    separate() {\n        this.checkAll(({ a, overlapV }) => {\n            // static bodies and triggers do not move back / separate\n            if (a.isTrigger) {\n                return false;\n            }\n            a.setPosition(a.x - overlapV.x, a.y - overlapV.y);\n        });\n    }\n    /**\n     * check one collider collisions with callback\n     */\n    checkOne(body, callback = () => true, response = this.response) {\n        // no need to check static body collision\n        if (body.isStatic) {\n            return false;\n        }\n        const bodies = this.search(body);\n        const checkCollision = (candidate) => {\n            if (candidate !== body &&\n                this.checkCollision(body, candidate, response)) {\n                return callback(response);\n            }\n        };\n        return (0, optimized_1.some)(bodies, checkCollision);\n    }\n    /**\n     * check all colliders collisions with callback\n     */\n    checkAll(callback, response = this.response) {\n        const bodies = this.all();\n        const checkOne = (body) => {\n            return this.checkOne(body, callback, response);\n        };\n        return (0, optimized_1.some)(bodies, checkOne);\n    }\n    /**\n     * get object potential colliders\n     * @deprecated because it's slower to use than checkOne() or checkAll()\n     */\n    getPotentials(body) {\n        // filter here is required as collides with self\n        return (0, optimized_1.filter)(this.search(body), (candidate) => candidate !== body);\n    }\n    /**\n     * check do 2 objects collide\n     */\n    checkCollision(bodyA, bodyB, response = this.response) {\n        // if any of bodies has padding, we can short return false by assesing the bbox without padding\n        if ((bodyA.padding || bodyB.padding) &&\n            (0, utils_1.notIntersectAABB)(bodyA.bbox || bodyA, bodyB.bbox || bodyB)) {\n            return false;\n        }\n        const sat = (0, utils_1.getSATTest)(bodyA, bodyB);\n        // 99% of cases\n        if (bodyA.isConvex && bodyB.isConvex) {\n            response.clear();\n            return sat(bodyA, bodyB, response);\n        }\n        // more complex (non convex) cases\n        const convexBodiesA = (0, intersect_1.ensureConvex)(bodyA);\n        const convexBodiesB = (0, intersect_1.ensureConvex)(bodyB);\n        const overlapV = new model_1.SATVector();\n        let collided = false;\n        (0, optimized_1.forEach)(convexBodiesA, (convexBodyA) => {\n            (0, optimized_1.forEach)(convexBodiesB, (convexBodyB) => {\n                response.clear();\n                if (sat(convexBodyA, convexBodyB, response)) {\n                    collided = true;\n                    overlapV.add(response.overlapV);\n                }\n            });\n        });\n        if (collided) {\n            response.a = bodyA;\n            response.b = bodyB;\n            response.overlapV = overlapV;\n            response.overlapN = overlapV.clone().normalize();\n            response.overlap = overlapV.len();\n            response.aInB = (0, utils_1.checkAInB)(bodyA, bodyB);\n            response.bInA = (0, utils_1.checkAInB)(bodyB, bodyA);\n        }\n        return collided;\n    }\n    /**\n     * raycast to get collider of ray from start to end\n     */\n    raycast(start, end, allow = () => true) {\n        let minDistance = Infinity;\n        let result = null;\n        if (!this.ray) {\n            this.ray = new line_1.Line(start, end, { isTrigger: true });\n        }\n        else {\n            this.ray.start = start;\n            this.ray.end = end;\n        }\n        this.insert(this.ray);\n        this.checkOne(this.ray, ({ b: body }) => {\n            if (!allow(body)) {\n                return false;\n            }\n            const points = body.type === model_1.BodyType.Circle\n                ? (0, intersect_1.intersectLineCircle)(this.ray, body)\n                : (0, intersect_1.intersectLinePolygon)(this.ray, body);\n            (0, optimized_1.forEach)(points, (point) => {\n                const pointDistance = (0, utils_1.distance)(start, point);\n                if (pointDistance < minDistance) {\n                    minDistance = pointDistance;\n                    result = { point, body };\n                }\n            });\n        });\n        this.remove(this.ray);\n        return result;\n    }\n    /**\n     * used to find body deep inside data with finder function returning boolean found or not\n     */\n    traverse(find, { children } = this.data) {\n        return children === null || children === void 0 ? void 0 : children.find((body, index) => {\n            if (!body) {\n                return false;\n            }\n            if (body.type && find(body, children, index)) {\n                return true;\n            }\n            // if callback returns true, ends forEach\n            if (body.children) {\n                this.traverse(find, body);\n            }\n        });\n    }\n}\nexports.System = System;\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/system.js?");

/***/ }),

/***/ "./node_modules/detect-collisions/dist/utils.js":
/*!******************************************************!*\
  !*** ./node_modules/detect-collisions/dist/utils.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.drawBVH = exports.drawPolygon = exports.getSATTest = exports.getBounceDirection = exports.mapArrayToVector = exports.mapVectorToArray = exports.dashLineTo = exports.clonePointsArray = exports.checkAInB = exports.intersectAABB = exports.notIntersectAABB = exports.bodyMoved = exports.extendBody = exports.clockwise = exports.distance = exports.ensurePolygonPoints = exports.ensureVectorPoint = exports.createBox = exports.createEllipse = exports.rad2deg = exports.deg2rad = exports.RAD2DEG = exports.DEG2RAD = void 0;\nconst sat_1 = __webpack_require__(/*! sat */ \"./node_modules/sat/SAT.js\");\nconst intersect_1 = __webpack_require__(/*! ./intersect */ \"./node_modules/detect-collisions/dist/intersect.js\");\nconst model_1 = __webpack_require__(/*! ./model */ \"./node_modules/detect-collisions/dist/model.js\");\nconst optimized_1 = __webpack_require__(/*! ./optimized */ \"./node_modules/detect-collisions/dist/optimized.js\");\nexports.DEG2RAD = Math.PI / 180;\nexports.RAD2DEG = 180 / Math.PI;\n/**\n * convert from degrees to radians\n */\nfunction deg2rad(degrees) {\n    return degrees * exports.DEG2RAD;\n}\nexports.deg2rad = deg2rad;\n/**\n * convert from radians to degrees\n */\nfunction rad2deg(radians) {\n    return radians * exports.RAD2DEG;\n}\nexports.rad2deg = rad2deg;\n/**\n * creates ellipse-shaped polygon based on params\n */\nfunction createEllipse(radiusX, radiusY = radiusX, step = 1) {\n    const steps = Math.PI * Math.hypot(radiusX, radiusY) * 2;\n    const length = Math.max(8, Math.ceil(steps / Math.max(1, step)));\n    return Array.from({ length }, (_, index) => {\n        const value = (index / length) * 2 * Math.PI;\n        const x = Math.cos(value) * radiusX;\n        const y = Math.sin(value) * radiusY;\n        return new sat_1.Vector(x, y);\n    });\n}\nexports.createEllipse = createEllipse;\n/**\n * creates box polygon points\n */\nfunction createBox(width, height) {\n    return [\n        new sat_1.Vector(0, 0),\n        new sat_1.Vector(width, 0),\n        new sat_1.Vector(width, height),\n        new sat_1.Vector(0, height),\n    ];\n}\nexports.createBox = createBox;\n/**\n * ensure Vector point\n */\nfunction ensureVectorPoint(point = {}) {\n    return point instanceof sat_1.Vector\n        ? point\n        : new sat_1.Vector(point.x || 0, point.y || 0);\n}\nexports.ensureVectorPoint = ensureVectorPoint;\n/**\n * ensure Vector points (for polygon) in counter-clockwise order\n */\nfunction ensurePolygonPoints(points) {\n    if (!points) {\n        throw new Error(\"No points array provided\");\n    }\n    const polygonPoints = (0, optimized_1.map)(points, ensureVectorPoint);\n    return clockwise(polygonPoints) ? polygonPoints.reverse() : polygonPoints;\n}\nexports.ensurePolygonPoints = ensurePolygonPoints;\n/**\n * get distance between two Vector points\n */\nfunction distance(a, b) {\n    return Math.hypot(a.x - b.x, a.y - b.y);\n}\nexports.distance = distance;\n/**\n * check direction of polygon\n */\nfunction clockwise(points) {\n    let sum = 0;\n    for (let i = 0; i < points.length; i++) {\n        const v1 = points[i];\n        const v2 = points[(i + 1) % points.length];\n        sum += (v2.x - v1.x) * (v2.y + v1.y);\n    }\n    return sum > 0;\n}\nexports.clockwise = clockwise;\n/**\n * used for all types of bodies\n */\nfunction extendBody(body, options) {\n    body.isStatic = !!(options === null || options === void 0 ? void 0 : options.isStatic);\n    body.isTrigger = !!(options === null || options === void 0 ? void 0 : options.isTrigger);\n    body.padding = (options === null || options === void 0 ? void 0 : options.padding) || 0;\n    if (body.type !== model_1.BodyType.Circle) {\n        body.isCentered = (options === null || options === void 0 ? void 0 : options.isCentered) || false;\n    }\n    body.setAngle((options === null || options === void 0 ? void 0 : options.angle) || 0);\n}\nexports.extendBody = extendBody;\n/**\n * check if body moved outside of its padding\n */\nfunction bodyMoved(body) {\n    return (body.bbox.minX < body.minX ||\n        body.bbox.minY < body.minY ||\n        body.bbox.maxX > body.maxX ||\n        body.bbox.maxY > body.maxY);\n}\nexports.bodyMoved = bodyMoved;\n/**\n * returns true if two boxes not intersect\n */\nfunction notIntersectAABB(a, b) {\n    return (b.minX > a.maxX || b.minY > a.maxY || b.maxX < a.minX || b.maxY < a.minY);\n}\nexports.notIntersectAABB = notIntersectAABB;\n/**\n * checks if two boxes intersect\n */\nfunction intersectAABB(a, b) {\n    return !notIntersectAABB(a, b);\n}\nexports.intersectAABB = intersectAABB;\n/**\n * checks if body a is in body b\n */\nfunction checkAInB(a, b) {\n    if (a.type === model_1.BodyType.Circle) {\n        if (b.type !== model_1.BodyType.Circle) {\n            return (0, intersect_1.circleInPolygon)(a, b);\n        }\n        return (0, intersect_1.circleInCircle)(a, b);\n    }\n    if (b.type === model_1.BodyType.Circle) {\n        return (0, intersect_1.polygonInCircle)(a, b);\n    }\n    return (0, intersect_1.polygonInPolygon)(a, b);\n}\nexports.checkAInB = checkAInB;\n/**\n * clone sat vector points array into vector points array\n */\nfunction clonePointsArray(points) {\n    return (0, optimized_1.map)(points, ({ x, y }) => ({\n        x,\n        y,\n    }));\n}\nexports.clonePointsArray = clonePointsArray;\n/**\n * draws dashed line on canvas context\n */\nfunction dashLineTo(context, fromX, fromY, toX, toY, dash = 2, gap = 4) {\n    const xDiff = toX - fromX;\n    const yDiff = toY - fromY;\n    const arc = Math.atan2(yDiff, xDiff);\n    const offsetX = Math.cos(arc);\n    const offsetY = Math.sin(arc);\n    let posX = fromX;\n    let posY = fromY;\n    let dist = Math.hypot(xDiff, yDiff);\n    while (dist > 0) {\n        const step = Math.min(dist, dash);\n        context.moveTo(posX, posY);\n        context.lineTo(posX + offsetX * step, posY + offsetY * step);\n        posX += offsetX * (dash + gap);\n        posY += offsetY * (dash + gap);\n        dist -= dash + gap;\n    }\n}\nexports.dashLineTo = dashLineTo;\n/**\n * change format from poly-decomp to SAT.js\n */\nfunction mapVectorToArray({ x, y } = { x: 0, y: 0 }) {\n    return [x, y];\n}\nexports.mapVectorToArray = mapVectorToArray;\n/**\n * change format from SAT.js to poly-decomp\n */\nfunction mapArrayToVector([x, y] = [0, 0]) {\n    return { x, y };\n}\nexports.mapArrayToVector = mapArrayToVector;\n/**\n * given 2 bodies calculate vector of bounce assuming equal mass and they are circles\n */\nfunction getBounceDirection(body, collider) {\n    const v2 = new sat_1.Vector(collider.x - body.x, collider.y - body.y);\n    const v1 = new sat_1.Vector(body.x - collider.x, body.y - collider.y);\n    const len = v1.dot(v2.normalize()) * 2;\n    return new sat_1.Vector(v2.x * len - v1.x, v2.y * len - v1.y).normalize();\n}\nexports.getBounceDirection = getBounceDirection;\n/**\n * returns correct sat.js testing function based on body types\n */\nfunction getSATTest(body, wall) {\n    if (body.type === model_1.BodyType.Circle) {\n        return wall.type === model_1.BodyType.Circle ? sat_1.testCircleCircle : sat_1.testCirclePolygon;\n    }\n    return wall.type === model_1.BodyType.Circle ? sat_1.testPolygonCircle : sat_1.testPolygonPolygon;\n}\nexports.getSATTest = getSATTest;\n/**\n * draw polygon\n */\nfunction drawPolygon(context, { pos, calcPoints, }, isTrigger = false) {\n    const lastPoint = calcPoints[calcPoints.length - 1];\n    const fromX = pos.x + lastPoint.x;\n    const fromY = pos.y + lastPoint.y;\n    if (calcPoints.length === 1) {\n        context.arc(fromX, fromY, 1, 0, Math.PI * 2);\n    }\n    else {\n        context.moveTo(fromX, fromY);\n    }\n    (0, optimized_1.forEach)(calcPoints, (point, index) => {\n        const toX = pos.x + point.x;\n        const toY = pos.y + point.y;\n        if (isTrigger) {\n            const prev = calcPoints[index - 1] || lastPoint;\n            dashLineTo(context, pos.x + prev.x, pos.y + prev.y, toX, toY);\n        }\n        else {\n            context.lineTo(toX, toY);\n        }\n    });\n}\nexports.drawPolygon = drawPolygon;\n/**\n * draw body bounding body\n */\nfunction drawBVH(context, body) {\n    drawPolygon(context, {\n        pos: { x: body.minX, y: body.minY },\n        calcPoints: createBox(body.maxX - body.minX, body.maxY - body.minY),\n    });\n}\nexports.drawBVH = drawBVH;\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/detect-collisions/dist/utils.js?");

/***/ }),

/***/ "./node_modules/js-md5/src/md5.js":
/*!****************************************!*\
  !*** ./node_modules/js-md5/src/md5.js ***!
  \****************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/**\n * [js-md5]{@link https://github.com/emn178/js-md5}\n *\n * @namespace md5\n * @version 0.7.3\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_MD5_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_MD5_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = __webpack_require__.g;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_MD5_NO_COMMON_JS && \"object\" === 'object' && module.exports;\n  var AMD =  true && __webpack_require__.amdO;\n  var ARRAY_BUFFER = !root.JS_MD5_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [128, 32768, 8388608, -2147483648];\n  var SHIFT = [0, 8, 16, 24];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'buffer', 'arrayBuffer', 'base64'];\n  var BASE64_ENCODE_CHAR = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n  var blocks = [], buffer8;\n  if (ARRAY_BUFFER) {\n    var buffer = new ArrayBuffer(68);\n    buffer8 = new Uint8Array(buffer);\n    blocks = new Uint32Array(buffer);\n  }\n\n  if (root.JS_MD5_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_MD5_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  /**\n   * @method hex\n   * @memberof md5\n   * @description Output hash as hex string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} Hex string\n   * @example\n   * md5.hex('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * md5('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method digest\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.digest('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method array\n   * @memberof md5\n   * @description Output hash as bytes array\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Array} Bytes array\n   * @example\n   * md5.array('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method arrayBuffer\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.arrayBuffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof md5\n   * @description Output hash as ArrayBuffer\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @example\n   * md5.buffer('The quick brown fox jumps over the lazy dog');\n   */\n  /**\n   * @method base64\n   * @memberof md5\n   * @description Output hash as base64 string\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {String} base64 string\n   * @example\n   * md5.base64('The quick brown fox jumps over the lazy dog');\n   */\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Md5(true).update(message)[outputType]();\n    };\n  };\n\n  /**\n   * @method create\n   * @memberof md5\n   * @description Create Md5 object\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.create();\n   */\n  /**\n   * @method update\n   * @memberof md5\n   * @description Create and update Md5 object\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @example\n   * var hash = md5.update('The quick brown fox jumps over the lazy dog');\n   * // equal to\n   * var hash = md5.create();\n   * hash.update('The quick brown fox jumps over the lazy dog');\n   */\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Md5();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('md5').update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw ERROR;\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash('md5').update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  /**\n   * Md5 class\n   * @class Md5\n   * @description This is internal class.\n   * @see {@link md5.create}\n   */\n  function Md5(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n      this.buffer8 = buffer8;\n    } else {\n      if (ARRAY_BUFFER) {\n        var buffer = new ArrayBuffer(68);\n        this.buffer8 = new Uint8Array(buffer);\n        this.blocks = new Uint32Array(buffer);\n      } else {\n        this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n      }\n    }\n    this.h0 = this.h1 = this.h2 = this.h3 = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  /**\n   * @method update\n   * @memberof Md5\n   * @instance\n   * @description Update hash\n   * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n   * @returns {Md5} Md5 object.\n   * @see {@link md5.update}\n   */\n  Md5.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw ERROR;\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw ERROR;\n          }\n        }\n      } else {\n        throw ERROR;\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n    var buffer8 = this.buffer8;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = blocks[16];\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            buffer8[i++] = message[index];\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n          }\n        }\n      } else {\n        if (ARRAY_BUFFER) {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              buffer8[i++] = code;\n            } else if (code < 0x800) {\n              buffer8[i++] = 0xc0 | (code >> 6);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else if (code < 0xd800 || code >= 0xe000) {\n              buffer8[i++] = 0xe0 | (code >> 12);\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              buffer8[i++] = 0xf0 | (code >> 18);\n              buffer8[i++] = 0x80 | ((code >> 12) & 0x3f);\n              buffer8[i++] = 0x80 | ((code >> 6) & 0x3f);\n              buffer8[i++] = 0x80 | (code & 0x3f);\n            }\n          }\n        } else {\n          for (i = this.start; index < length && i < 64; ++index) {\n            code = message.charCodeAt(index);\n            if (code < 0x80) {\n              blocks[i >> 2] |= code << SHIFT[i++ & 3];\n            } else if (code < 0x800) {\n              blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else if (code < 0xd800 || code >= 0xe000) {\n              blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            } else {\n              code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n              blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n              blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n            }\n          }\n        }\n      }\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Md5.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = blocks[16];\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.bytes << 3;\n    blocks[15] = this.hBytes << 3 | this.bytes >>> 29;\n    this.hash();\n  };\n\n  Md5.prototype.hash = function () {\n    var a, b, c, d, bc, da, blocks = this.blocks;\n\n    if (this.first) {\n      a = blocks[0] - 680876937;\n      a = (a << 7 | a >>> 25) - 271733879 << 0;\n      d = (-1732584194 ^ a & 2004318071) + blocks[1] - 117830708;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c = (-271733879 ^ (d & (a ^ -271733879))) + blocks[2] - 1126478375;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b = (a ^ (c & (d ^ a))) + blocks[3] - 1316259209;\n      b = (b << 22 | b >>> 10) + c << 0;\n    } else {\n      a = this.h0;\n      b = this.h1;\n      c = this.h2;\n      d = this.h3;\n      a += (d ^ (b & (c ^ d))) + blocks[0] - 680876936;\n      a = (a << 7 | a >>> 25) + b << 0;\n      d += (c ^ (a & (b ^ c))) + blocks[1] - 389564586;\n      d = (d << 12 | d >>> 20) + a << 0;\n      c += (b ^ (d & (a ^ b))) + blocks[2] + 606105819;\n      c = (c << 17 | c >>> 15) + d << 0;\n      b += (a ^ (c & (d ^ a))) + blocks[3] - 1044525330;\n      b = (b << 22 | b >>> 10) + c << 0;\n    }\n\n    a += (d ^ (b & (c ^ d))) + blocks[4] - 176418897;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[5] + 1200080426;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[6] - 1473231341;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[7] - 45705983;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[8] + 1770035416;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[9] - 1958414417;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[10] - 42063;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[11] - 1990404162;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (d ^ (b & (c ^ d))) + blocks[12] + 1804603682;\n    a = (a << 7 | a >>> 25) + b << 0;\n    d += (c ^ (a & (b ^ c))) + blocks[13] - 40341101;\n    d = (d << 12 | d >>> 20) + a << 0;\n    c += (b ^ (d & (a ^ b))) + blocks[14] - 1502002290;\n    c = (c << 17 | c >>> 15) + d << 0;\n    b += (a ^ (c & (d ^ a))) + blocks[15] + 1236535329;\n    b = (b << 22 | b >>> 10) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[1] - 165796510;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[6] - 1069501632;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[11] + 643717713;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[0] - 373897302;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[5] - 701558691;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[10] + 38016083;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[15] - 660478335;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[4] - 405537848;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[9] + 568446438;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[14] - 1019803690;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[3] - 187363961;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[8] + 1163531501;\n    b = (b << 20 | b >>> 12) + c << 0;\n    a += (c ^ (d & (b ^ c))) + blocks[13] - 1444681467;\n    a = (a << 5 | a >>> 27) + b << 0;\n    d += (b ^ (c & (a ^ b))) + blocks[2] - 51403784;\n    d = (d << 9 | d >>> 23) + a << 0;\n    c += (a ^ (b & (d ^ a))) + blocks[7] + 1735328473;\n    c = (c << 14 | c >>> 18) + d << 0;\n    b += (d ^ (a & (c ^ d))) + blocks[12] - 1926607734;\n    b = (b << 20 | b >>> 12) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[5] - 378558;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[8] - 2022574463;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[11] + 1839030562;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[14] - 35309556;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[1] - 1530992060;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[4] + 1272893353;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[7] - 155497632;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[10] - 1094730640;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[13] + 681279174;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[0] - 358537222;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[3] - 722521979;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[6] + 76029189;\n    b = (b << 23 | b >>> 9) + c << 0;\n    bc = b ^ c;\n    a += (bc ^ d) + blocks[9] - 640364487;\n    a = (a << 4 | a >>> 28) + b << 0;\n    d += (bc ^ a) + blocks[12] - 421815835;\n    d = (d << 11 | d >>> 21) + a << 0;\n    da = d ^ a;\n    c += (da ^ b) + blocks[15] + 530742520;\n    c = (c << 16 | c >>> 16) + d << 0;\n    b += (da ^ c) + blocks[2] - 995338651;\n    b = (b << 23 | b >>> 9) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[0] - 198630844;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[7] + 1126891415;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[14] - 1416354905;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[5] - 57434055;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[12] + 1700485571;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[3] - 1894986606;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[10] - 1051523;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[1] - 2054922799;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[8] + 1873313359;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[15] - 30611744;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[6] - 1560198380;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[13] + 1309151649;\n    b = (b << 21 | b >>> 11) + c << 0;\n    a += (c ^ (b | ~d)) + blocks[4] - 145523070;\n    a = (a << 6 | a >>> 26) + b << 0;\n    d += (b ^ (a | ~c)) + blocks[11] - 1120210379;\n    d = (d << 10 | d >>> 22) + a << 0;\n    c += (a ^ (d | ~b)) + blocks[2] + 718787259;\n    c = (c << 15 | c >>> 17) + d << 0;\n    b += (d ^ (c | ~a)) + blocks[9] - 343485551;\n    b = (b << 21 | b >>> 11) + c << 0;\n\n    if (this.first) {\n      this.h0 = a + 1732584193 << 0;\n      this.h1 = b - 271733879 << 0;\n      this.h2 = c - 1732584194 << 0;\n      this.h3 = d + 271733878 << 0;\n      this.first = false;\n    } else {\n      this.h0 = this.h0 + a << 0;\n      this.h1 = this.h1 + b << 0;\n      this.h2 = this.h2 + c << 0;\n      this.h3 = this.h3 + d << 0;\n    }\n  };\n\n  /**\n   * @method hex\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.hex();\n   */\n  Md5.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n\n    return HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F];\n  };\n\n  /**\n   * @method toString\n   * @memberof Md5\n   * @instance\n   * @description Output hash as hex string\n   * @returns {String} Hex string\n   * @see {@link md5.hex}\n   * @example\n   * hash.toString();\n   */\n  Md5.prototype.toString = Md5.prototype.hex;\n\n  /**\n   * @method digest\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.digest}\n   * @example\n   * hash.digest();\n   */\n  Md5.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3;\n    return [\n      h0 & 0xFF, (h0 >> 8) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 24) & 0xFF,\n      h1 & 0xFF, (h1 >> 8) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 24) & 0xFF,\n      h2 & 0xFF, (h2 >> 8) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 24) & 0xFF,\n      h3 & 0xFF, (h3 >> 8) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 24) & 0xFF\n    ];\n  };\n\n  /**\n   * @method array\n   * @memberof Md5\n   * @instance\n   * @description Output hash as bytes array\n   * @returns {Array} Bytes array\n   * @see {@link md5.array}\n   * @example\n   * hash.array();\n   */\n  Md5.prototype.array = Md5.prototype.digest;\n\n  /**\n   * @method arrayBuffer\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.arrayBuffer}\n   * @example\n   * hash.arrayBuffer();\n   */\n  Md5.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(16);\n    var blocks = new Uint32Array(buffer);\n    blocks[0] = this.h0;\n    blocks[1] = this.h1;\n    blocks[2] = this.h2;\n    blocks[3] = this.h3;\n    return buffer;\n  };\n\n  /**\n   * @method buffer\n   * @deprecated This maybe confuse with Buffer in node.js. Please use arrayBuffer instead.\n   * @memberof Md5\n   * @instance\n   * @description Output hash as ArrayBuffer\n   * @returns {ArrayBuffer} ArrayBuffer\n   * @see {@link md5.buffer}\n   * @example\n   * hash.buffer();\n   */\n  Md5.prototype.buffer = Md5.prototype.arrayBuffer;\n\n  /**\n   * @method base64\n   * @memberof Md5\n   * @instance\n   * @description Output hash as base64 string\n   * @returns {String} base64 string\n   * @see {@link md5.base64}\n   * @example\n   * hash.base64();\n   */\n  Md5.prototype.base64 = function () {\n    var v1, v2, v3, base64Str = '', bytes = this.array();\n    for (var i = 0; i < 15;) {\n      v1 = bytes[i++];\n      v2 = bytes[i++];\n      v3 = bytes[i++];\n      base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n        BASE64_ENCODE_CHAR[(v1 << 4 | v2 >>> 4) & 63] +\n        BASE64_ENCODE_CHAR[(v2 << 2 | v3 >>> 6) & 63] +\n        BASE64_ENCODE_CHAR[v3 & 63];\n    }\n    v1 = bytes[i];\n    base64Str += BASE64_ENCODE_CHAR[v1 >>> 2] +\n      BASE64_ENCODE_CHAR[(v1 << 4) & 63] +\n      '==';\n    return base64Str;\n  };\n\n  var exports = createMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    /**\n     * @method md5\b\n     * @description Md5 hash function, export to global in browsers.\n     * @param {String|Array|Uint8Array|ArrayBuffer} message message to hash\n     * @returns {String} md5 hashes\n     * @example\n     * md5(''); // d41d8cd98f00b204e9800998ecf8427e\n     * md5('The quick brown fox jumps over the lazy dog'); // 9e107d9d372bb6826bd81d3542a419d6\n     * md5('The quick brown fox jumps over the lazy dog.'); // e4d909c290d0fb1ca068ffaddf22cbd0\n     *\n     * // It also supports UTF-8 encoding\n     * md5('中文'); // a7bac2239fcdcb3a067903d8077c4a07\n     *\n     * // It also supports byte `Array`, `Uint8Array`, `ArrayBuffer`\n     * md5([]); // d41d8cd98f00b204e9800998ecf8427e\n     * md5(new Uint8Array([])); // d41d8cd98f00b204e9800998ecf8427e\n     */\n    root.md5 = exports;\n    if (AMD) {\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n        return exports;\n      }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n  }\n})();\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/js-md5/src/md5.js?");

/***/ }),

/***/ "./node_modules/js-sha1/src/sha1.js":
/*!******************************************!*\
  !*** ./node_modules/js-sha1/src/sha1.js ***!
  \******************************************/
/***/ ((module, exports, __webpack_require__) => {

eval("var __WEBPACK_AMD_DEFINE_RESULT__;/*\n * [js-sha1]{@link https://github.com/emn178/js-sha1}\n *\n * @version 0.6.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function() {\n  'use strict';\n\n  var root = typeof window === 'object' ? window : {};\n  var NODE_JS = !root.JS_SHA1_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = __webpack_require__.g;\n  }\n  var COMMON_JS = !root.JS_SHA1_NO_COMMON_JS && \"object\" === 'object' && module.exports;\n  var AMD =  true && __webpack_require__.amdO;\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  var createOutputMethod = function (outputType) {\n    return function (message) {\n      return new Sha1(true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function () {\n    var method = createOutputMethod('hex');\n    if (NODE_JS) {\n      method = nodeWrap(method);\n    }\n    method.create = function () {\n      return new Sha1();\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash('sha1').update(message, 'utf8').digest('hex');\n      } else if (message.constructor === ArrayBuffer) {\n        message = new Uint8Array(message);\n      } else if (message.length === undefined) {\n        return method(message);\n      }\n      return crypto.createHash('sha1').update(new Buffer(message)).digest('hex');\n    };\n    return nodeMethod;\n  };\n\n  function Sha1(sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    this.h0 = 0x67452301;\n    this.h1 = 0xEFCDAB89;\n    this.h2 = 0x98BADCFE;\n    this.h3 = 0x10325476;\n    this.h4 = 0xC3D2E1F0;\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n  }\n\n  Sha1.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString = typeof(message) !== 'string';\n    if (notString && message.constructor === root.ArrayBuffer) {\n      message = new Uint8Array(message);\n    }\n    var code, index = 0, i, length = message.length || 0, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if(notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha1.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n      blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n      blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n      blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha1.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4;\n    var f, j, t, blocks = this.blocks;\n\n    for(j = 16; j < 80; ++j) {\n      t = blocks[j - 3] ^ blocks[j - 8] ^ blocks[j - 14] ^ blocks[j - 16];\n      blocks[j] =  (t << 1) | (t >>> 31);\n    }\n\n    for(j = 0; j < 20; j += 5) {\n      f = (b & c) | ((~b) & d);\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e + 1518500249 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = (a & b) | ((~a) & c);\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d + 1518500249 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = (e & a) | ((~e) & b);\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c + 1518500249 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = (d & e) | ((~d) & a);\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b + 1518500249 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = (c & d) | ((~c) & e);\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a + 1518500249 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 40; j += 5) {\n      f = b ^ c ^ d;\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e + 1859775393 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = a ^ b ^ c;\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d + 1859775393 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = e ^ a ^ b;\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c + 1859775393 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = d ^ e ^ a;\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b + 1859775393 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = c ^ d ^ e;\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a + 1859775393 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 60; j += 5) {\n      f = (b & c) | (b & d) | (c & d);\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e - 1894007588 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = (a & b) | (a & c) | (b & c);\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d - 1894007588 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = (e & a) | (e & b) | (a & b);\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c - 1894007588 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = (d & e) | (d & a) | (e & a);\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b - 1894007588 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = (c & d) | (c & e) | (d & e);\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a - 1894007588 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    for(; j < 80; j += 5) {\n      f = b ^ c ^ d;\n      t = (a << 5) | (a >>> 27);\n      e = t + f + e - 899497514 + blocks[j] << 0;\n      b = (b << 30) | (b >>> 2);\n\n      f = a ^ b ^ c;\n      t = (e << 5) | (e >>> 27);\n      d = t + f + d - 899497514 + blocks[j + 1] << 0;\n      a = (a << 30) | (a >>> 2);\n\n      f = e ^ a ^ b;\n      t = (d << 5) | (d >>> 27);\n      c = t + f + c - 899497514 + blocks[j + 2] << 0;\n      e = (e << 30) | (e >>> 2);\n\n      f = d ^ e ^ a;\n      t = (c << 5) | (c >>> 27);\n      b = t + f + b - 899497514 + blocks[j + 3] << 0;\n      d = (d << 30) | (d >>> 2);\n\n      f = c ^ d ^ e;\n      t = (b << 5) | (b >>> 27);\n      a = t + f + a - 899497514 + blocks[j + 4] << 0;\n      c = (c << 30) | (c >>> 2);\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n  };\n\n  Sha1.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n\n    return HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n           HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n           HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n           HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n           HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n           HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n           HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n           HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n           HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n           HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n           HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n           HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n           HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n           HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n           HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n           HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n           HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n           HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n           HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n           HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F];\n  };\n\n  Sha1.prototype.toString = Sha1.prototype.hex;\n\n  Sha1.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4;\n\n    return [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF\n    ];\n  };\n\n  Sha1.prototype.array = Sha1.prototype.digest;\n\n  Sha1.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(20);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    return buffer;\n  };\n\n  var exports = createMethod();\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha1 = exports;\n    if (AMD) {\n      !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {\n        return exports;\n      }).call(exports, __webpack_require__, exports, module),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    }\n  }\n})();\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/js-sha1/src/sha1.js?");

/***/ }),

/***/ "./node_modules/poly-decomp/src/index.js":
/*!***********************************************!*\
  !*** ./node_modules/poly-decomp/src/index.js ***!
  \***********************************************/
/***/ ((module) => {

eval("module.exports = {\n    decomp: polygonDecomp,\n    quickDecomp: polygonQuickDecomp,\n    isSimple: polygonIsSimple,\n    removeCollinearPoints: polygonRemoveCollinearPoints,\n    removeDuplicatePoints: polygonRemoveDuplicatePoints,\n    makeCCW: polygonMakeCCW\n};\n\n/**\n * Compute the intersection between two lines.\n * @static\n * @method lineInt\n * @param  {Array}  l1          Line vector 1\n * @param  {Array}  l2          Line vector 2\n * @param  {Number} precision   Precision to use when checking if the lines are parallel\n * @return {Array}              The intersection point.\n */\nfunction lineInt(l1,l2,precision){\n    precision = precision || 0;\n    var i = [0,0]; // point\n    var a1, b1, c1, a2, b2, c2, det; // scalars\n    a1 = l1[1][1] - l1[0][1];\n    b1 = l1[0][0] - l1[1][0];\n    c1 = a1 * l1[0][0] + b1 * l1[0][1];\n    a2 = l2[1][1] - l2[0][1];\n    b2 = l2[0][0] - l2[1][0];\n    c2 = a2 * l2[0][0] + b2 * l2[0][1];\n    det = a1 * b2 - a2*b1;\n    if (!scalar_eq(det, 0, precision)) { // lines are not parallel\n        i[0] = (b2 * c1 - b1 * c2) / det;\n        i[1] = (a1 * c2 - a2 * c1) / det;\n    }\n    return i;\n}\n\n/**\n * Checks if two line segments intersects.\n * @method segmentsIntersect\n * @param {Array} p1 The start vertex of the first line segment.\n * @param {Array} p2 The end vertex of the first line segment.\n * @param {Array} q1 The start vertex of the second line segment.\n * @param {Array} q2 The end vertex of the second line segment.\n * @return {Boolean} True if the two line segments intersect\n */\nfunction lineSegmentsIntersect(p1, p2, q1, q2){\n\tvar dx = p2[0] - p1[0];\n\tvar dy = p2[1] - p1[1];\n\tvar da = q2[0] - q1[0];\n\tvar db = q2[1] - q1[1];\n\n\t// segments are parallel\n\tif((da*dy - db*dx) === 0){\n\t\treturn false;\n\t}\n\n\tvar s = (dx * (q1[1] - p1[1]) + dy * (p1[0] - q1[0])) / (da * dy - db * dx);\n\tvar t = (da * (p1[1] - q1[1]) + db * (q1[0] - p1[0])) / (db * dx - da * dy);\n\n\treturn (s>=0 && s<=1 && t>=0 && t<=1);\n}\n\n/**\n * Get the area of a triangle spanned by the three given points. Note that the area will be negative if the points are not given in counter-clockwise order.\n * @static\n * @method area\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @return {Number}\n */\nfunction triangleArea(a,b,c){\n    return (((b[0] - a[0])*(c[1] - a[1]))-((c[0] - a[0])*(b[1] - a[1])));\n}\n\nfunction isLeft(a,b,c){\n    return triangleArea(a,b,c) > 0;\n}\n\nfunction isLeftOn(a,b,c) {\n    return triangleArea(a, b, c) >= 0;\n}\n\nfunction isRight(a,b,c) {\n    return triangleArea(a, b, c) < 0;\n}\n\nfunction isRightOn(a,b,c) {\n    return triangleArea(a, b, c) <= 0;\n}\n\nvar tmpPoint1 = [],\n    tmpPoint2 = [];\n\n/**\n * Check if three points are collinear\n * @method collinear\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Array} c\n * @param  {Number} [thresholdAngle=0] Threshold angle to use when comparing the vectors. The function will return true if the angle between the resulting vectors is less than this value. Use zero for max precision.\n * @return {Boolean}\n */\nfunction collinear(a,b,c,thresholdAngle) {\n    if(!thresholdAngle){\n        return triangleArea(a, b, c) === 0;\n    } else {\n        var ab = tmpPoint1,\n            bc = tmpPoint2;\n\n        ab[0] = b[0]-a[0];\n        ab[1] = b[1]-a[1];\n        bc[0] = c[0]-b[0];\n        bc[1] = c[1]-b[1];\n\n        var dot = ab[0]*bc[0] + ab[1]*bc[1],\n            magA = Math.sqrt(ab[0]*ab[0] + ab[1]*ab[1]),\n            magB = Math.sqrt(bc[0]*bc[0] + bc[1]*bc[1]),\n            angle = Math.acos(dot/(magA*magB));\n        return angle < thresholdAngle;\n    }\n}\n\nfunction sqdist(a,b){\n    var dx = b[0] - a[0];\n    var dy = b[1] - a[1];\n    return dx * dx + dy * dy;\n}\n\n/**\n * Get a vertex at position i. It does not matter if i is out of bounds, this function will just cycle.\n * @method at\n * @param  {Number} i\n * @return {Array}\n */\nfunction polygonAt(polygon, i){\n    var s = polygon.length;\n    return polygon[i < 0 ? i % s + s : i % s];\n}\n\n/**\n * Clear the polygon data\n * @method clear\n * @return {Array}\n */\nfunction polygonClear(polygon){\n    polygon.length = 0;\n}\n\n/**\n * Append points \"from\" to \"to\"-1 from an other polygon \"poly\" onto this one.\n * @method append\n * @param {Polygon} poly The polygon to get points from.\n * @param {Number}  from The vertex index in \"poly\".\n * @param {Number}  to The end vertex index in \"poly\". Note that this vertex is NOT included when appending.\n * @return {Array}\n */\nfunction polygonAppend(polygon, poly, from, to){\n    for(var i=from; i<to; i++){\n        polygon.push(poly[i]);\n    }\n}\n\n/**\n * Make sure that the polygon vertices are ordered counter-clockwise.\n * @method makeCCW\n */\nfunction polygonMakeCCW(polygon){\n    var br = 0,\n        v = polygon;\n\n    // find bottom right point\n    for (var i = 1; i < polygon.length; ++i) {\n        if (v[i][1] < v[br][1] || (v[i][1] === v[br][1] && v[i][0] > v[br][0])) {\n            br = i;\n        }\n    }\n\n    // reverse poly if clockwise\n    if (!isLeft(polygonAt(polygon, br - 1), polygonAt(polygon, br), polygonAt(polygon, br + 1))) {\n        polygonReverse(polygon);\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * Reverse the vertices in the polygon\n * @method reverse\n */\nfunction polygonReverse(polygon){\n    var tmp = [];\n    var N = polygon.length;\n    for(var i=0; i!==N; i++){\n        tmp.push(polygon.pop());\n    }\n    for(var i=0; i!==N; i++){\n\t\tpolygon[i] = tmp[i];\n    }\n}\n\n/**\n * Check if a point in the polygon is a reflex point\n * @method isReflex\n * @param  {Number}  i\n * @return {Boolean}\n */\nfunction polygonIsReflex(polygon, i){\n    return isRight(polygonAt(polygon, i - 1), polygonAt(polygon, i), polygonAt(polygon, i + 1));\n}\n\nvar tmpLine1=[],\n    tmpLine2=[];\n\n/**\n * Check if two vertices in the polygon can see each other\n * @method canSee\n * @param  {Number} a Vertex index 1\n * @param  {Number} b Vertex index 2\n * @return {Boolean}\n */\nfunction polygonCanSee(polygon, a,b) {\n    var p, dist, l1=tmpLine1, l2=tmpLine2;\n\n    if (isLeftOn(polygonAt(polygon, a + 1), polygonAt(polygon, a), polygonAt(polygon, b)) && isRightOn(polygonAt(polygon, a - 1), polygonAt(polygon, a), polygonAt(polygon, b))) {\n        return false;\n    }\n    dist = sqdist(polygonAt(polygon, a), polygonAt(polygon, b));\n    for (var i = 0; i !== polygon.length; ++i) { // for each edge\n        if ((i + 1) % polygon.length === a || i === a){ // ignore incident edges\n            continue;\n        }\n        if (isLeftOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i + 1)) && isRightOn(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i))) { // if diag intersects an edge\n            l1[0] = polygonAt(polygon, a);\n            l1[1] = polygonAt(polygon, b);\n            l2[0] = polygonAt(polygon, i);\n            l2[1] = polygonAt(polygon, i + 1);\n            p = lineInt(l1,l2);\n            if (sqdist(polygonAt(polygon, a), p) < dist) { // if edge is blocking visibility to b\n                return false;\n            }\n        }\n    }\n\n    return true;\n}\n\n/**\n * Check if two vertices in the polygon can see each other\n * @method canSee2\n * @param  {Number} a Vertex index 1\n * @param  {Number} b Vertex index 2\n * @return {Boolean}\n */\nfunction polygonCanSee2(polygon, a,b) {\n    // for each edge\n    for (var i = 0; i !== polygon.length; ++i) {\n        // ignore incident edges\n        if (i === a || i === b || (i + 1) % polygon.length === a || (i + 1) % polygon.length === b){\n            continue;\n        }\n        if( lineSegmentsIntersect(polygonAt(polygon, a), polygonAt(polygon, b), polygonAt(polygon, i), polygonAt(polygon, i+1)) ){\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * Copy the polygon from vertex i to vertex j.\n * @method copy\n * @param  {Number} i\n * @param  {Number} j\n * @param  {Polygon} [targetPoly]   Optional target polygon to save in.\n * @return {Polygon}                The resulting copy.\n */\nfunction polygonCopy(polygon, i,j,targetPoly){\n    var p = targetPoly || [];\n    polygonClear(p);\n    if (i < j) {\n        // Insert all vertices from i to j\n        for(var k=i; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n    } else {\n\n        // Insert vertices 0 to j\n        for(var k=0; k<=j; k++){\n            p.push(polygon[k]);\n        }\n\n        // Insert vertices i to end\n        for(var k=i; k<polygon.length; k++){\n            p.push(polygon[k]);\n        }\n    }\n\n    return p;\n}\n\n/**\n * Decomposes the polygon into convex pieces. Returns a list of edges [[p1,p2],[p2,p3],...] that cuts the polygon.\n * Note that this algorithm has complexity O(N^4) and will be very slow for polygons with many vertices.\n * @method getCutEdges\n * @return {Array}\n */\nfunction polygonGetCutEdges(polygon) {\n    var min=[], tmp1=[], tmp2=[], tmpPoly = [];\n    var nDiags = Number.MAX_VALUE;\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(polygon, i)) {\n            for (var j = 0; j < polygon.length; ++j) {\n                if (polygonCanSee(polygon, i, j)) {\n                    tmp1 = polygonGetCutEdges(polygonCopy(polygon, i, j, tmpPoly));\n                    tmp2 = polygonGetCutEdges(polygonCopy(polygon, j, i, tmpPoly));\n\n                    for(var k=0; k<tmp2.length; k++){\n                        tmp1.push(tmp2[k]);\n                    }\n\n                    if (tmp1.length < nDiags) {\n                        min = tmp1;\n                        nDiags = tmp1.length;\n                        min.push([polygonAt(polygon, i), polygonAt(polygon, j)]);\n                    }\n                }\n            }\n        }\n    }\n\n    return min;\n}\n\n/**\n * Decomposes the polygon into one or more convex sub-Polygons.\n * @method decomp\n * @return {Array} An array or Polygon objects.\n */\nfunction polygonDecomp(polygon){\n    var edges = polygonGetCutEdges(polygon);\n    if(edges.length > 0){\n        return polygonSlice(polygon, edges);\n    } else {\n        return [polygon];\n    }\n}\n\n/**\n * Slices the polygon given one or more cut edges. If given one, this function will return two polygons (false on failure). If many, an array of polygons.\n * @method slice\n * @param {Array} cutEdges A list of edges, as returned by .getCutEdges()\n * @return {Array}\n */\nfunction polygonSlice(polygon, cutEdges){\n    if(cutEdges.length === 0){\n\t\treturn [polygon];\n    }\n    if(cutEdges instanceof Array && cutEdges.length && cutEdges[0] instanceof Array && cutEdges[0].length===2 && cutEdges[0][0] instanceof Array){\n\n        var polys = [polygon];\n\n        for(var i=0; i<cutEdges.length; i++){\n            var cutEdge = cutEdges[i];\n            // Cut all polys\n            for(var j=0; j<polys.length; j++){\n                var poly = polys[j];\n                var result = polygonSlice(poly, cutEdge);\n                if(result){\n                    // Found poly! Cut and quit\n                    polys.splice(j,1);\n                    polys.push(result[0],result[1]);\n                    break;\n                }\n            }\n        }\n\n        return polys;\n    } else {\n\n        // Was given one edge\n        var cutEdge = cutEdges;\n        var i = polygon.indexOf(cutEdge[0]);\n        var j = polygon.indexOf(cutEdge[1]);\n\n        if(i !== -1 && j !== -1){\n            return [polygonCopy(polygon, i,j),\n                    polygonCopy(polygon, j,i)];\n        } else {\n            return false;\n        }\n    }\n}\n\n/**\n * Checks that the line segments of this polygon do not intersect each other.\n * @method isSimple\n * @param  {Array} path An array of vertices e.g. [[0,0],[0,1],...]\n * @return {Boolean}\n * @todo Should it check all segments with all others?\n */\nfunction polygonIsSimple(polygon){\n    var path = polygon, i;\n    // Check\n    for(i=0; i<path.length-1; i++){\n        for(var j=0; j<i-1; j++){\n            if(lineSegmentsIntersect(path[i], path[i+1], path[j], path[j+1] )){\n                return false;\n            }\n        }\n    }\n\n    // Check the segment between the last and the first point to all others\n    for(i=1; i<path.length-2; i++){\n        if(lineSegmentsIntersect(path[0], path[path.length-1], path[i], path[i+1] )){\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction getIntersectionPoint(p1, p2, q1, q2, delta){\n\tdelta = delta || 0;\n\tvar a1 = p2[1] - p1[1];\n\tvar b1 = p1[0] - p2[0];\n\tvar c1 = (a1 * p1[0]) + (b1 * p1[1]);\n\tvar a2 = q2[1] - q1[1];\n\tvar b2 = q1[0] - q2[0];\n\tvar c2 = (a2 * q1[0]) + (b2 * q1[1]);\n\tvar det = (a1 * b2) - (a2 * b1);\n\n\tif(!scalar_eq(det,0,delta)){\n\t\treturn [((b2 * c1) - (b1 * c2)) / det, ((a1 * c2) - (a2 * c1)) / det];\n\t} else {\n\t\treturn [0,0];\n    }\n}\n\n/**\n * Quickly decompose the Polygon into convex sub-polygons.\n * @method quickDecomp\n * @param  {Array} result\n * @param  {Array} [reflexVertices]\n * @param  {Array} [steinerPoints]\n * @param  {Number} [delta]\n * @param  {Number} [maxlevel]\n * @param  {Number} [level]\n * @return {Array}\n */\nfunction polygonQuickDecomp(polygon, result,reflexVertices,steinerPoints,delta,maxlevel,level){\n    maxlevel = maxlevel || 100;\n    level = level || 0;\n    delta = delta || 25;\n    result = typeof(result)!==\"undefined\" ? result : [];\n    reflexVertices = reflexVertices || [];\n    steinerPoints = steinerPoints || [];\n\n    var upperInt=[0,0], lowerInt=[0,0], p=[0,0]; // Points\n    var upperDist=0, lowerDist=0, d=0, closestDist=0; // scalars\n    var upperIndex=0, lowerIndex=0, closestIndex=0; // Integers\n    var lowerPoly=[], upperPoly=[]; // polygons\n    var poly = polygon,\n        v = polygon;\n\n    if(v.length < 3){\n\t\treturn result;\n    }\n\n    level++;\n    if(level > maxlevel){\n        console.warn(\"quickDecomp: max level (\"+maxlevel+\") reached.\");\n        return result;\n    }\n\n    for (var i = 0; i < polygon.length; ++i) {\n        if (polygonIsReflex(poly, i)) {\n            reflexVertices.push(poly[i]);\n            upperDist = lowerDist = Number.MAX_VALUE;\n\n\n            for (var j = 0; j < polygon.length; ++j) {\n                if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) && isRightOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j - 1))) { // if line intersects with an edge\n                    p = getIntersectionPoint(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j - 1)); // find the point of intersection\n                    if (isRight(polygonAt(poly, i + 1), polygonAt(poly, i), p)) { // make sure it's inside the poly\n                        d = sqdist(poly[i], p);\n                        if (d < lowerDist) { // keep only the closest intersection\n                            lowerDist = d;\n                            lowerInt = p;\n                            lowerIndex = j;\n                        }\n                    }\n                }\n                if (isLeft(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j + 1)) && isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))) {\n                    p = getIntersectionPoint(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j), polygonAt(poly, j + 1));\n                    if (isLeft(polygonAt(poly, i - 1), polygonAt(poly, i), p)) {\n                        d = sqdist(poly[i], p);\n                        if (d < upperDist) {\n                            upperDist = d;\n                            upperInt = p;\n                            upperIndex = j;\n                        }\n                    }\n                }\n            }\n\n            // if there are no vertices to connect to, choose a point in the middle\n            if (lowerIndex === (upperIndex + 1) % polygon.length) {\n                //console.log(\"Case 1: Vertex(\"+i+\"), lowerIndex(\"+lowerIndex+\"), upperIndex(\"+upperIndex+\"), poly.size(\"+polygon.length+\")\");\n                p[0] = (lowerInt[0] + upperInt[0]) / 2;\n                p[1] = (lowerInt[1] + upperInt[1]) / 2;\n                steinerPoints.push(p);\n\n                if (i < upperIndex) {\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly, i, upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    if (lowerIndex !== 0){\n                        //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.end());\n                        polygonAppend(upperPoly, poly,lowerIndex,poly.length);\n                    }\n                    //upperPoly.insert(upperPoly.end(), poly.begin(), poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        //lowerPoly.insert(lowerPoly.end(), poly.begin() + i, poly.end());\n                        polygonAppend(lowerPoly, poly,i,poly.length);\n                    }\n                    //lowerPoly.insert(lowerPoly.end(), poly.begin(), poly.begin() + upperIndex + 1);\n                    polygonAppend(lowerPoly, poly,0,upperIndex+1);\n                    lowerPoly.push(p);\n                    upperPoly.push(p);\n                    //upperPoly.insert(upperPoly.end(), poly.begin() + lowerIndex, poly.begin() + i + 1);\n                    polygonAppend(upperPoly, poly,lowerIndex,i+1);\n                }\n            } else {\n                // connect to the closest point within the triangle\n                //console.log(\"Case 2: Vertex(\"+i+\"), closestIndex(\"+closestIndex+\"), poly.size(\"+polygon.length+\")\\n\");\n\n                if (lowerIndex > upperIndex) {\n                    upperIndex += polygon.length;\n                }\n                closestDist = Number.MAX_VALUE;\n\n                if(upperIndex < lowerIndex){\n                    return result;\n                }\n\n                for (var j = lowerIndex; j <= upperIndex; ++j) {\n                    if (\n                        isLeftOn(polygonAt(poly, i - 1), polygonAt(poly, i), polygonAt(poly, j)) &&\n                        isRightOn(polygonAt(poly, i + 1), polygonAt(poly, i), polygonAt(poly, j))\n                    ) {\n                        d = sqdist(polygonAt(poly, i), polygonAt(poly, j));\n                        if (d < closestDist && polygonCanSee2(poly, i, j)) {\n                            closestDist = d;\n                            closestIndex = j % polygon.length;\n                        }\n                    }\n                }\n\n                if (i < closestIndex) {\n                    polygonAppend(lowerPoly, poly,i,closestIndex+1);\n                    if (closestIndex !== 0){\n                        polygonAppend(upperPoly, poly,closestIndex,v.length);\n                    }\n                    polygonAppend(upperPoly, poly,0,i+1);\n                } else {\n                    if (i !== 0){\n                        polygonAppend(lowerPoly, poly,i,v.length);\n                    }\n                    polygonAppend(lowerPoly, poly,0,closestIndex+1);\n                    polygonAppend(upperPoly, poly,closestIndex,i+1);\n                }\n            }\n\n            // solve smallest poly first\n            if (lowerPoly.length < upperPoly.length) {\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            } else {\n                polygonQuickDecomp(upperPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n                polygonQuickDecomp(lowerPoly,result,reflexVertices,steinerPoints,delta,maxlevel,level);\n            }\n\n            return result;\n        }\n    }\n    result.push(polygon);\n\n    return result;\n}\n\n/**\n * Remove collinear points in the polygon.\n * @method removeCollinearPoints\n * @param  {Number} [precision] The threshold angle to use when determining whether two edges are collinear. Use zero for finest precision.\n * @return {Number}           The number of points removed\n */\nfunction polygonRemoveCollinearPoints(polygon, precision){\n    var num = 0;\n    for(var i=polygon.length-1; polygon.length>3 && i>=0; --i){\n        if(collinear(polygonAt(polygon, i-1),polygonAt(polygon, i),polygonAt(polygon, i+1),precision)){\n            // Remove the middle point\n            polygon.splice(i%polygon.length,1);\n            num++;\n        }\n    }\n    return num;\n}\n\n/**\n * Remove duplicate points in the polygon.\n * @method removeDuplicatePoints\n * @param  {Number} [precision] The threshold to use when determining whether two points are the same. Use zero for best precision.\n */\nfunction polygonRemoveDuplicatePoints(polygon, precision){\n    for(var i=polygon.length-1; i>=1; --i){\n        var pi = polygon[i];\n        for(var j=i-1; j>=0; --j){\n            if(points_eq(pi, polygon[j], precision)){\n                polygon.splice(i,1);\n                continue;\n            }\n        }\n    }\n}\n\n/**\n * Check if two scalars are equal\n * @static\n * @method eq\n * @param  {Number} a\n * @param  {Number} b\n * @param  {Number} [precision]\n * @return {Boolean}\n */\nfunction scalar_eq(a,b,precision){\n    precision = precision || 0;\n    return Math.abs(a-b) <= precision;\n}\n\n/**\n * Check if two points are equal\n * @static\n * @method points_eq\n * @param  {Array} a\n * @param  {Array} b\n * @param  {Number} [precision]\n * @return {Boolean}\n */\nfunction points_eq(a,b,precision){\n    return scalar_eq(a[0],b[0],precision) && scalar_eq(a[1],b[1],precision);\n}\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/poly-decomp/src/index.js?");

/***/ }),

/***/ "./node_modules/rbush/rbush.min.js":
/*!*****************************************!*\
  !*** ./node_modules/rbush/rbush.min.js ***!
  \*****************************************/
/***/ (function(module) {

eval("!function(t,i){ true?module.exports=i():0}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/rbush/rbush.min.js?");

/***/ }),

/***/ "./node_modules/sat/SAT.js":
/*!*********************************!*\
  !*** ./node_modules/sat/SAT.js ***!
  \*********************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;// Version 0.9.0 - Copyright 2012 - 2021 -  Jim Riecken <jimr@jimr.ca>\n//\n// Released under the MIT License - https://github.com/jriecken/sat-js\n//\n// A simple library for determining intersections of circles and\n// polygons using the Separating Axis Theorem.\n/** @preserve SAT.js - Version 0.9.0 - Copyright 2012 - 2021 - Jim Riecken <jimr@jimr.ca> - released under the MIT License. https://github.com/jriecken/sat-js */\n\n/*global define: false, module: false*/\n/*jshint shadow:true, sub:true, forin:true, noarg:true, noempty:true,\n  eqeqeq:true, bitwise:true, strict:true, undef:true,\n  curly:true, browser:true */\n\n// Create a UMD wrapper for SAT. Works in:\n//\n//  - Plain browser via global SAT variable\n//  - AMD loader (like require.js)\n//  - Node.js\n//\n// The quoted properties all over the place are used so that the Closure Compiler\n// does not mangle the exposed API in advanced mode.\n/**\n * @param {*} root - The global scope\n * @param {Function} factory - Factory that creates SAT module\n */\n(function (root, factory) {\n  \"use strict\";\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n}(this, function () {\n  \"use strict\";\n\n  var SAT = {};\n\n  //\n  // ## Vector\n  //\n  // Represents a vector in two dimensions with `x` and `y` properties.\n\n\n  // Create a new Vector, optionally passing in the `x` and `y` coordinates. If\n  // a coordinate is not specified, it will be set to `0`\n  /**\n   * @param {?number=} x The x position.\n   * @param {?number=} y The y position.\n   * @constructor\n   */\n  function Vector(x, y) {\n    this['x'] = x || 0;\n    this['y'] = y || 0;\n  }\n  SAT['Vector'] = Vector;\n  // Alias `Vector` as `V`\n  SAT['V'] = Vector;\n\n\n  // Copy the values of another Vector into this one.\n  /**\n   * @param {Vector} other The other Vector.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['copy'] = Vector.prototype.copy = function (other) {\n    this['x'] = other['x'];\n    this['y'] = other['y'];\n    return this;\n  };\n\n  // Create a new vector with the same coordinates as this on.\n  /**\n   * @return {Vector} The new cloned vector\n   */\n  Vector.prototype['clone'] = Vector.prototype.clone = function () {\n    return new Vector(this['x'], this['y']);\n  };\n\n  // Change this vector to be perpendicular to what it was before. (Effectively\n  // roatates it 90 degrees in a clockwise direction)\n  /**\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['perp'] = Vector.prototype.perp = function () {\n    var x = this['x'];\n    this['x'] = this['y'];\n    this['y'] = -x;\n    return this;\n  };\n\n  // Rotate this vector (counter-clockwise) by the specified angle (in radians).\n  /**\n   * @param {number} angle The angle to rotate (in radians)\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['rotate'] = Vector.prototype.rotate = function (angle) {\n    var x = this['x'];\n    var y = this['y'];\n    this['x'] = x * Math.cos(angle) - y * Math.sin(angle);\n    this['y'] = x * Math.sin(angle) + y * Math.cos(angle);\n    return this;\n  };\n\n  // Reverse this vector.\n  /**\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['reverse'] = Vector.prototype.reverse = function () {\n    this['x'] = -this['x'];\n    this['y'] = -this['y'];\n    return this;\n  };\n\n\n  // Normalize this vector.  (make it have length of `1`)\n  /**\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['normalize'] = Vector.prototype.normalize = function () {\n    var d = this.len();\n    if (d > 0) {\n      this['x'] = this['x'] / d;\n      this['y'] = this['y'] / d;\n    }\n    return this;\n  };\n\n  // Add another vector to this one.\n  /**\n   * @param {Vector} other The other Vector.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['add'] = Vector.prototype.add = function (other) {\n    this['x'] += other['x'];\n    this['y'] += other['y'];\n    return this;\n  };\n\n  // Subtract another vector from this one.\n  /**\n   * @param {Vector} other The other Vector.\n   * @return {Vector} This for chaiing.\n   */\n  Vector.prototype['sub'] = Vector.prototype.sub = function (other) {\n    this['x'] -= other['x'];\n    this['y'] -= other['y'];\n    return this;\n  };\n\n  // Scale this vector. An independent scaling factor can be provided\n  // for each axis, or a single scaling factor that will scale both `x` and `y`.\n  /**\n   * @param {number} x The scaling factor in the x direction.\n   * @param {?number=} y The scaling factor in the y direction.  If this\n   *   is not specified, the x scaling factor will be used.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['scale'] = Vector.prototype.scale = function (x, y) {\n    this['x'] *= x;\n    this['y'] *= typeof y != 'undefined' ? y : x;\n    return this;\n  };\n\n  // Project this vector on to another vector.\n  /**\n   * @param {Vector} other The vector to project onto.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['project'] = Vector.prototype.project = function (other) {\n    var amt = this.dot(other) / other.len2();\n    this['x'] = amt * other['x'];\n    this['y'] = amt * other['y'];\n    return this;\n  };\n\n  // Project this vector onto a vector of unit length. This is slightly more efficient\n  // than `project` when dealing with unit vectors.\n  /**\n   * @param {Vector} other The unit vector to project onto.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['projectN'] = Vector.prototype.projectN = function (other) {\n    var amt = this.dot(other);\n    this['x'] = amt * other['x'];\n    this['y'] = amt * other['y'];\n    return this;\n  };\n\n  // Reflect this vector on an arbitrary axis.\n  /**\n   * @param {Vector} axis The vector representing the axis.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['reflect'] = Vector.prototype.reflect = function (axis) {\n    var x = this['x'];\n    var y = this['y'];\n    this.project(axis).scale(2);\n    this['x'] -= x;\n    this['y'] -= y;\n    return this;\n  };\n\n  // Reflect this vector on an arbitrary axis (represented by a unit vector). This is\n  // slightly more efficient than `reflect` when dealing with an axis that is a unit vector.\n  /**\n   * @param {Vector} axis The unit vector representing the axis.\n   * @return {Vector} This for chaining.\n   */\n  Vector.prototype['reflectN'] = Vector.prototype.reflectN = function (axis) {\n    var x = this['x'];\n    var y = this['y'];\n    this.projectN(axis).scale(2);\n    this['x'] -= x;\n    this['y'] -= y;\n    return this;\n  };\n\n  // Get the dot product of this vector and another.\n  /**\n   * @param {Vector}  other The vector to dot this one against.\n   * @return {number} The dot product.\n   */\n  Vector.prototype['dot'] = Vector.prototype.dot = function (other) {\n    return this['x'] * other['x'] + this['y'] * other['y'];\n  };\n\n  // Get the squared length of this vector.\n  /**\n   * @return {number} The length^2 of this vector.\n   */\n  Vector.prototype['len2'] = Vector.prototype.len2 = function () {\n    return this.dot(this);\n  };\n\n  // Get the length of this vector.\n  /**\n   * @return {number} The length of this vector.\n   */\n  Vector.prototype['len'] = Vector.prototype.len = function () {\n    return Math.sqrt(this.len2());\n  };\n\n  // ## Circle\n  //\n  // Represents a circle with a position and a radius.\n\n  // Create a new circle, optionally passing in a position and/or radius. If no position\n  // is given, the circle will be at `(0,0)`. If no radius is provided, the circle will\n  // have a radius of `0`.\n  /**\n   * @param {Vector=} pos A vector representing the position of the center of the circle\n   * @param {?number=} r The radius of the circle\n   * @constructor\n   */\n  function Circle(pos, r) {\n    this['pos'] = pos || new Vector();\n    this['r'] = r || 0;\n    this['offset'] = new Vector();\n  }\n  SAT['Circle'] = Circle;\n\n  // Compute the axis-aligned bounding box (AABB) of this Circle.\n  //\n  // Note: Returns a _new_ `Box` each time you call this.\n  /**\n   * @return {Polygon} The AABB\n   */\n  Circle.prototype['getAABBAsBox'] = Circle.prototype.getAABBAsBox = function () {\n    var r = this['r'];\n    var corner = this['pos'].clone().add(this['offset']).sub(new Vector(r, r));\n    return new Box(corner, r * 2, r * 2);\n  };\n\n  // Compute the axis-aligned bounding box (AABB) of this Circle.\n  //\n  // Note: Returns a _new_ `Polygon` each time you call this.\n  /**\n   * @return {Polygon} The AABB\n   */\n  Circle.prototype['getAABB'] = Circle.prototype.getAABB = function () {\n    return this.getAABBAsBox().toPolygon();\n  };\n\n  // Set the current offset to apply to the radius.\n  /**\n   * @param {Vector} offset The new offset vector.\n   * @return {Circle} This for chaining.\n   */\n  Circle.prototype['setOffset'] = Circle.prototype.setOffset = function (offset) {\n    this['offset'] = offset;\n    return this;\n  };\n\n  // ## Polygon\n  //\n  // Represents a *convex* polygon with any number of points (specified in counter-clockwise order)\n  //\n  // Note: Do _not_ manually change the `points`, `angle`, or `offset` properties. Use the\n  // provided setters. Otherwise the calculated properties will not be updated correctly.\n  //\n  // `pos` can be changed directly.\n\n  // Create a new polygon, passing in a position vector, and an array of points (represented\n  // by vectors relative to the position vector). If no position is passed in, the position\n  // of the polygon will be `(0,0)`.\n  /**\n   * @param {Vector=} pos A vector representing the origin of the polygon. (all other\n   *   points are relative to this one)\n   * @param {Array<Vector>=} points An array of vectors representing the points in the polygon,\n   *   in counter-clockwise order.\n   * @constructor\n   */\n  function Polygon(pos, points) {\n    this['pos'] = pos || new Vector();\n    this['angle'] = 0;\n    this['offset'] = new Vector();\n    this.setPoints(points || []);\n  }\n  SAT['Polygon'] = Polygon;\n\n  // Set the points of the polygon. Any consecutive duplicate points will be combined.\n  //\n  // Note: The points are counter-clockwise *with respect to the coordinate system*.\n  // If you directly draw the points on a screen that has the origin at the top-left corner\n  // it will _appear_ visually that the points are being specified clockwise. This is just\n  // because of the inversion of the Y-axis when being displayed.\n  /**\n   * @param {Array<Vector>=} points An array of vectors representing the points in the polygon,\n   *   in counter-clockwise order.\n   * @return {Polygon} This for chaining.\n   */\n  Polygon.prototype['setPoints'] = Polygon.prototype.setPoints = function (points) {\n    // Only re-allocate if this is a new polygon or the number of points has changed.\n    var lengthChanged = !this['points'] || this['points'].length !== points.length;\n    if (lengthChanged) {\n      var i;\n      var calcPoints = this['calcPoints'] = [];\n      var edges = this['edges'] = [];\n      var normals = this['normals'] = [];\n      // Allocate the vector arrays for the calculated properties\n      for (i = 0; i < points.length; i++) {\n        // Remove consecutive duplicate points\n        var p1 = points[i];\n        var p2 = i < points.length - 1 ? points[i + 1] : points[0];\n        if (p1 !== p2 && p1.x === p2.x && p1.y === p2.y) {\n          points.splice(i, 1);\n          i -= 1;\n          continue;\n        }\n        calcPoints.push(new Vector());\n        edges.push(new Vector());\n        normals.push(new Vector());\n      }\n    }\n    this['points'] = points;\n    this._recalc();\n    return this;\n  };\n\n  // Set the current rotation angle of the polygon.\n  /**\n   * @param {number} angle The current rotation angle (in radians).\n   * @return {Polygon} This for chaining.\n   */\n  Polygon.prototype['setAngle'] = Polygon.prototype.setAngle = function (angle) {\n    this['angle'] = angle;\n    this._recalc();\n    return this;\n  };\n\n  // Set the current offset to apply to the `points` before applying the `angle` rotation.\n  /**\n   * @param {Vector} offset The new offset vector.\n   * @return {Polygon} This for chaining.\n   */\n  Polygon.prototype['setOffset'] = Polygon.prototype.setOffset = function (offset) {\n    this['offset'] = offset;\n    this._recalc();\n    return this;\n  };\n\n  // Rotates this polygon counter-clockwise around the origin of *its local coordinate system* (i.e. `pos`).\n  //\n  // Note: This changes the **original** points (so any `angle` will be applied on top of this rotation).\n  /**\n   * @param {number} angle The angle to rotate (in radians)\n   * @return {Polygon} This for chaining.\n   */\n  Polygon.prototype['rotate'] = Polygon.prototype.rotate = function (angle) {\n    var points = this['points'];\n    var len = points.length;\n    for (var i = 0; i < len; i++) {\n      points[i].rotate(angle);\n    }\n    this._recalc();\n    return this;\n  };\n\n  // Translates the points of this polygon by a specified amount relative to the origin of *its own coordinate\n  // system* (i.e. `pos`).\n  //\n  // This is most useful to change the \"center point\" of a polygon. If you just want to move the whole polygon, change\n  // the coordinates of `pos`.\n  //\n  // Note: This changes the **original** points (so any `offset` will be applied on top of this translation)\n  /**\n   * @param {number} x The horizontal amount to translate.\n   * @param {number} y The vertical amount to translate.\n   * @return {Polygon} This for chaining.\n   */\n  Polygon.prototype['translate'] = Polygon.prototype.translate = function (x, y) {\n    var points = this['points'];\n    var len = points.length;\n    for (var i = 0; i < len; i++) {\n      points[i]['x'] += x;\n      points[i]['y'] += y;\n    }\n    this._recalc();\n    return this;\n  };\n\n\n  // Computes the calculated collision polygon. Applies the `angle` and `offset` to the original points then recalculates the\n  // edges and normals of the collision polygon.\n  /**\n   * @return {Polygon} This for chaining.\n   */\n  Polygon.prototype._recalc = function () {\n    // Calculated points - this is what is used for underlying collisions and takes into account\n    // the angle/offset set on the polygon.\n    var calcPoints = this['calcPoints'];\n    // The edges here are the direction of the `n`th edge of the polygon, relative to\n    // the `n`th point. If you want to draw a given edge from the edge value, you must\n    // first translate to the position of the starting point.\n    var edges = this['edges'];\n    // The normals here are the direction of the normal for the `n`th edge of the polygon, relative\n    // to the position of the `n`th point. If you want to draw an edge normal, you must first\n    // translate to the position of the starting point.\n    var normals = this['normals'];\n    // Copy the original points array and apply the offset/angle\n    var points = this['points'];\n    var offset = this['offset'];\n    var angle = this['angle'];\n    var len = points.length;\n    var i;\n    for (i = 0; i < len; i++) {\n      var calcPoint = calcPoints[i].copy(points[i]);\n      calcPoint['x'] += offset['x'];\n      calcPoint['y'] += offset['y'];\n      if (angle !== 0) {\n        calcPoint.rotate(angle);\n      }\n    }\n    // Calculate the edges/normals\n    for (i = 0; i < len; i++) {\n      var p1 = calcPoints[i];\n      var p2 = i < len - 1 ? calcPoints[i + 1] : calcPoints[0];\n      var e = edges[i].copy(p2).sub(p1);\n      normals[i].copy(e).perp().normalize();\n    }\n    return this;\n  };\n\n\n  // Compute the axis-aligned bounding box. Any current state\n  // (translations/rotations) will be applied before constructing the AABB.\n  //\n  // Note: Returns a _new_ `Box` each time you call this.\n  /**\n   * @return {Polygon} The AABB\n   */\n  Polygon.prototype['getAABBAsBox'] = Polygon.prototype.getAABBAsBox = function () {\n    var points = this['calcPoints'];\n    var len = points.length;\n    var xMin = points[0]['x'];\n    var yMin = points[0]['y'];\n    var xMax = points[0]['x'];\n    var yMax = points[0]['y'];\n    for (var i = 1; i < len; i++) {\n      var point = points[i];\n      if (point['x'] < xMin) {\n        xMin = point['x'];\n      }\n      else if (point['x'] > xMax) {\n        xMax = point['x'];\n      }\n      if (point['y'] < yMin) {\n        yMin = point['y'];\n      }\n      else if (point['y'] > yMax) {\n        yMax = point['y'];\n      }\n    }\n    return new Box(this['pos'].clone().add(new Vector(xMin, yMin)), xMax - xMin, yMax - yMin);\n  };\n\n\n  // Compute the axis-aligned bounding box. Any current state\n  // (translations/rotations) will be applied before constructing the AABB.\n  //\n  // Note: Returns a _new_ `Polygon` each time you call this.\n  /**\n   * @return {Polygon} The AABB\n   */\n  Polygon.prototype['getAABB'] = Polygon.prototype.getAABB = function () {\n    return this.getAABBAsBox().toPolygon();\n  };\n\n  // Compute the centroid (geometric center) of the polygon. Any current state\n  // (translations/rotations) will be applied before computing the centroid.\n  //\n  // See https://en.wikipedia.org/wiki/Centroid#Centroid_of_a_polygon\n  //\n  // Note: Returns a _new_ `Vector` each time you call this.\n  /**\n   * @return {Vector} A Vector that contains the coordinates of the Centroid.\n   */\n  Polygon.prototype['getCentroid'] = Polygon.prototype.getCentroid = function () {\n    var points = this['calcPoints'];\n    var len = points.length;\n    var cx = 0;\n    var cy = 0;\n    var ar = 0;\n    for (var i = 0; i < len; i++) {\n      var p1 = points[i];\n      var p2 = i === len - 1 ? points[0] : points[i + 1]; // Loop around if last point\n      var a = p1['x'] * p2['y'] - p2['x'] * p1['y'];\n      cx += (p1['x'] + p2['x']) * a;\n      cy += (p1['y'] + p2['y']) * a;\n      ar += a;\n    }\n    ar = ar * 3; // we want 1 / 6 the area and we currently have 2*area\n    cx = cx / ar;\n    cy = cy / ar;\n    return new Vector(cx, cy);\n  };\n\n\n  // ## Box\n  //\n  // Represents an axis-aligned box, with a width and height.\n\n\n  // Create a new box, with the specified position, width, and height. If no position\n  // is given, the position will be `(0,0)`. If no width or height are given, they will\n  // be set to `0`.\n  /**\n   * @param {Vector=} pos A vector representing the bottom-left of the box (i.e. the smallest x and smallest y value).\n   * @param {?number=} w The width of the box.\n   * @param {?number=} h The height of the box.\n   * @constructor\n   */\n  function Box(pos, w, h) {\n    this['pos'] = pos || new Vector();\n    this['w'] = w || 0;\n    this['h'] = h || 0;\n  }\n  SAT['Box'] = Box;\n\n  // Returns a polygon whose edges are the same as this box.\n  /**\n   * @return {Polygon} A new Polygon that represents this box.\n   */\n  Box.prototype['toPolygon'] = Box.prototype.toPolygon = function () {\n    var pos = this['pos'];\n    var w = this['w'];\n    var h = this['h'];\n    return new Polygon(new Vector(pos['x'], pos['y']), [\n      new Vector(), new Vector(w, 0),\n      new Vector(w, h), new Vector(0, h)\n    ]);\n  };\n\n  // ## Response\n  //\n  // An object representing the result of an intersection. Contains:\n  //  - The two objects participating in the intersection\n  //  - The vector representing the minimum change necessary to extract the first object\n  //    from the second one (as well as a unit vector in that direction and the magnitude\n  //    of the overlap)\n  //  - Whether the first object is entirely inside the second, and vice versa.\n  /**\n   * @constructor\n   */\n  function Response() {\n    this['a'] = null;\n    this['b'] = null;\n    this['overlapN'] = new Vector();\n    this['overlapV'] = new Vector();\n    this.clear();\n  }\n  SAT['Response'] = Response;\n\n  // Set some values of the response back to their defaults.  Call this between tests if\n  // you are going to reuse a single Response object for multiple intersection tests (recommented\n  // as it will avoid allcating extra memory)\n  /**\n   * @return {Response} This for chaining\n   */\n  Response.prototype['clear'] = Response.prototype.clear = function () {\n    this['aInB'] = true;\n    this['bInA'] = true;\n    this['overlap'] = Number.MAX_VALUE;\n    return this;\n  };\n\n  // ## Object Pools\n\n  // A pool of `Vector` objects that are used in calculations to avoid\n  // allocating memory.\n  /**\n   * @type {Array<Vector>}\n   */\n  var T_VECTORS = [];\n  for (var i = 0; i < 10; i++) { T_VECTORS.push(new Vector()); }\n\n  // A pool of arrays of numbers used in calculations to avoid allocating\n  // memory.\n  /**\n   * @type {Array<Array<number>>}\n   */\n  var T_ARRAYS = [];\n  for (var i = 0; i < 5; i++) { T_ARRAYS.push([]); }\n\n  // Temporary response used for polygon hit detection.\n  /**\n   * @type {Response}\n   */\n  var T_RESPONSE = new Response();\n\n  // Tiny \"point\" polygon used for polygon hit detection.\n  /**\n   * @type {Polygon}\n   */\n  var TEST_POINT = new Box(new Vector(), 0.000001, 0.000001).toPolygon();\n\n  // ## Helper Functions\n\n  // Flattens the specified array of points onto a unit vector axis,\n  // resulting in a one dimensional range of the minimum and\n  // maximum value on that axis.\n  /**\n   * @param {Array<Vector>} points The points to flatten.\n   * @param {Vector} normal The unit vector axis to flatten on.\n   * @param {Array<number>} result An array.  After calling this function,\n   *   result[0] will be the minimum value,\n   *   result[1] will be the maximum value.\n   */\n  function flattenPointsOn(points, normal, result) {\n    var min = Number.MAX_VALUE;\n    var max = -Number.MAX_VALUE;\n    var len = points.length;\n    for (var i = 0; i < len; i++) {\n      // The magnitude of the projection of the point onto the normal\n      var dot = points[i].dot(normal);\n      if (dot < min) { min = dot; }\n      if (dot > max) { max = dot; }\n    }\n    result[0] = min; result[1] = max;\n  }\n\n  // Check whether two convex polygons are separated by the specified\n  // axis (must be a unit vector).\n  /**\n   * @param {Vector} aPos The position of the first polygon.\n   * @param {Vector} bPos The position of the second polygon.\n   * @param {Array<Vector>} aPoints The points in the first polygon.\n   * @param {Array<Vector>} bPoints The points in the second polygon.\n   * @param {Vector} axis The axis (unit sized) to test against.  The points of both polygons\n   *   will be projected onto this axis.\n   * @param {Response=} response A Response object (optional) which will be populated\n   *   if the axis is not a separating axis.\n   * @return {boolean} true if it is a separating axis, false otherwise.  If false,\n   *   and a response is passed in, information about how much overlap and\n   *   the direction of the overlap will be populated.\n   */\n  function isSeparatingAxis(aPos, bPos, aPoints, bPoints, axis, response) {\n    var rangeA = T_ARRAYS.pop();\n    var rangeB = T_ARRAYS.pop();\n    // The magnitude of the offset between the two polygons\n    var offsetV = T_VECTORS.pop().copy(bPos).sub(aPos);\n    var projectedOffset = offsetV.dot(axis);\n    // Project the polygons onto the axis.\n    flattenPointsOn(aPoints, axis, rangeA);\n    flattenPointsOn(bPoints, axis, rangeB);\n    // Move B's range to its position relative to A.\n    rangeB[0] += projectedOffset;\n    rangeB[1] += projectedOffset;\n    // Check if there is a gap. If there is, this is a separating axis and we can stop\n    if (rangeA[0] > rangeB[1] || rangeB[0] > rangeA[1]) {\n      T_VECTORS.push(offsetV);\n      T_ARRAYS.push(rangeA);\n      T_ARRAYS.push(rangeB);\n      return true;\n    }\n    // This is not a separating axis. If we're calculating a response, calculate the overlap.\n    if (response) {\n      var overlap = 0;\n      // A starts further left than B\n      if (rangeA[0] < rangeB[0]) {\n        response['aInB'] = false;\n        // A ends before B does. We have to pull A out of B\n        if (rangeA[1] < rangeB[1]) {\n          overlap = rangeA[1] - rangeB[0];\n          response['bInA'] = false;\n          // B is fully inside A.  Pick the shortest way out.\n        } else {\n          var option1 = rangeA[1] - rangeB[0];\n          var option2 = rangeB[1] - rangeA[0];\n          overlap = option1 < option2 ? option1 : -option2;\n        }\n        // B starts further left than A\n      } else {\n        response['bInA'] = false;\n        // B ends before A ends. We have to push A out of B\n        if (rangeA[1] > rangeB[1]) {\n          overlap = rangeA[0] - rangeB[1];\n          response['aInB'] = false;\n          // A is fully inside B.  Pick the shortest way out.\n        } else {\n          var option1 = rangeA[1] - rangeB[0];\n          var option2 = rangeB[1] - rangeA[0];\n          overlap = option1 < option2 ? option1 : -option2;\n        }\n      }\n      // If this is the smallest amount of overlap we've seen so far, set it as the minimum overlap.\n      var absOverlap = Math.abs(overlap);\n      if (absOverlap < response['overlap']) {\n        response['overlap'] = absOverlap;\n        response['overlapN'].copy(axis);\n        if (overlap < 0) {\n          response['overlapN'].reverse();\n        }\n      }\n    }\n    T_VECTORS.push(offsetV);\n    T_ARRAYS.push(rangeA);\n    T_ARRAYS.push(rangeB);\n    return false;\n  }\n  SAT['isSeparatingAxis'] = isSeparatingAxis;\n\n  // Calculates which Voronoi region a point is on a line segment.\n  // It is assumed that both the line and the point are relative to `(0,0)`\n  //\n  //            |       (0)      |\n  //     (-1)  [S]--------------[E]  (1)\n  //            |       (0)      |\n  /**\n   * @param {Vector} line The line segment.\n   * @param {Vector} point The point.\n   * @return  {number} LEFT_VORONOI_REGION (-1) if it is the left region,\n   *          MIDDLE_VORONOI_REGION (0) if it is the middle region,\n   *          RIGHT_VORONOI_REGION (1) if it is the right region.\n   */\n  function voronoiRegion(line, point) {\n    var len2 = line.len2();\n    var dp = point.dot(line);\n    // If the point is beyond the start of the line, it is in the\n    // left voronoi region.\n    if (dp < 0) { return LEFT_VORONOI_REGION; }\n    // If the point is beyond the end of the line, it is in the\n    // right voronoi region.\n    else if (dp > len2) { return RIGHT_VORONOI_REGION; }\n    // Otherwise, it's in the middle one.\n    else { return MIDDLE_VORONOI_REGION; }\n  }\n  // Constants for Voronoi regions\n  /**\n   * @const\n   */\n  var LEFT_VORONOI_REGION = -1;\n  /**\n   * @const\n   */\n  var MIDDLE_VORONOI_REGION = 0;\n  /**\n   * @const\n   */\n  var RIGHT_VORONOI_REGION = 1;\n\n  // ## Collision Tests\n\n  // Check if a point is inside a circle.\n  /**\n   * @param {Vector} p The point to test.\n   * @param {Circle} c The circle to test.\n   * @return {boolean} true if the point is inside the circle, false if it is not.\n   */\n  function pointInCircle(p, c) {\n    var differenceV = T_VECTORS.pop().copy(p).sub(c['pos']).sub(c['offset']);\n    var radiusSq = c['r'] * c['r'];\n    var distanceSq = differenceV.len2();\n    T_VECTORS.push(differenceV);\n    // If the distance between is smaller than the radius then the point is inside the circle.\n    return distanceSq <= radiusSq;\n  }\n  SAT['pointInCircle'] = pointInCircle;\n\n  // Check if a point is inside a convex polygon.\n  /**\n   * @param {Vector} p The point to test.\n   * @param {Polygon} poly The polygon to test.\n   * @return {boolean} true if the point is inside the polygon, false if it is not.\n   */\n  function pointInPolygon(p, poly) {\n    TEST_POINT['pos'].copy(p);\n    T_RESPONSE.clear();\n    var result = testPolygonPolygon(TEST_POINT, poly, T_RESPONSE);\n    if (result) {\n      result = T_RESPONSE['aInB'];\n    }\n    return result;\n  }\n  SAT['pointInPolygon'] = pointInPolygon;\n\n  // Check if two circles collide.\n  /**\n   * @param {Circle} a The first circle.\n   * @param {Circle} b The second circle.\n   * @param {Response=} response Response object (optional) that will be populated if\n   *   the circles intersect.\n   * @return {boolean} true if the circles intersect, false if they don't.\n   */\n  function testCircleCircle(a, b, response) {\n    // Check if the distance between the centers of the two\n    // circles is greater than their combined radius.\n    var differenceV = T_VECTORS.pop().copy(b['pos']).add(b['offset']).sub(a['pos']).sub(a['offset']);\n    var totalRadius = a['r'] + b['r'];\n    var totalRadiusSq = totalRadius * totalRadius;\n    var distanceSq = differenceV.len2();\n    // If the distance is bigger than the combined radius, they don't intersect.\n    if (distanceSq > totalRadiusSq) {\n      T_VECTORS.push(differenceV);\n      return false;\n    }\n    // They intersect.  If we're calculating a response, calculate the overlap.\n    if (response) {\n      var dist = Math.sqrt(distanceSq);\n      response['a'] = a;\n      response['b'] = b;\n      response['overlap'] = totalRadius - dist;\n      response['overlapN'].copy(differenceV.normalize());\n      response['overlapV'].copy(differenceV).scale(response['overlap']);\n      response['aInB'] = a['r'] <= b['r'] && dist <= b['r'] - a['r'];\n      response['bInA'] = b['r'] <= a['r'] && dist <= a['r'] - b['r'];\n    }\n    T_VECTORS.push(differenceV);\n    return true;\n  }\n  SAT['testCircleCircle'] = testCircleCircle;\n\n  // Check if a polygon and a circle collide.\n  /**\n   * @param {Polygon} polygon The polygon.\n   * @param {Circle} circle The circle.\n   * @param {Response=} response Response object (optional) that will be populated if\n   *   they interset.\n   * @return {boolean} true if they intersect, false if they don't.\n   */\n  function testPolygonCircle(polygon, circle, response) {\n    // Get the position of the circle relative to the polygon.\n    var circlePos = T_VECTORS.pop().copy(circle['pos']).add(circle['offset']).sub(polygon['pos']);\n    var radius = circle['r'];\n    var radius2 = radius * radius;\n    var points = polygon['calcPoints'];\n    var len = points.length;\n    var edge = T_VECTORS.pop();\n    var point = T_VECTORS.pop();\n\n    // For each edge in the polygon:\n    for (var i = 0; i < len; i++) {\n      var next = i === len - 1 ? 0 : i + 1;\n      var prev = i === 0 ? len - 1 : i - 1;\n      var overlap = 0;\n      var overlapN = null;\n\n      // Get the edge.\n      edge.copy(polygon['edges'][i]);\n      // Calculate the center of the circle relative to the starting point of the edge.\n      point.copy(circlePos).sub(points[i]);\n\n      // If the distance between the center of the circle and the point\n      // is bigger than the radius, the polygon is definitely not fully in\n      // the circle.\n      if (response && point.len2() > radius2) {\n        response['aInB'] = false;\n      }\n\n      // Calculate which Voronoi region the center of the circle is in.\n      var region = voronoiRegion(edge, point);\n      // If it's the left region:\n      if (region === LEFT_VORONOI_REGION) {\n        // We need to make sure we're in the RIGHT_VORONOI_REGION of the previous edge.\n        edge.copy(polygon['edges'][prev]);\n        // Calculate the center of the circle relative the starting point of the previous edge\n        var point2 = T_VECTORS.pop().copy(circlePos).sub(points[prev]);\n        region = voronoiRegion(edge, point2);\n        if (region === RIGHT_VORONOI_REGION) {\n          // It's in the region we want.  Check if the circle intersects the point.\n          var dist = point.len();\n          if (dist > radius) {\n            // No intersection\n            T_VECTORS.push(circlePos);\n            T_VECTORS.push(edge);\n            T_VECTORS.push(point);\n            T_VECTORS.push(point2);\n            return false;\n          } else if (response) {\n            // It intersects, calculate the overlap.\n            response['bInA'] = false;\n            overlapN = point.normalize();\n            overlap = radius - dist;\n          }\n        }\n        T_VECTORS.push(point2);\n        // If it's the right region:\n      } else if (region === RIGHT_VORONOI_REGION) {\n        // We need to make sure we're in the left region on the next edge\n        edge.copy(polygon['edges'][next]);\n        // Calculate the center of the circle relative to the starting point of the next edge.\n        point.copy(circlePos).sub(points[next]);\n        region = voronoiRegion(edge, point);\n        if (region === LEFT_VORONOI_REGION) {\n          // It's in the region we want.  Check if the circle intersects the point.\n          var dist = point.len();\n          if (dist > radius) {\n            // No intersection\n            T_VECTORS.push(circlePos);\n            T_VECTORS.push(edge);\n            T_VECTORS.push(point);\n            return false;\n          } else if (response) {\n            // It intersects, calculate the overlap.\n            response['bInA'] = false;\n            overlapN = point.normalize();\n            overlap = radius - dist;\n          }\n        }\n        // Otherwise, it's the middle region:\n      } else {\n        // Need to check if the circle is intersecting the edge,\n        // Change the edge into its \"edge normal\".\n        var normal = edge.perp().normalize();\n        // Find the perpendicular distance between the center of the\n        // circle and the edge.\n        var dist = point.dot(normal);\n        var distAbs = Math.abs(dist);\n        // If the circle is on the outside of the edge, there is no intersection.\n        if (dist > 0 && distAbs > radius) {\n          // No intersection\n          T_VECTORS.push(circlePos);\n          T_VECTORS.push(normal);\n          T_VECTORS.push(point);\n          return false;\n        } else if (response) {\n          // It intersects, calculate the overlap.\n          overlapN = normal;\n          overlap = radius - dist;\n          // If the center of the circle is on the outside of the edge, or part of the\n          // circle is on the outside, the circle is not fully inside the polygon.\n          if (dist >= 0 || overlap < 2 * radius) {\n            response['bInA'] = false;\n          }\n        }\n      }\n\n      // If this is the smallest overlap we've seen, keep it.\n      // (overlapN may be null if the circle was in the wrong Voronoi region).\n      if (overlapN && response && Math.abs(overlap) < Math.abs(response['overlap'])) {\n        response['overlap'] = overlap;\n        response['overlapN'].copy(overlapN);\n      }\n    }\n\n    // Calculate the final overlap vector - based on the smallest overlap.\n    if (response) {\n      response['a'] = polygon;\n      response['b'] = circle;\n      response['overlapV'].copy(response['overlapN']).scale(response['overlap']);\n    }\n    T_VECTORS.push(circlePos);\n    T_VECTORS.push(edge);\n    T_VECTORS.push(point);\n    return true;\n  }\n  SAT['testPolygonCircle'] = testPolygonCircle;\n\n  // Check if a circle and a polygon collide.\n  //\n  // **NOTE:** This is slightly less efficient than polygonCircle as it just\n  // runs polygonCircle and reverses everything at the end.\n  /**\n   * @param {Circle} circle The circle.\n   * @param {Polygon} polygon The polygon.\n   * @param {Response=} response Response object (optional) that will be populated if\n   *   they interset.\n   * @return {boolean} true if they intersect, false if they don't.\n   */\n  function testCirclePolygon(circle, polygon, response) {\n    // Test the polygon against the circle.\n    var result = testPolygonCircle(polygon, circle, response);\n    if (result && response) {\n      // Swap A and B in the response.\n      var a = response['a'];\n      var aInB = response['aInB'];\n      response['overlapN'].reverse();\n      response['overlapV'].reverse();\n      response['a'] = response['b'];\n      response['b'] = a;\n      response['aInB'] = response['bInA'];\n      response['bInA'] = aInB;\n    }\n    return result;\n  }\n  SAT['testCirclePolygon'] = testCirclePolygon;\n\n  // Checks whether polygons collide.\n  /**\n   * @param {Polygon} a The first polygon.\n   * @param {Polygon} b The second polygon.\n   * @param {Response=} response Response object (optional) that will be populated if\n   *   they interset.\n   * @return {boolean} true if they intersect, false if they don't.\n   */\n  function testPolygonPolygon(a, b, response) {\n    var aPoints = a['calcPoints'];\n    var aLen = aPoints.length;\n    var bPoints = b['calcPoints'];\n    var bLen = bPoints.length;\n    // If any of the edge normals of A is a separating axis, no intersection.\n    for (var i = 0; i < aLen; i++) {\n      if (isSeparatingAxis(a['pos'], b['pos'], aPoints, bPoints, a['normals'][i], response)) {\n        return false;\n      }\n    }\n    // If any of the edge normals of B is a separating axis, no intersection.\n    for (var i = 0; i < bLen; i++) {\n      if (isSeparatingAxis(a['pos'], b['pos'], aPoints, bPoints, b['normals'][i], response)) {\n        return false;\n      }\n    }\n    // Since none of the edge normals of A or B are a separating axis, there is an intersection\n    // and we've already calculated the smallest overlap (in isSeparatingAxis).  Calculate the\n    // final overlap vector.\n    if (response) {\n      response['a'] = a;\n      response['b'] = b;\n      response['overlapV'].copy(response['overlapN']).scale(response['overlap']);\n    }\n    return true;\n  }\n  SAT['testPolygonPolygon'] = testPolygonPolygon;\n\n  return SAT;\n}));\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/sat/SAT.js?");

/***/ }),

/***/ "./node_modules/uuid-by-string/src/index.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid-by-string/src/index.js ***!
  \**************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var lib = __webpack_require__(/*! ./lib */ \"./node_modules/uuid-by-string/src/lib.js\");\n\n/** Uin8Array with zero items */\nvar EMPTY_UINT8_ARRAY = new Uint8Array(0);\n\n/**\n * Generates the Name-Based UUID hashes v3 and v5 according to RFC-4122\n * https://tools.ietf.org/html/rfc4122#section-4.3\n * @param {string} target Hashing target\n * @param {string} [namespace] Some name space within which generation occurs\n * @param {3|5} [version=5] Version of UUID. Available versions is 3 and 5\n * according to RFC-4122. The version is responsible for the hashing algorithm:\n * version 3 uses MD5, and version 5 uses SHA-1. Default is 5.\n * @returns {string} UUID\n */\nfunction generateUuid(target, namespace, version) {\n  if (typeof target !== 'string') {\n    throw TypeError('Value must be string');\n  }\n\n  if (typeof namespace === 'number') {\n    return generateUuid(target, undefined, namespace);\n  }\n\n  if (version == null) {\n    return generateUuid(target, namespace, 5);\n  }\n\n  if (version !== 3 && version !== 5) {\n    throw TypeError('Version of UUID can be only 3 or 5');\n  }\n\n  // Parsing target chars\n  var targetCharBuffer = lib.stringToCharBuffer(target);\n  var namespaceCharBuffer = typeof namespace === 'string' ? lib.parseUuid(namespace) : EMPTY_UINT8_ARRAY;\n\n  // Concatenation two buffers of strings to one\n  var buffer = lib.concatBuffers(namespaceCharBuffer, targetCharBuffer);\n\n  // Getting hash\n  var hash = version === 3 ? lib.md5Hash(buffer) : lib.sha1Hash(buffer);\n\n  return lib.hashToUuid(hash, version);\n}\n\n/**\n * Export module\n */\nmodule.exports = generateUuid;\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid-by-string/src/index.js?");

/***/ }),

/***/ "./node_modules/uuid-by-string/src/lib.js":
/*!************************************************!*\
  !*** ./node_modules/uuid-by-string/src/lib.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var md5 = __webpack_require__(/*! js-md5 */ \"./node_modules/js-md5/src/md5.js\");\nvar sha1 = __webpack_require__(/*! js-sha1 */ \"./node_modules/js-sha1/src/sha1.js\");\n\n/** List of hex digit for fast accessing by index */\nvar HEX_DIGITS = '0123456789abcdef'.split('');\n\n/** Length of string containing uuid */\nvar UUID_LENGTH = 36;\n\n/** Regular expression for uuid testing */\nvar UUID_REGEXP = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i;\n\n/** Map matching of hex number and corresponding byte */\nvar HEX_TO_BYTE_MAP = (function () {\n  var map = {};\n\n  for (var i = 0; i < 256; i++) {\n    var hex = i.toString(16);\n\n    map[hex.length === 1 ? '0' + hex : hex] = i;\n  }\n\n  return map;\n})();\n\n/**\n * Converts unsigned byte to hex representation\n * @param {number} ubyte The unsigned byte to convert\n * @returns {string} The hex representation\n */\nvar uint8ToHex = function (ubyte) {\n  var first = ubyte >> 4;\n  var second = ubyte - (first << 4);\n\n  return HEX_DIGITS[first] + HEX_DIGITS[second];\n};\n\n/**\n * Converts unsigned byte buffer to hex string\n * @param {Uint8Array} buf The unsigned bytes buffer\n * @returns {string} The hex string representation\n */\nvar uint8ArrayToHex = function (buf) {\n  var out = '';\n\n  for (var i = 0; i < buf.length; i++) {\n    out += uint8ToHex(buf[i]);\n  }\n\n  return out;\n};\n\n/**\n * Converts string to buffer of char codes\n * @param {string} str The string to parse\n * @returns {Uint8Array} Buffer of char codes\n */\nvar stringToCharBuffer = function (str) {\n  var escapedStr = unescape(encodeURIComponent(str));\n  var buffer = new Uint8Array(escapedStr.length);\n\n  for (var i = 0; i < escapedStr.length; i++) {\n    buffer[i] = escapedStr[i].charCodeAt(0);\n  }\n\n  return buffer;\n};\n\n/**\n * Generates MD5 hash from buffer\n * @param {Uint8Array} buf Buffer of char codes\n * @returns {Uint8Array} MD5 hash buffer\n */\nvar md5Hash = function (buf) {\n  return new Uint8Array(md5.arrayBuffer(buf));\n};\n\n/**\n * Generates SHA-1 hash from buffer\n * @param {Uint8Array} buf Buffer of char codes\n * @returns {Uint8Array} SHA-1 hash buffer\n */\nvar sha1Hash = function (buf) {\n  return new Uint8Array(sha1.arrayBuffer(buf));\n};\n\n/**\n * Concatenates two uint8 buffers\n * @param {Uint8Array} buf1 The first buffer to concatenate\n * @param {Uint8Array} buf2 The second buffer to concatenate\n * @returns {Uint8Array} Concatenation result\n */\nvar concatBuffers = function (buf1, buf2) {\n  var out = new Uint8Array(buf1.length + buf2.length);\n\n  out.set(new Uint8Array(buf1), 0);\n  out.set(new Uint8Array(buf2), buf1.byteLength);\n\n  return out;\n};\n\n/**\n * Validates UUID\n * @param {string} uuid UUID to validate\n * @return {boolean} Validation result\n */\nvar validateUuid = function (uuid) {\n  return typeof uuid === 'string' && uuid.length === UUID_LENGTH && UUID_REGEXP.test(uuid);\n};\n\n/**\n * Parses UUID into a buffer\n * @param {string} uuid UUID to parse\n * @returns {Uint8Array} Ready buffer\n */\nvar parseUuid = function (uuid) {\n  if (!validateUuid(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var buf = new Uint8Array(16);\n  var strIndex = 0;\n  var bufIndex = 0;\n\n  while (strIndex < uuid.length) {\n    if (uuid[strIndex] === '-') {\n      strIndex++;\n      continue;\n    }\n\n    var oct = (uuid[strIndex] + uuid[strIndex + 1]).toLowerCase();\n    buf[bufIndex] = HEX_TO_BYTE_MAP[oct];\n\n    bufIndex++;\n    strIndex += 2;\n  }\n\n  return buf;\n};\n\n/**\n * Creates uuid from hash buffer\n * @param {Uint8Array} hashBuffer Hash buffer\n * @param {3|5} version Version of uuid\n * @returns {string} The uuid\n */\nvar hashToUuid = function (hashBuffer, version) {\n  return (\n    // The low field of the timestamp\n    uint8ArrayToHex(hashBuffer.slice(0, 4)) +\n    '-' +\n    // The middle field of the timestamp\n    uint8ArrayToHex(hashBuffer.slice(4, 6)) +\n    '-' +\n    // The high field of the timestamp multiplexed with the version number\n    uint8ToHex((hashBuffer[6] & 0x0f) | parseInt(version * 10, 16)) +\n    uint8ToHex(hashBuffer[7]) +\n    '-' +\n    // The high field of the clock sequence multiplexed with the variant\n    uint8ToHex((hashBuffer[8] & 0x3f) | 0x80) +\n    // The low field of the clock sequence\n    uint8ToHex(hashBuffer[9]) +\n    '-' +\n    //  The spatially unique node identifier\n    uint8ArrayToHex(hashBuffer.slice(10, 16))\n  );\n};\n\nmodule.exports = {\n  uint8ToHex: uint8ToHex,\n  uint8ArrayToHex: uint8ArrayToHex,\n  stringToCharBuffer: stringToCharBuffer,\n  md5Hash: md5Hash,\n  sha1Hash: sha1Hash,\n  concatBuffers: concatBuffers,\n  validateUuid: validateUuid,\n  parseUuid: parseUuid,\n  hashToUuid: hashToUuid,\n};\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid-by-string/src/lib.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NIL: () => (/* reexport safe */ _nil_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   parse: () => (/* reexport safe */ _parse_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   stringify: () => (/* reexport safe */ _stringify_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   v1: () => (/* reexport safe */ _v1_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   v3: () => (/* reexport safe */ _v3_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   v4: () => (/* reexport safe */ _v4_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   v5: () => (/* reexport safe */ _v5_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   validate: () => (/* reexport safe */ _validate_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   version: () => (/* reexport safe */ _version_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _v1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v1.js */ \"./node_modules/uuid/dist/esm-browser/v1.js\");\n/* harmony import */ var _v3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./v3.js */ \"./node_modules/uuid/dist/esm-browser/v3.js\");\n/* harmony import */ var _v4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./v4.js */ \"./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _v5_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./v5.js */ \"./node_modules/uuid/dist/esm-browser/v5.js\");\n/* harmony import */ var _nil_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./nil.js */ \"./node_modules/uuid/dist/esm-browser/nil.js\");\n/* harmony import */ var _version_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./version.js */ \"./node_modules/uuid/dist/esm-browser/version.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/index.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/md5.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/md5.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (md5);\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/md5.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/nil.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/nil.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ('00000000-0000-0000-0000-000000000000');\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/nil.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/parse.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/parse.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction parse(uuid) {\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (parse);\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/parse.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/regex.js":
/*!*****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/regex.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/regex.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/rng.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/rng.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/rng.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/sha1.js":
/*!****************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/sha1.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sha1);\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/sha1.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/stringify.js":
/*!*********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/stringify.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/stringify.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v1.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v1.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(b);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v1);\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/v1.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v3.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v3.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _md5_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./md5.js */ \"./node_modules/uuid/dist/esm-browser/md5.js\");\n\n\nvar v3 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v3', 0x30, _md5_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v3);\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/v3.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v35.js":
/*!***************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v35.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DNS: () => (/* binding */ DNS),\n/* harmony export */   URL: () => (/* binding */ URL),\n/* harmony export */   \"default\": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parse.js */ \"./node_modules/uuid/dist/esm-browser/parse.js\");\n\n\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nvar DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nvar URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\n/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0,_parse_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/v35.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v4.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v4.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"./node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"./node_modules/uuid/dist/esm-browser/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rnds);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/v4.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/v5.js":
/*!**************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/v5.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _v35_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./v35.js */ \"./node_modules/uuid/dist/esm-browser/v35.js\");\n/* harmony import */ var _sha1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sha1.js */ \"./node_modules/uuid/dist/esm-browser/sha1.js\");\n\n\nvar v5 = (0,_v35_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])('v5', 0x50, _sha1_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v5);\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/v5.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/validate.js":
/*!********************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/validate.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"./node_modules/uuid/dist/esm-browser/regex.js\");\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/validate.js?");

/***/ }),

/***/ "./node_modules/uuid/dist/esm-browser/version.js":
/*!*******************************************************!*\
  !*** ./node_modules/uuid/dist/esm-browser/version.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"./node_modules/uuid/dist/esm-browser/validate.js\");\n\n\nfunction version(uuid) {\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (version);\n\n//# sourceURL=webpack://tmb-host/./node_modules/uuid/dist/esm-browser/version.js?");

/***/ }),

/***/ "./node_modules/ws/browser.js":
/*!************************************!*\
  !*** ./node_modules/ws/browser.js ***!
  \************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function () {\n  throw new Error(\n    'ws does not work in the browser. Browser clients must use the native ' +\n      'WebSocket object'\n  );\n};\n\n\n//# sourceURL=webpack://tmb-host/./node_modules/ws/browser.js?");

/***/ })

}]);